{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0","program":"/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","strum","--edition=2018","/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=fc8207f6f7a59e6a","-C","extra-filename=-fc8207f6f7a59e6a","--out-dir","/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","-L","dependency=/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps/libstrum-fc8207f6f7a59e6a.rmeta"},"prelude":{"crate_id":{"name":"strum","disambiguator":[7354331389088687071,0]},"crate_root":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src","external_crates":[{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}}],"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":0,"byte_end":6538,"line_start":1,"line_end":217,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":0,"byte_end":6538,"line_start":1,"line_end":217,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26}],"decl_id":null,"docs":" # Strum","sig":null,"attributes":[{"value":"/ # Strum","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [![Build Status](https://travis-ci.org/Peternator7/strum.svg?branch=master)](https://travis-ci.org/Peternator7/strum)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":16,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":122}},{"value":"/ [![Latest Version](https://img.shields.io/crates/v/strum.svg)](https://crates.io/crates/strum)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":138,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ [![Rust Documentation](https://docs.rs/strum/badge.svg)](https://docs.rs/strum)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":237,"byte_end":320,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":321,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Strum is a set of macros and traits for working with","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":325,"byte_end":381,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/ enums and strings easier in Rust.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":382,"byte_end":419,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":420,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The full version of the README can be found on [Github](https://github.com/Peternator7/strum).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":424,"byte_end":522,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":523,"byte_end":526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Including Strum in Your Project","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":527,"byte_end":564,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":565,"byte_end":568,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Import strum and strum_macros into your project by adding the following lines to your","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":569,"byte_end":658,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/ Cargo.toml. Strum_macros contains the macros needed to derive all the traits in Strum.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":659,"byte_end":749,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":750,"byte_end":753,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":754,"byte_end":765,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":766,"byte_end":784,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ strum = \"0.21\"","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":785,"byte_end":803,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ strum_macros = \"0.21\"","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":804,"byte_end":829,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":830,"byte_end":833,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # You can also access strum_macros exports directly through strum using the \"derive\" feature","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":834,"byte_end":930,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ strum = { version = \"0.21\", features = [\"derive\"] }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":931,"byte_end":986,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":987,"byte_end":994,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":995,"byte_end":998,"line_start":25,"line_end":25,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"additional_attributes","qualname":"::additional_attributes","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","parent":null,"children":[],"decl_id":null,"docs":" # Documentation for Additional Attributes","sig":null,"attributes":[{"value":"/ # Documentation for Additional Attributes","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6540,"byte_end":6585,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6586,"byte_end":6589,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Strum supports several custom attributes to modify the generated code. At the enum level, the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6590,"byte_end":6687,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ `#[strum(serialize_all = \"snake_case\")]` attribute can be used to change the case used when","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6688,"byte_end":6783,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ serializing to and deserializing from strings:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6784,"byte_end":6834,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6835,"byte_end":6838,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6839,"byte_end":6850,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ use std::string::ToString;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6851,"byte_end":6881,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/ use strum;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6882,"byte_end":6896,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/ use strum_macros;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6897,"byte_end":6918,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6919,"byte_end":6922,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Eq, PartialEq, strum_macros::ToString)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6923,"byte_end":6982,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/ #[strum(serialize_all = \"snake_case\")]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":6983,"byte_end":7025,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ enum Brightness {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7026,"byte_end":7047,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/     DarkBlack,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7048,"byte_end":7066,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/     Dim {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7067,"byte_end":7080,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/         glow: usize,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7081,"byte_end":7105,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     },","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7106,"byte_end":7116,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/     #[strum(serialize = \"bright\")]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7117,"byte_end":7155,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/     BrightWhite,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7156,"byte_end":7176,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7177,"byte_end":7182,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7183,"byte_end":7186,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7187,"byte_end":7202,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     String::from(\"dark_black\"),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7203,"byte_end":7238,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/     Brightness::DarkBlack.to_string().as_ref()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7239,"byte_end":7289,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7290,"byte_end":7296,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7297,"byte_end":7312,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     String::from(\"dim\"),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7313,"byte_end":7341,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/     Brightness::Dim { glow: 0 }.to_string().as_ref()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7342,"byte_end":7398,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7399,"byte_end":7405,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7406,"byte_end":7421,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     String::from(\"bright\"),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7422,"byte_end":7453,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/     Brightness::BrightWhite.to_string().as_ref()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7454,"byte_end":7506,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7507,"byte_end":7513,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7514,"byte_end":7521,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7522,"byte_end":7525,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can also apply the `#[strum(ascii_case_insensitive)]` attribute to the enum,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7526,"byte_end":7610,"line_start":37,"line_end":37,"column_start":1,"column_end":85}},{"value":"/ and this has the same effect of applying it to every variant.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7611,"byte_end":7676,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7677,"byte_end":7680,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Custom attributes are applied to a variant by adding `#[strum(parameter=\"value\")]` to the variant.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7681,"byte_end":7783,"line_start":40,"line_end":40,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7784,"byte_end":7787,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - `serialize=\"...\"`: Changes the text that `FromStr()` looks for when parsing a string. This attribute can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7788,"byte_end":7898,"line_start":42,"line_end":42,"column_start":1,"column_end":111}},{"value":"/    be applied multiple times to an element and the enum variant will be parsed if any of them match.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":7899,"byte_end":8003,"line_start":43,"line_end":43,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8004,"byte_end":8007,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - `to_string=\"...\"`: Similar to `serialize`. This value will be included when using `FromStr()`. More importantly,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8008,"byte_end":8126,"line_start":45,"line_end":45,"column_start":1,"column_end":119}},{"value":"/    this specifies what text to use when calling `variant.to_string()` with the `ToString` derivation, or when calling `variant.as_ref()` with `AsRefStr`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8127,"byte_end":8284,"line_start":46,"line_end":46,"column_start":1,"column_end":158}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8285,"byte_end":8288,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - `default`: Applied to a single variant of an enum. The variant must be a Tuple-like","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8289,"byte_end":8378,"line_start":48,"line_end":48,"column_start":1,"column_end":90}},{"value":"/    variant with a single piece of data that can be create from a `&str` i.e. `T: From<&str>`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8379,"byte_end":8476,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/    The generated code will now return the variant with the input string captured as shown below","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8477,"byte_end":8576,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/    instead of failing.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8577,"byte_end":8603,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8604,"byte_end":8607,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     ```rust,ignore","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8608,"byte_end":8630,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/     // Replaces this:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8631,"byte_end":8656,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/     _ => Err(strum::ParseError::VariantNotFound)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8657,"byte_end":8709,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/     // With this in generated code:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8710,"byte_end":8749,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     default => Ok(Variant(default.into()))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8750,"byte_end":8796,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/     ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8797,"byte_end":8808,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/     The plugin will fail if the data doesn't implement From<&str>. You can only have one `default`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8809,"byte_end":8911,"line_start":59,"line_end":59,"column_start":1,"column_end":103}},{"value":"/     on your enum.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8912,"byte_end":8933,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8934,"byte_end":8937,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ - `disabled`: removes variant from generated code.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8938,"byte_end":8992,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8993,"byte_end":8996,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `ascii_case_insensitive`: makes the comparison to this variant case insensitive (ASCII only).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":8997,"byte_end":9096,"line_start":64,"line_end":64,"column_start":1,"column_end":100}},{"value":"/   If the whole enum is marked `ascii_case_insensitive`, you can specify `ascii_case_insensitive = false`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9097,"byte_end":9205,"line_start":65,"line_end":65,"column_start":1,"column_end":109}},{"value":"/   to disable case insensitivity on this variant.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9206,"byte_end":9258,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9259,"byte_end":9262,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `message=\"..\"`: Adds a message to enum variant. This is used in conjunction with the `EnumMessage`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9263,"byte_end":9367,"line_start":68,"line_end":68,"column_start":1,"column_end":105}},{"value":"/    trait to associate a message with a variant. If `detailed_message` is not provided,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9368,"byte_end":9458,"line_start":69,"line_end":69,"column_start":1,"column_end":91}},{"value":"/    then `message` will also be returned when get_detailed_message() is called.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9459,"byte_end":9541,"line_start":70,"line_end":70,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9542,"byte_end":9545,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ - `detailed_message=\"..\"`: Adds a more detailed message to a variant. If this value is omitted, then","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9546,"byte_end":9650,"line_start":72,"line_end":72,"column_start":1,"column_end":105}},{"value":"/    `message` will be used in it's place.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9651,"byte_end":9695,"line_start":73,"line_end":73,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9696,"byte_end":9699,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - `props(key=\"value\")`: Enables associating additional information with a given variant.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/additional_attributes.rs","byte_start":9700,"byte_end":9792,"line_start":75,"line_end":75,"column_start":1,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":28},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1297,"byte_end":1312,"line_start":36,"line_end":36,"column_start":5,"column_end":20},"name":"VariantNotFound","qualname":"::ParseError::VariantNotFound","value":"ParseError::VariantNotFound","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":27},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1280,"byte_end":1290,"line_start":35,"line_end":35,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::ParseError","value":"pub enum ParseError { VariantNotFound, }","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" The ParseError enum is a collection of all the possible reasons\n an enum can fail to parse from a string.\n","sig":null,"attributes":[{"value":"/ The ParseError enum is a collection of all the possible reasons","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1107,"byte_end":1174,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ an enum can fail to parse from a string.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1175,"byte_end":1219,"line_start":33,"line_end":33,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2801,"byte_end":2817,"line_start":91,"line_end":91,"column_start":11,"column_end":27},"name":"IntoEnumIterator","qualname":"::IntoEnumIterator","value":"IntoEnumIterator: Sized","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" This trait designates that an `Enum` can be iterated over. It can\n be auto generated using `strum_macros` on your behalf.","sig":null,"attributes":[{"value":"/ This trait designates that an `Enum` can be iterated over. It can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2032,"byte_end":2101,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ be auto generated using `strum_macros` on your behalf.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2102,"byte_end":2160,"line_start":61,"line_end":61,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2161,"byte_end":2164,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2165,"byte_end":2178,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2179,"byte_end":2182,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2183,"byte_end":2194,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2195,"byte_end":2221,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2222,"byte_end":2279,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/ use strum::{EnumIter, IntoEnumIterator};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2280,"byte_end":2324,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2325,"byte_end":2328,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[derive(EnumIter, Debug)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2329,"byte_end":2359,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/ enum Color {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2360,"byte_end":2376,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/     Red,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2377,"byte_end":2389,"line_start":72,"line_end":72,"column_start":1,"column_end":13}},{"value":"/     Green { range: usize },","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2390,"byte_end":2421,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/     Blue(usize),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2422,"byte_end":2442,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/     Yellow,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2443,"byte_end":2458,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2459,"byte_end":2464,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2465,"byte_end":2468,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Iterate over the items in an enum and perform some function on them.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2469,"byte_end":2544,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ fn generic_iterator<E, F>(pred: F)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2545,"byte_end":2583,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/ where","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2584,"byte_end":2593,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/     E: IntoEnumIterator,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2594,"byte_end":2622,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/     F: Fn(E),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2623,"byte_end":2640,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/ {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2641,"byte_end":2646,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     for e in E::iter() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2647,"byte_end":2675,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/         pred(e)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2676,"byte_end":2695,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2696,"byte_end":2705,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2706,"byte_end":2711,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2712,"byte_end":2715,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ generic_iterator::<Color, _>(|color| println!(\"{:?}\", color));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2716,"byte_end":2782,"line_start":89,"line_end":89,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2783,"byte_end":2790,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2836,"byte_end":2844,"line_start":92,"line_end":92,"column_start":10,"column_end":18},"name":"Iterator","qualname":"::IntoEnumIterator::Iterator","value":"type Iterator: Iterator<Item = Self>;","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2877,"byte_end":2881,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"iter","qualname":"::IntoEnumIterator::iter","value":"pub fn iter() -> Self::Iterator","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3597,"byte_end":3608,"line_start":120,"line_end":120,"column_start":11,"column_end":22},"name":"EnumMessage","qualname":"::EnumMessage","value":"EnumMessage","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Associates additional pieces of information with an Enum. This can be\n autoimplemented by deriving `EnumMessage` and annotating your variants with\n `#[strum(message=\"...\")].","sig":null,"attributes":[{"value":"/ Associates additional pieces of information with an Enum. This can be","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2906,"byte_end":2979,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ autoimplemented by deriving `EnumMessage` and annotating your variants with","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2980,"byte_end":3059,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ `#[strum(message=\"...\")].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3060,"byte_end":3089,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3090,"byte_end":3093,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3094,"byte_end":3107,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3108,"byte_end":3111,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3112,"byte_end":3123,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3124,"byte_end":3150,"line_start":104,"line_end":104,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3151,"byte_end":3208,"line_start":105,"line_end":105,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumMessage;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3209,"byte_end":3236,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3237,"byte_end":3240,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumMessage)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3241,"byte_end":3289,"line_start":108,"line_end":108,"column_start":1,"column_end":49}},{"value":"/ enum Pet {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3290,"byte_end":3304,"line_start":109,"line_end":109,"column_start":1,"column_end":15}},{"value":"/     #[strum(message=\"I have a dog\")]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3305,"byte_end":3345,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     #[strum(detailed_message=\"My dog's name is Spots\")]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3346,"byte_end":3405,"line_start":111,"line_end":111,"column_start":1,"column_end":60}},{"value":"/     Dog,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3406,"byte_end":3418,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/     #[strum(message=\"I don't have a cat\")]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3419,"byte_end":3465,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/     Cat,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3466,"byte_end":3478,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3479,"byte_end":3484,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3485,"byte_end":3488,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let my_pet = Pet::Dog;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3489,"byte_end":3515,"line_start":117,"line_end":117,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(\"I have a dog\", my_pet.get_message().unwrap());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3516,"byte_end":3578,"line_start":118,"line_end":118,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3579,"byte_end":3586,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3618,"byte_end":3629,"line_start":121,"line_end":121,"column_start":8,"column_end":19},"name":"get_message","qualname":"::EnumMessage::get_message","value":"pub fn get_message(&Self) -> Option<&'static str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3669,"byte_end":3689,"line_start":122,"line_end":122,"column_start":8,"column_end":28},"name":"get_detailed_message","qualname":"::EnumMessage::get_detailed_message","value":"pub fn get_detailed_message(&Self) -> Option<&'static str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3729,"byte_end":3747,"line_start":123,"line_end":123,"column_start":8,"column_end":26},"name":"get_serializations","qualname":"::EnumMessage::get_serializations","value":"pub fn get_serializations(&Self) -> &'static [&'static str]","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4730,"byte_end":4742,"line_start":153,"line_end":153,"column_start":11,"column_end":23},"name":"EnumProperty","qualname":"::EnumProperty","value":"EnumProperty","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" EnumProperty is a trait that makes it possible to store additional information\n with enum variants. This trait is designed to be used with the macro of the same\n name in the `strum_macros` crate. Currently, the only string literals are supported\n in attributes, the other methods will be implemented as additional attribute types\n become stabilized.","sig":null,"attributes":[{"value":"/ EnumProperty is a trait that makes it possible to store additional information","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3786,"byte_end":3868,"line_start":126,"line_end":126,"column_start":1,"column_end":83}},{"value":"/ with enum variants. This trait is designed to be used with the macro of the same","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3869,"byte_end":3953,"line_start":127,"line_end":127,"column_start":1,"column_end":85}},{"value":"/ name in the `strum_macros` crate. Currently, the only string literals are supported","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":3954,"byte_end":4041,"line_start":128,"line_end":128,"column_start":1,"column_end":88}},{"value":"/ in attributes, the other methods will be implemented as additional attribute types","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4042,"byte_end":4128,"line_start":129,"line_end":129,"column_start":1,"column_end":87}},{"value":"/ become stabilized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4129,"byte_end":4151,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4152,"byte_end":4155,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4156,"byte_end":4169,"line_start":132,"line_end":132,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4170,"byte_end":4173,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4174,"byte_end":4185,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4186,"byte_end":4212,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4213,"byte_end":4270,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumProperty;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4271,"byte_end":4299,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4300,"byte_end":4303,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumProperty)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4304,"byte_end":4353,"line_start":139,"line_end":139,"column_start":1,"column_end":50}},{"value":"/ enum Class {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4354,"byte_end":4370,"line_start":140,"line_end":140,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Ms.Frizzle\", Room=\"201\"))]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4371,"byte_end":4428,"line_start":141,"line_end":141,"column_start":1,"column_end":58}},{"value":"/     History,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4429,"byte_end":4445,"line_start":142,"line_end":142,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Mr.Smith\"))]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4446,"byte_end":4489,"line_start":143,"line_end":143,"column_start":1,"column_end":44}},{"value":"/     #[strum(props(Room=\"103\"))]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4490,"byte_end":4525,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/     Mathematics,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4526,"byte_end":4546,"line_start":145,"line_end":145,"column_start":1,"column_end":21}},{"value":"/     #[strum(props(Time=\"2:30\"))]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4547,"byte_end":4583,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/     Science,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4584,"byte_end":4600,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4601,"byte_end":4606,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4607,"byte_end":4610,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let history = Class::History;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4611,"byte_end":4644,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(\"Ms.Frizzle\", history.get_str(\"Teacher\").unwrap());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4645,"byte_end":4711,"line_start":151,"line_end":151,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4712,"byte_end":4719,"line_start":152,"line_end":152,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4752,"byte_end":4759,"line_start":154,"line_end":154,"column_start":8,"column_end":15},"name":"get_str","qualname":"::EnumProperty::get_str","value":"pub fn get_str(&Self, &str) -> Option<&'static str>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4811,"byte_end":4818,"line_start":155,"line_end":155,"column_start":8,"column_end":15},"name":"get_int","qualname":"::EnumProperty::get_int","value":"pub fn get_int(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4893,"byte_end":4901,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"get_bool","qualname":"::EnumProperty::get_bool","value":"pub fn get_bool(&Self, &str) -> Option<bool>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5209,"byte_end":5220,"line_start":167,"line_end":167,"column_start":11,"column_end":22},"name":"AsStaticRef","qualname":"::AsStaticRef","value":"AsStaticRef<T: ?Sized>","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" A cheap reference-to-reference conversion. Used to convert a value to a\n reference value with `'static` lifetime within generic code.\n #[deprecated(since=\"0.13.0\", note=\"please use `#[derive(IntoStaticStr)]` instead\")]\n","sig":null,"attributes":[{"value":"/ A cheap reference-to-reference conversion. Used to convert a value to a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":4970,"byte_end":5045,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/ reference value with `'static` lifetime within generic code.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5046,"byte_end":5110,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ #[deprecated(since=\"0.13.0\", note=\"please use `#[derive(IntoStaticStr)]` instead\")]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5111,"byte_end":5198,"line_start":166,"line_end":166,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5254,"byte_end":5263,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"as_static","qualname":"::AsStaticRef::as_static","value":"pub fn as_static(&Self) -> &'static T","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5410,"byte_end":5419,"line_start":176,"line_end":176,"column_start":11,"column_end":20},"name":"EnumCount","qualname":"::EnumCount","value":"EnumCount","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" A trait for capturing the number of variants in Enum. This trait can be autoderived by\n `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for capturing the number of variants in Enum. This trait can be autoderived by","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5289,"byte_end":5379,"line_start":174,"line_end":174,"column_start":1,"column_end":91}},{"value":"/ `strum_macros`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5380,"byte_end":5399,"line_start":175,"line_end":175,"column_start":1,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5432,"byte_end":5437,"line_start":177,"line_end":177,"column_start":11,"column_end":16},"name":"COUNT","qualname":"::EnumCount::COUNT","value":"usize","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5574,"byte_end":5586,"line_start":182,"line_end":182,"column_start":11,"column_end":23},"name":"VariantNames","qualname":"::VariantNames","value":"VariantNames","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" A trait for retrieving the names of each variant in Enum. This trait can\n be autoderived by `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for retrieving the names of each variant in Enum. This trait can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5449,"byte_end":5525,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ be autoderived by `strum_macros`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5526,"byte_end":5563,"line_start":181,"line_end":181,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5642,"byte_end":5650,"line_start":184,"line_end":184,"column_start":11,"column_end":19},"name":"VARIANTS","qualname":"::VariantNames::VARIANTS","value":"&'static [&'static str]","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Names of the variants of this enum\n","sig":null,"attributes":[{"value":"/ Names of the variants of this enum","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":5593,"byte_end":5631,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1344,"byte_end":1354,"line_start":39,"line_end":39,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1700,"byte_end":1710,"line_start":49,"line_end":49,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1083,"byte_end":1104,"line_start":30,"line_end":30,"column_start":9,"column_end":30},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1344,"byte_end":1354,"line_start":39,"line_end":39,"column_start":28,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":1700,"byte_end":1710,"line_start":49,"line_end":49,"column_start":28,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.21.0/src/lib.rs","byte_start":2819,"byte_end":2824,"line_start":91,"line_end":91,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2994},"to":{"krate":0,"index":8}}]}