{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0","program":"/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","once_cell","--edition=2018","/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"race\"","--cfg","feature=\"std\"","-C","metadata=29ebe7a07ed638f7","-C","extra-filename=-29ebe7a07ed638f7","--out-dir","/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","-L","dependency=/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps/libonce_cell-29ebe7a07ed638f7.rmeta"},"prelude":{"crate_id":{"name":"once_cell","disambiguator":[3562952757326697264,0]},"crate_root":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src","external_crates":[{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}}],"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":0,"byte_end":38045,"line_start":1,"line_end":1172,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53966,"byte_end":53973,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"alias_span":null,"name":"OnceBox","value":"","parent":{"krate":0,"index":295}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":0,"byte_end":38045,"line_start":1,"line_end":1172,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":81},{"krate":0,"index":190},{"krate":0,"index":295},{"krate":0,"index":373}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `once_cell` provides two new cell-like types, [`unsync::OnceCell`] and [`sync::OnceCell`]. A `OnceCell`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":108}},{"value":"/ might store arbitrary non-`Copy` types, can be assigned to at most once and provides direct access","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":127,"byte_end":229,"line_start":4,"line_end":4,"column_start":1,"column_end":103}},{"value":"/ to the stored contents. The core API looks *roughly* like this (and there's much more inside, read on!):","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":230,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":339,"byte_end":342,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":343,"byte_end":361,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/ impl<T> OnceCell<T> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":362,"byte_end":387,"line_start":8,"line_end":8,"column_start":1,"column_end":26}},{"value":"/     const fn new() -> OnceCell<T> { ... }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":388,"byte_end":433,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/     fn set(&self, value: T) -> Result<(), T> { ... }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":434,"byte_end":490,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/     fn get(&self) -> Option<&T> { ... }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":491,"byte_end":534,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":535,"byte_end":540,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":541,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note that, like with [`RefCell`] and [`Mutex`], the `set` method requires only a shared reference.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":553,"byte_end":655,"line_start":15,"line_end":15,"column_start":1,"column_end":103}},{"value":"/ Because of the single assignment restriction `get` can return a `&T` instead of `Ref<T>`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":656,"byte_end":748,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ or `MutexGuard<T>`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":749,"byte_end":772,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":773,"byte_end":776,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `sync` flavor is thread-safe (that is, implements the [`Sync`] trait), while the `unsync` one is not.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":777,"byte_end":886,"line_start":19,"line_end":19,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":887,"byte_end":890,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`unsync::OnceCell`]: unsync/struct.OnceCell.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":891,"byte_end":944,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`sync::OnceCell`]: sync/struct.OnceCell.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":945,"byte_end":994,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":995,"byte_end":1066,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ [`Mutex`]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1067,"byte_end":1134,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1135,"byte_end":1201,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1202,"byte_end":1205,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Recipes","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1206,"byte_end":1219,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1220,"byte_end":1223,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `OnceCell` might be useful for a variety of patterns.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1224,"byte_end":1281,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1282,"byte_end":1285,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Safe Initialization of Global Data","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1286,"byte_end":1327,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1328,"byte_end":1331,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1332,"byte_end":1343,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use std::{env, io};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1344,"byte_end":1367,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1368,"byte_end":1371,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1372,"byte_end":1406,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1407,"byte_end":1410,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1411,"byte_end":1431,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"/ pub struct Logger {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1432,"byte_end":1455,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/     // ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1456,"byte_end":1470,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1471,"byte_end":1476,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ static INSTANCE: OnceCell<Logger> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1477,"byte_end":1533,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1534,"byte_end":1537,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ impl Logger {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1538,"byte_end":1555,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/     pub fn global() -> &'static Logger {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1556,"byte_end":1600,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/         INSTANCE.get().expect(\"logger is not initialized\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1601,"byte_end":1663,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1664,"byte_end":1673,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1674,"byte_end":1677,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     fn from_cli(args: env::Args) -> Result<Logger, std::io::Error> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1678,"byte_end":1750,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/        // ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1751,"byte_end":1768,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ #      Ok(Logger {})","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1769,"byte_end":1793,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1794,"byte_end":1803,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1804,"byte_end":1809,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1810,"byte_end":1813,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1814,"byte_end":1829,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/     let logger = Logger::from_cli(env::args()).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1830,"byte_end":1890,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/     INSTANCE.set(logger).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1891,"byte_end":1929,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"/     // use `Logger::global()` from now on","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1930,"byte_end":1975,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1976,"byte_end":1981,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1982,"byte_end":1989,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1990,"byte_end":1993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Lazy Initialized Global Data","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":1994,"byte_end":2029,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2030,"byte_end":2033,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This is essentially the `lazy_static!` macro, but without a macro.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2034,"byte_end":2104,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2105,"byte_end":2108,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2109,"byte_end":2120,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ use std::{sync::Mutex, collections::HashMap};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2121,"byte_end":2170,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2171,"byte_end":2174,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2175,"byte_end":2209,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2210,"byte_end":2213,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ fn global_data() -> &'static Mutex<HashMap<i32, String>> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2214,"byte_end":2276,"line_start":71,"line_end":71,"column_start":1,"column_end":63}},{"value":"/     static INSTANCE: OnceCell<Mutex<HashMap<i32, String>>> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2277,"byte_end":2358,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/     INSTANCE.get_or_init(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2359,"byte_end":2392,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/         let mut m = HashMap::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2393,"byte_end":2432,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/         m.insert(13, \"Spica\".to_string());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2433,"byte_end":2479,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         m.insert(74, \"Hoyten\".to_string());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2480,"byte_end":2527,"line_start":76,"line_end":76,"column_start":1,"column_end":48}},{"value":"/         Mutex::new(m)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2528,"byte_end":2553,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2554,"byte_end":2564,"line_start":78,"line_end":78,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2565,"byte_end":2570,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2571,"byte_end":2578,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2579,"byte_end":2582,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ There are also the [`sync::Lazy`] and [`unsync::Lazy`] convenience types to streamline this pattern:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2583,"byte_end":2687,"line_start":82,"line_end":82,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2688,"byte_end":2691,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2692,"byte_end":2703,"line_start":84,"line_end":84,"column_start":1,"column_end":12}},{"value":"/ use std::{sync::Mutex, collections::HashMap};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2704,"byte_end":2753,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2754,"byte_end":2784,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2785,"byte_end":2788,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ static GLOBAL_DATA: Lazy<Mutex<HashMap<i32, String>>> = Lazy::new(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2789,"byte_end":2863,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/     let mut m = HashMap::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2864,"byte_end":2899,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/     m.insert(13, \"Spica\".to_string());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2900,"byte_end":2942,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/     m.insert(74, \"Hoyten\".to_string());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2943,"byte_end":2986,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/     Mutex::new(m)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":2987,"byte_end":3008,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3009,"byte_end":3016,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3017,"byte_end":3020,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3021,"byte_end":3036,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/     println!(\"{:?}\", GLOBAL_DATA.lock().unwrap());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3037,"byte_end":3091,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3092,"byte_end":3097,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3098,"byte_end":3105,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3106,"byte_end":3109,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Note that the variable that holds `Lazy` is declared as `static`, *not*","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3110,"byte_end":3185,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"/ `const`. This is important: using `const` instead compiles, but works wrong.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3186,"byte_end":3266,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3267,"byte_end":3270,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ [`sync::Lazy`]: sync/struct.Lazy.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3271,"byte_end":3312,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/ [`unsync::Lazy`]: unsync/struct.Lazy.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3313,"byte_end":3358,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3359,"byte_end":3362,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ## General purpose lazy evaluation","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3363,"byte_end":3401,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3402,"byte_end":3405,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Unlike `lazy_static!`, `Lazy` works with local variables.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3406,"byte_end":3467,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3468,"byte_end":3471,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3472,"byte_end":3483,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3484,"byte_end":3516,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3517,"byte_end":3520,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3521,"byte_end":3536,"line_start":113,"line_end":113,"column_start":1,"column_end":16}},{"value":"/     let ctx = vec![1, 2, 3];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3537,"byte_end":3569,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/     let thunk = Lazy::new(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3570,"byte_end":3604,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/         ctx.iter().sum::<i32>()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3605,"byte_end":3640,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3641,"byte_end":3652,"line_start":117,"line_end":117,"column_start":1,"column_end":12}},{"value":"/     assert_eq!(*thunk, 6);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3653,"byte_end":3683,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3684,"byte_end":3689,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3690,"byte_end":3697,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3698,"byte_end":3701,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ If you need a lazy field in a struct, you probably should use `OnceCell`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3702,"byte_end":3778,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ directly, because that will allow you to access `self` during initialization.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3779,"byte_end":3860,"line_start":123,"line_end":123,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3861,"byte_end":3864,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3865,"byte_end":3876,"line_start":125,"line_end":125,"column_start":1,"column_end":12}},{"value":"/ use std::{fs, path::PathBuf};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3877,"byte_end":3910,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3911,"byte_end":3914,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3915,"byte_end":3951,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3952,"byte_end":3955,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ struct Ctx {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3956,"byte_end":3972,"line_start":130,"line_end":130,"column_start":1,"column_end":17}},{"value":"/     config_path: PathBuf,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":3973,"byte_end":4002,"line_start":131,"line_end":131,"column_start":1,"column_end":30}},{"value":"/     config: OnceCell<String>,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4003,"byte_end":4036,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4037,"byte_end":4042,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4043,"byte_end":4046,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ impl Ctx {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4047,"byte_end":4061,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/     pub fn get_config(&self) -> Result<&str, std::io::Error> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4062,"byte_end":4128,"line_start":136,"line_end":136,"column_start":1,"column_end":67}},{"value":"/         let cfg = self.config.get_or_try_init(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4129,"byte_end":4183,"line_start":137,"line_end":137,"column_start":1,"column_end":55}},{"value":"/             fs::read_to_string(&self.config_path)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4184,"byte_end":4237,"line_start":138,"line_end":138,"column_start":1,"column_end":54}},{"value":"/         })?;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4238,"byte_end":4254,"line_start":139,"line_end":139,"column_start":1,"column_end":17}},{"value":"/         Ok(cfg.as_str())","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4255,"byte_end":4283,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4284,"byte_end":4293,"line_start":141,"line_end":141,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4294,"byte_end":4299,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4300,"byte_end":4307,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4308,"byte_end":4311,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Lazily Compiled Regex","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4312,"byte_end":4340,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4341,"byte_end":4344,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This is a `regex!` macro which takes a string literal and returns an","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4345,"byte_end":4417,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/ *expression* that evaluates to a `&'static Regex`:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4418,"byte_end":4472,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4473,"byte_end":4476,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4477,"byte_end":4484,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ macro_rules! regex {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4485,"byte_end":4509,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/     ($re:literal $(,)?) => {{","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4510,"byte_end":4543,"line_start":152,"line_end":152,"column_start":1,"column_end":34}},{"value":"/         static RE: once_cell::sync::OnceCell<regex::Regex> = once_cell::sync::OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4544,"byte_end":4642,"line_start":153,"line_end":153,"column_start":1,"column_end":99}},{"value":"/         RE.get_or_init(|| regex::Regex::new($re).unwrap())","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4643,"byte_end":4705,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"/     }};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4706,"byte_end":4717,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4718,"byte_end":4723,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4724,"byte_end":4731,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4732,"byte_end":4735,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This macro can be useful to avoid the \"compile regex on every loop iteration\" problem.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4736,"byte_end":4826,"line_start":159,"line_end":159,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4827,"byte_end":4830,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ## Runtime `include_bytes!`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4831,"byte_end":4862,"line_start":161,"line_end":161,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4863,"byte_end":4866,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ The `include_bytes` macro is useful to include test resources, but it slows","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4867,"byte_end":4946,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/ down test compilation a lot. An alternative is to load the resources at","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":4947,"byte_end":5022,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/ runtime:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5023,"byte_end":5035,"line_start":165,"line_end":165,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5036,"byte_end":5039,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5040,"byte_end":5047,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5048,"byte_end":5072,"line_start":168,"line_end":168,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5073,"byte_end":5076,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5077,"byte_end":5111,"line_start":170,"line_end":170,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5112,"byte_end":5115,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ pub struct TestResource {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5116,"byte_end":5145,"line_start":172,"line_end":172,"column_start":1,"column_end":30}},{"value":"/     path: &'static str,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5146,"byte_end":5173,"line_start":173,"line_end":173,"column_start":1,"column_end":28}},{"value":"/     cell: OnceCell<Vec<u8>>,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5174,"byte_end":5206,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5207,"byte_end":5212,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5213,"byte_end":5216,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ impl TestResource {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5217,"byte_end":5240,"line_start":177,"line_end":177,"column_start":1,"column_end":24}},{"value":"/     pub const fn new(path: &'static str) -> TestResource {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5241,"byte_end":5303,"line_start":178,"line_end":178,"column_start":1,"column_end":63}},{"value":"/         TestResource { path, cell: OnceCell::new() }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5304,"byte_end":5360,"line_start":179,"line_end":179,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5361,"byte_end":5370,"line_start":180,"line_end":180,"column_start":1,"column_end":10}},{"value":"/     pub fn bytes(&self) -> &[u8] {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5371,"byte_end":5409,"line_start":181,"line_end":181,"column_start":1,"column_end":39}},{"value":"/         self.cell.get_or_init(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5410,"byte_end":5448,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/             let dir = std::env::var(\"CARGO_MANIFEST_DIR\").unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5449,"byte_end":5520,"line_start":183,"line_end":183,"column_start":1,"column_end":72}},{"value":"/             let path = Path::new(dir.as_str()).join(self.path);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5521,"byte_end":5588,"line_start":184,"line_end":184,"column_start":1,"column_end":68}},{"value":"/             std::fs::read(&path).unwrap_or_else(|_err| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5589,"byte_end":5649,"line_start":185,"line_end":185,"column_start":1,"column_end":61}},{"value":"/                 panic!(\"failed to load test resource: {}\", path.display())","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5650,"byte_end":5728,"line_start":186,"line_end":186,"column_start":1,"column_end":79}},{"value":"/             })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5729,"byte_end":5747,"line_start":187,"line_end":187,"column_start":1,"column_end":19}},{"value":"/         }).as_slice()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5748,"byte_end":5773,"line_start":188,"line_end":188,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5774,"byte_end":5783,"line_start":189,"line_end":189,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5784,"byte_end":5789,"line_start":190,"line_end":190,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5790,"byte_end":5793,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ static TEST_IMAGE: TestResource = TestResource::new(\"test_data/lena.png\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5794,"byte_end":5872,"line_start":192,"line_end":192,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5873,"byte_end":5876,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ #[test]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5877,"byte_end":5888,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ fn test_sobel_filter() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5889,"byte_end":5917,"line_start":195,"line_end":195,"column_start":1,"column_end":29}},{"value":"/     let rgb: &[u8] = TEST_IMAGE.bytes();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5918,"byte_end":5962,"line_start":196,"line_end":196,"column_start":1,"column_end":45}},{"value":"/     // ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5963,"byte_end":5977,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/ # drop(rgb);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5978,"byte_end":5994,"line_start":198,"line_end":198,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":5995,"byte_end":6000,"line_start":199,"line_end":199,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6001,"byte_end":6008,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6009,"byte_end":6012,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ## `lateinit`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6013,"byte_end":6030,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6031,"byte_end":6034,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ `LateInit` type for delayed initialization. It is reminiscent of Kotlin's","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6035,"byte_end":6112,"line_start":204,"line_end":204,"column_start":1,"column_end":78}},{"value":"/ `lateinit` keyword and allows construction of cyclic data structures:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6113,"byte_end":6186,"line_start":205,"line_end":205,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6187,"byte_end":6190,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6191,"byte_end":6194,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6195,"byte_end":6202,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6203,"byte_end":6237,"line_start":209,"line_end":209,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6238,"byte_end":6241,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6242,"byte_end":6262,"line_start":211,"line_end":211,"column_start":1,"column_end":21}},{"value":"/ pub struct LateInit<T> { cell: OnceCell<T> }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6263,"byte_end":6311,"line_start":212,"line_end":212,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6312,"byte_end":6315,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ impl<T> LateInit<T> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6316,"byte_end":6341,"line_start":214,"line_end":214,"column_start":1,"column_end":26}},{"value":"/     pub fn init(&self, value: T) {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6342,"byte_end":6380,"line_start":215,"line_end":215,"column_start":1,"column_end":39}},{"value":"/         assert!(self.cell.set(value).is_ok())","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6381,"byte_end":6430,"line_start":216,"line_end":216,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6431,"byte_end":6440,"line_start":217,"line_end":217,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6441,"byte_end":6446,"line_start":218,"line_end":218,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6447,"byte_end":6450,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ impl<T> Default for LateInit<T> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6451,"byte_end":6488,"line_start":220,"line_end":220,"column_start":1,"column_end":38}},{"value":"/     fn default() -> Self { LateInit { cell: OnceCell::default() } }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6489,"byte_end":6560,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6561,"byte_end":6566,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6567,"byte_end":6570,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ impl<T> std::ops::Deref for LateInit<T> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6571,"byte_end":6616,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/     type Target = T;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6617,"byte_end":6641,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"/     fn deref(&self) -> &T {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6642,"byte_end":6673,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/         self.cell.get().unwrap()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6674,"byte_end":6710,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6711,"byte_end":6720,"line_start":228,"line_end":228,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6721,"byte_end":6726,"line_start":229,"line_end":229,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6727,"byte_end":6730,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default, Debug)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6731,"byte_end":6760,"line_start":231,"line_end":231,"column_start":1,"column_end":30}},{"value":"/ struct A<'a> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6761,"byte_end":6779,"line_start":232,"line_end":232,"column_start":1,"column_end":19}},{"value":"/     b: LateInit<&'a B<'a>>,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6780,"byte_end":6811,"line_start":233,"line_end":233,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6812,"byte_end":6817,"line_start":234,"line_end":234,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6818,"byte_end":6821,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default, Debug)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6822,"byte_end":6851,"line_start":236,"line_end":236,"column_start":1,"column_end":30}},{"value":"/ struct B<'a> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6852,"byte_end":6870,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/     a: LateInit<&'a A<'a>>","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6871,"byte_end":6901,"line_start":238,"line_end":238,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6902,"byte_end":6907,"line_start":239,"line_end":239,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6908,"byte_end":6911,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ fn build_cycle() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6912,"byte_end":6934,"line_start":241,"line_end":241,"column_start":1,"column_end":23}},{"value":"/     let a = A::default();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6935,"byte_end":6964,"line_start":242,"line_end":242,"column_start":1,"column_end":30}},{"value":"/     let b = B::default();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6965,"byte_end":6994,"line_start":243,"line_end":243,"column_start":1,"column_end":30}},{"value":"/     a.b.init(&b);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":6995,"byte_end":7016,"line_start":244,"line_end":244,"column_start":1,"column_end":22}},{"value":"/     b.a.init(&a);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7017,"byte_end":7038,"line_start":245,"line_end":245,"column_start":1,"column_end":22}},{"value":"/     println!(\"{:?}\", a.b.a.b.a);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7039,"byte_end":7075,"line_start":246,"line_end":246,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7076,"byte_end":7081,"line_start":247,"line_end":247,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7082,"byte_end":7089,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7090,"byte_end":7093,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Comparison with std","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7094,"byte_end":7119,"line_start":250,"line_end":250,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7120,"byte_end":7123,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ |`!Sync` types         | Access Mode            | Drawbacks                                     |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7124,"byte_end":7225,"line_start":252,"line_end":252,"column_start":1,"column_end":102}},{"value":"/ |----------------------|------------------------|-----------------------------------------------|","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7226,"byte_end":7327,"line_start":253,"line_end":253,"column_start":1,"column_end":102}},{"value":"/ |`Cell<T>`             | `T`                    | requires `T: Copy` for `get`                  |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7328,"byte_end":7429,"line_start":254,"line_end":254,"column_start":1,"column_end":102}},{"value":"/ |`RefCell<T>`          | `RefMut<T>` / `Ref<T>` | may panic at runtime                          |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7430,"byte_end":7531,"line_start":255,"line_end":255,"column_start":1,"column_end":102}},{"value":"/ |`unsync::OnceCell<T>` | `&T`                   | assignable only once                          |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7532,"byte_end":7633,"line_start":256,"line_end":256,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7634,"byte_end":7637,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ |`Sync` types          | Access Mode            | Drawbacks                                     |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7638,"byte_end":7739,"line_start":258,"line_end":258,"column_start":1,"column_end":102}},{"value":"/ |----------------------|------------------------|-----------------------------------------------|","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7740,"byte_end":7841,"line_start":259,"line_end":259,"column_start":1,"column_end":102}},{"value":"/ |`AtomicT`             | `T`                    | works only with certain `Copy` types          |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7842,"byte_end":7943,"line_start":260,"line_end":260,"column_start":1,"column_end":102}},{"value":"/ |`Mutex<T>`            | `MutexGuard<T>`        | may deadlock at runtime, may block the thread |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":7944,"byte_end":8045,"line_start":261,"line_end":261,"column_start":1,"column_end":102}},{"value":"/ |`sync::OnceCell<T>`   | `&T`                   | assignable only once, may block the thread    |","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8046,"byte_end":8147,"line_start":262,"line_end":262,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8148,"byte_end":8151,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ Technically, calling `get_or_init` will also cause a panic or a deadlock if it recursively calls","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8152,"byte_end":8252,"line_start":264,"line_end":264,"column_start":1,"column_end":101}},{"value":"/ itself. However, because the assignment can happen only once, such cases should be more rare than","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8253,"byte_end":8354,"line_start":265,"line_end":265,"column_start":1,"column_end":102}},{"value":"/ equivalents with `RefCell` and `Mutex`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8355,"byte_end":8398,"line_start":266,"line_end":266,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8399,"byte_end":8402,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # Minimum Supported `rustc` Version","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8403,"byte_end":8442,"line_start":268,"line_end":268,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8443,"byte_end":8446,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This crate's minimum supported `rustc` version is `1.36.0`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8447,"byte_end":8510,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8511,"byte_end":8514,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ If only the `std` feature is enabled, MSRV will be updated conservatively.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8515,"byte_end":8593,"line_start":272,"line_end":272,"column_start":1,"column_end":79}},{"value":"/ When using other features, like `parking_lot`, MSRV might be updated more frequently, up to the latest stable.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8594,"byte_end":8708,"line_start":273,"line_end":273,"column_start":1,"column_end":115}},{"value":"/ In both cases, increasing MSRV is *not* considered a semver-breaking change.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8709,"byte_end":8789,"line_start":274,"line_end":274,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8790,"byte_end":8793,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ # Implementation details","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8794,"byte_end":8822,"line_start":276,"line_end":276,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8823,"byte_end":8826,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ The implementation is based on the [`lazy_static`](https://github.com/rust-lang-nursery/lazy-static.rs/)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8827,"byte_end":8935,"line_start":278,"line_end":278,"column_start":1,"column_end":109}},{"value":"/ and [`lazy_cell`](https://github.com/indiv0/lazycell/) crates and [`std::sync::Once`]. In some sense,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":8936,"byte_end":9041,"line_start":279,"line_end":279,"column_start":1,"column_end":106}},{"value":"/ `once_cell` just streamlines and unifies those APIs.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9042,"byte_end":9098,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9099,"byte_end":9102,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ To implement a sync flavor of `OnceCell`, this crates uses either a custom","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9103,"byte_end":9181,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/ re-implementation of `std::sync::Once` or `parking_lot::Mutex`. This is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9182,"byte_end":9257,"line_start":283,"line_end":283,"column_start":1,"column_end":76}},{"value":"/ controlled by the `parking_lot` feature (disabled by default). Performance","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9258,"byte_end":9336,"line_start":284,"line_end":284,"column_start":1,"column_end":79}},{"value":"/ is the same for both cases, but the `parking_lot` based `OnceCell<T>` is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9337,"byte_end":9413,"line_start":285,"line_end":285,"column_start":1,"column_end":77}},{"value":"/ smaller by up to 16 bytes.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9414,"byte_end":9444,"line_start":286,"line_end":286,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9445,"byte_end":9448,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ This crate uses `unsafe`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9449,"byte_end":9478,"line_start":288,"line_end":288,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9479,"byte_end":9482,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Once`]: https://doc.rust-lang.org/std/sync/struct.Once.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9483,"byte_end":9559,"line_start":290,"line_end":290,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9560,"byte_end":9563,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # F.A.Q.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9564,"byte_end":9576,"line_start":292,"line_end":292,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9577,"byte_end":9580,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ **Should I use lazy_static or once_cell?**","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9581,"byte_end":9627,"line_start":294,"line_end":294,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9628,"byte_end":9631,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ To the first approximation, `once_cell` is both more flexible and more convenient than `lazy_static`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9632,"byte_end":9736,"line_start":296,"line_end":296,"column_start":1,"column_end":105}},{"value":"/ and should be preferred.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9737,"byte_end":9765,"line_start":297,"line_end":297,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9766,"byte_end":9769,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ Unlike `once_cell`, `lazy_static` supports spinlock-based implementation of blocking which works with","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9770,"byte_end":9875,"line_start":299,"line_end":299,"column_start":1,"column_end":106}},{"value":"/ `#![no_std]`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9876,"byte_end":9893,"line_start":300,"line_end":300,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9894,"byte_end":9897,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ `lazy_static` has received significantly more real world testing, but `once_cell` is also a widely","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":9898,"byte_end":10000,"line_start":302,"line_end":302,"column_start":1,"column_end":103}},{"value":"/ used crate.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10001,"byte_end":10016,"line_start":303,"line_end":303,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10017,"byte_end":10020,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ **Should I use the sync or unsync flavor?**","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10021,"byte_end":10068,"line_start":305,"line_end":305,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10069,"byte_end":10072,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Because Rust compiler checks thread safety for you, it's impossible to accidentally use `unsync` where","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10073,"byte_end":10179,"line_start":307,"line_end":307,"column_start":1,"column_end":107}},{"value":"/ `sync` is required. So, use `unsync` in single-threaded code and `sync` in multi-threaded. It's easy","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10180,"byte_end":10284,"line_start":308,"line_end":308,"column_start":1,"column_end":105}},{"value":"/ to switch between the two if code becomes multi-threaded later.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10285,"byte_end":10352,"line_start":309,"line_end":309,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10353,"byte_end":10356,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ At the moment, `unsync` has an additional benefit that reentrant initialization causes a panic, which","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10357,"byte_end":10462,"line_start":311,"line_end":311,"column_start":1,"column_end":106}},{"value":"/ might be easier to debug than a deadlock.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10463,"byte_end":10508,"line_start":312,"line_end":312,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10509,"byte_end":10512,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ # Related crates","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10513,"byte_end":10533,"line_start":314,"line_end":314,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10534,"byte_end":10537,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ * [double-checked-cell](https://github.com/niklasf/double-checked-cell)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10538,"byte_end":10613,"line_start":316,"line_end":316,"column_start":1,"column_end":76}},{"value":"/ * [lazy-init](https://crates.io/crates/lazy-init)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10614,"byte_end":10667,"line_start":317,"line_end":317,"column_start":1,"column_end":54}},{"value":"/ * [lazycell](https://crates.io/crates/lazycell)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10668,"byte_end":10719,"line_start":318,"line_end":318,"column_start":1,"column_end":52}},{"value":"/ * [mitochondria](https://crates.io/crates/mitochondria)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10720,"byte_end":10779,"line_start":319,"line_end":319,"column_start":1,"column_end":60}},{"value":"/ * [lazy_static](https://crates.io/crates/lazy_static)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10780,"byte_end":10837,"line_start":320,"line_end":320,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10838,"byte_end":10841,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ Most of this crate's functionality is available in `std` in nightly Rust.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10842,"byte_end":10919,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/ See the [tracking issue](https://github.com/rust-lang/rust/issues/74465).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":10920,"byte_end":10997,"line_start":323,"line_end":323,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11323,"byte_end":11329,"line_start":341,"line_end":341,"column_start":9,"column_end":15},"name":"unsync","qualname":"::unsync","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":172},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":187}],"decl_id":null,"docs":" Single-threaded version of `OnceCell`.\n","sig":null,"attributes":[{"value":"/ Single-threaded version of `OnceCell`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11272,"byte_end":11314,"line_start":340,"line_end":340,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12191,"byte_end":12199,"line_start":371,"line_end":371,"column_start":16,"column_end":24},"name":"OnceCell","qualname":"::unsync::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" A cell which can be written to only once. It is not thread safe.","sig":null,"attributes":[{"value":"/ A cell which can be written to only once. It is not thread safe.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11528,"byte_end":11596,"line_start":351,"line_end":351,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11601,"byte_end":11604,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Unlike [`std::cell::RefCell`], a `OnceCell` provides simple `&`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11609,"byte_end":11676,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ references to the contents.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11681,"byte_end":11712,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11717,"byte_end":11720,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ [`std::cell::RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11725,"byte_end":11807,"line_start":356,"line_end":356,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11812,"byte_end":11815,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11820,"byte_end":11833,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11838,"byte_end":11845,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11850,"byte_end":11886,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11891,"byte_end":11894,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11899,"byte_end":11930,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11935,"byte_end":11969,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11974,"byte_end":11977,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let value: &String = cell.get_or_init(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":11982,"byte_end":12028,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/     \"Hello, World!\".to_string()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12033,"byte_end":12068,"line_start":366,"line_end":366,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12073,"byte_end":12080,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(value, \"Hello, World!\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12085,"byte_end":12124,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12129,"byte_end":12163,"line_start":369,"line_end":369,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12168,"byte_end":12175,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13909,"byte_end":13912,"line_start":429,"line_end":429,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub const fn new() -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13858,"byte_end":13887,"line_start":428,"line_end":428,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14127,"byte_end":14130,"line_start":436,"line_end":436,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14005,"byte_end":14050,"line_start":433,"line_end":433,"column_start":9,"column_end":54}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14059,"byte_end":14062,"line_start":434,"line_end":434,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14071,"byte_end":14111,"line_start":435,"line_end":435,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14401,"byte_end":14408,"line_start":444,"line_end":444,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14271,"byte_end":14324,"line_start":441,"line_end":441,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14333,"byte_end":14336,"line_start":442,"line_end":442,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14345,"byte_end":14385,"line_start":443,"line_end":443,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15100,"byte_end":15103,"line_start":466,"line_end":466,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14564,"byte_end":14610,"line_start":449,"line_end":449,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14619,"byte_end":14622,"line_start":450,"line_end":450,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14631,"byte_end":14700,"line_start":451,"line_end":451,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14709,"byte_end":14718,"line_start":452,"line_end":452,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14727,"byte_end":14730,"line_start":453,"line_end":453,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14739,"byte_end":14752,"line_start":454,"line_end":454,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14761,"byte_end":14768,"line_start":455,"line_end":455,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14777,"byte_end":14813,"line_start":456,"line_end":456,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14822,"byte_end":14825,"line_start":457,"line_end":457,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14834,"byte_end":14865,"line_start":458,"line_end":458,"column_start":9,"column_end":40}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14874,"byte_end":14908,"line_start":459,"line_end":459,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14917,"byte_end":14920,"line_start":460,"line_end":460,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(cell.set(92), Ok(()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14929,"byte_end":14966,"line_start":461,"line_end":461,"column_start":9,"column_end":46}},{"value":"/ assert_eq!(cell.set(62), Err(62));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":14975,"byte_end":15013,"line_start":462,"line_end":462,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15022,"byte_end":15025,"line_start":463,"line_end":463,"column_start":9,"column_end":12}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15034,"byte_end":15068,"line_start":464,"line_end":464,"column_start":9,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15077,"byte_end":15084,"line_start":465,"line_end":465,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15780,"byte_end":15790,"line_start":487,"line_end":487,"column_start":16,"column_end":26},"name":"try_insert","qualname":"<OnceCell<T>>::try_insert","value":"pub fn try_insert(&Self, T) -> Result<&T, (&T, T)>","parent":null,"children":[],"decl_id":null,"docs":" Like [`set`](Self::set), but also returns a referce to the final cell value.","sig":null,"attributes":[{"value":"/ Like [`set`](Self::set), but also returns a referce to the final cell value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15296,"byte_end":15376,"line_start":473,"line_end":473,"column_start":9,"column_end":89}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15385,"byte_end":15388,"line_start":474,"line_end":474,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15397,"byte_end":15410,"line_start":475,"line_end":475,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15419,"byte_end":15426,"line_start":476,"line_end":476,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15435,"byte_end":15471,"line_start":477,"line_end":477,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15480,"byte_end":15483,"line_start":478,"line_end":478,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15492,"byte_end":15523,"line_start":479,"line_end":479,"column_start":9,"column_end":40}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15532,"byte_end":15566,"line_start":480,"line_end":480,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15575,"byte_end":15578,"line_start":481,"line_end":481,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(cell.try_insert(92), Ok(&92));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15587,"byte_end":15632,"line_start":482,"line_end":482,"column_start":9,"column_end":54}},{"value":"/ assert_eq!(cell.try_insert(62), Err((&92, 62)));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15641,"byte_end":15693,"line_start":483,"line_end":483,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15702,"byte_end":15705,"line_start":484,"line_end":484,"column_start":9,"column_end":12}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15714,"byte_end":15748,"line_start":485,"line_end":485,"column_start":9,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":15757,"byte_end":15764,"line_start":486,"line_end":486,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17188,"byte_end":17199,"line_start":524,"line_end":524,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f`\n if the cell was empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16449,"byte_end":16508,"line_start":503,"line_end":503,"column_start":9,"column_end":68}},{"value":"/ if the cell was empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16517,"byte_end":16543,"line_start":504,"line_end":504,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16552,"byte_end":16555,"line_start":505,"line_end":505,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16564,"byte_end":16576,"line_start":506,"line_end":506,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16585,"byte_end":16588,"line_start":507,"line_end":507,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16597,"byte_end":16667,"line_start":508,"line_end":508,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16676,"byte_end":16702,"line_start":509,"line_end":509,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16711,"byte_end":16714,"line_start":510,"line_end":510,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. Doing","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16723,"byte_end":16792,"line_start":511,"line_end":511,"column_start":9,"column_end":78}},{"value":"/ so results in a panic.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16801,"byte_end":16827,"line_start":512,"line_end":512,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16836,"byte_end":16839,"line_start":513,"line_end":513,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16848,"byte_end":16861,"line_start":514,"line_end":514,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16870,"byte_end":16877,"line_start":515,"line_end":515,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16886,"byte_end":16922,"line_start":516,"line_end":516,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16931,"byte_end":16934,"line_start":517,"line_end":517,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16943,"byte_end":16974,"line_start":518,"line_end":518,"column_start":9,"column_end":40}},{"value":"/ let value = cell.get_or_init(|| 92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":16983,"byte_end":17023,"line_start":519,"line_end":519,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17032,"byte_end":17059,"line_start":520,"line_end":520,"column_start":9,"column_end":36}},{"value":"/ let value = cell.get_or_init(|| unreachable!());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17068,"byte_end":17120,"line_start":521,"line_end":521,"column_start":9,"column_end":61}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17129,"byte_end":17156,"line_start":522,"line_end":522,"column_start":9,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17165,"byte_end":17172,"line_start":523,"line_end":523,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18407,"byte_end":18422,"line_start":560,"line_end":560,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17474,"byte_end":17536,"line_start":535,"line_end":535,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17545,"byte_end":17609,"line_start":536,"line_end":536,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17618,"byte_end":17640,"line_start":537,"line_end":537,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17649,"byte_end":17652,"line_start":538,"line_end":538,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17661,"byte_end":17673,"line_start":539,"line_end":539,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17682,"byte_end":17685,"line_start":540,"line_end":540,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17694,"byte_end":17764,"line_start":541,"line_end":541,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17773,"byte_end":17799,"line_start":542,"line_end":542,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17808,"byte_end":17811,"line_start":543,"line_end":543,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. Doing","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17820,"byte_end":17889,"line_start":544,"line_end":544,"column_start":9,"column_end":78}},{"value":"/ so results in a panic.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17898,"byte_end":17924,"line_start":545,"line_end":545,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17933,"byte_end":17936,"line_start":546,"line_end":546,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17945,"byte_end":17958,"line_start":547,"line_end":547,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17967,"byte_end":17974,"line_start":548,"line_end":548,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":17983,"byte_end":18019,"line_start":549,"line_end":549,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18028,"byte_end":18031,"line_start":550,"line_end":550,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18040,"byte_end":18071,"line_start":551,"line_end":551,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get_or_try_init(|| Err(())), Err(()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18080,"byte_end":18138,"line_start":552,"line_end":552,"column_start":9,"column_end":67}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18147,"byte_end":18181,"line_start":553,"line_end":553,"column_start":9,"column_end":43}},{"value":"/ let value = cell.get_or_try_init(|| -> Result<i32, ()> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18190,"byte_end":18250,"line_start":554,"line_end":554,"column_start":9,"column_end":69}},{"value":"/     Ok(92)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18259,"byte_end":18273,"line_start":555,"line_end":555,"column_start":9,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18282,"byte_end":18289,"line_start":556,"line_end":556,"column_start":9,"column_end":16}},{"value":"/ assert_eq!(value, Ok(&92));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18298,"byte_end":18329,"line_start":557,"line_end":557,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get(), Some(&92))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18338,"byte_end":18375,"line_start":558,"line_end":558,"column_start":9,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":18384,"byte_end":18391,"line_start":559,"line_end":559,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19728,"byte_end":19732,"line_start":593,"line_end":593,"column_start":16,"column_end":20},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","sig":null,"attributes":[{"value":"/ Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19072,"byte_end":19157,"line_start":576,"line_end":576,"column_start":9,"column_end":94}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19166,"byte_end":19169,"line_start":577,"line_end":577,"column_start":9,"column_end":12}},{"value":"/ Has no effect and returns `None` if the `OnceCell` hasn't been initialized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19178,"byte_end":19257,"line_start":578,"line_end":578,"column_start":9,"column_end":88}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19266,"byte_end":19269,"line_start":579,"line_end":579,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19278,"byte_end":19292,"line_start":580,"line_end":580,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19301,"byte_end":19304,"line_start":581,"line_end":581,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19313,"byte_end":19320,"line_start":582,"line_end":582,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19329,"byte_end":19365,"line_start":583,"line_end":583,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19374,"byte_end":19377,"line_start":584,"line_end":584,"column_start":9,"column_end":12}},{"value":"/ let mut cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19386,"byte_end":19439,"line_start":585,"line_end":585,"column_start":9,"column_end":62}},{"value":"/ assert_eq!(cell.take(), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19448,"byte_end":19482,"line_start":586,"line_end":586,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19491,"byte_end":19494,"line_start":587,"line_end":587,"column_start":9,"column_end":12}},{"value":"/ let mut cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19503,"byte_end":19538,"line_start":588,"line_end":588,"column_start":9,"column_end":44}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19547,"byte_end":19590,"line_start":589,"line_end":589,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.take(), Some(\"hello\".to_string()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19599,"byte_end":19654,"line_start":590,"line_end":590,"column_start":9,"column_end":64}},{"value":"/ assert_eq!(cell.get(), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19663,"byte_end":19696,"line_start":591,"line_end":591,"column_start":9,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19705,"byte_end":19712,"line_start":592,"line_end":592,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20391,"byte_end":20401,"line_start":613,"line_end":613,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `OnceCell`, returning the wrapped value.","sig":null,"attributes":[{"value":"/ Consumes the `OnceCell`, returning the wrapped value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19839,"byte_end":19896,"line_start":597,"line_end":597,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19905,"byte_end":19908,"line_start":598,"line_end":598,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell was empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19917,"byte_end":19958,"line_start":599,"line_end":599,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19967,"byte_end":19970,"line_start":600,"line_end":600,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":19979,"byte_end":19993,"line_start":601,"line_end":601,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20002,"byte_end":20005,"line_start":602,"line_end":602,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20014,"byte_end":20021,"line_start":603,"line_end":603,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20030,"byte_end":20066,"line_start":604,"line_end":604,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20075,"byte_end":20078,"line_start":605,"line_end":605,"column_start":9,"column_end":12}},{"value":"/ let cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20087,"byte_end":20136,"line_start":606,"line_end":606,"column_start":9,"column_end":58}},{"value":"/ assert_eq!(cell.into_inner(), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20145,"byte_end":20185,"line_start":607,"line_end":607,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20194,"byte_end":20197,"line_start":608,"line_end":608,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20206,"byte_end":20237,"line_start":609,"line_end":609,"column_start":9,"column_end":40}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20246,"byte_end":20289,"line_start":610,"line_end":610,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.into_inner(), Some(\"hello\".to_string()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20298,"byte_end":20359,"line_start":611,"line_end":611,"column_start":9,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20368,"byte_end":20375,"line_start":612,"line_end":612,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21128,"byte_end":21132,"line_start":640,"line_end":640,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::unsync::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[{"value":"/ A value which is initialized on the first access.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20661,"byte_end":20714,"line_start":620,"line_end":620,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20719,"byte_end":20722,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20727,"byte_end":20740,"line_start":622,"line_end":622,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20745,"byte_end":20752,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20757,"byte_end":20789,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20794,"byte_end":20797,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ let lazy: Lazy<i32> = Lazy::new(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20802,"byte_end":20842,"line_start":626,"line_end":626,"column_start":5,"column_end":45}},{"value":"/     println!(\"initializing\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20847,"byte_end":20880,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/     92","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20885,"byte_end":20895,"line_start":628,"line_end":628,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20900,"byte_end":20907,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ println!(\"ready\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20912,"byte_end":20934,"line_start":630,"line_end":630,"column_start":5,"column_end":27}},{"value":"/ println!(\"{}\", *lazy);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20939,"byte_end":20965,"line_start":631,"line_end":631,"column_start":5,"column_end":31}},{"value":"/ println!(\"{}\", *lazy);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":20970,"byte_end":20996,"line_start":632,"line_end":632,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21001,"byte_end":21004,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ // Prints:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21009,"byte_end":21023,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/ //   ready","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21028,"byte_end":21042,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/ //   initializing","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21047,"byte_end":21068,"line_start":636,"line_end":636,"column_start":5,"column_end":26}},{"value":"/ //   92","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21073,"byte_end":21084,"line_start":637,"line_end":637,"column_start":5,"column_end":16}},{"value":"/ //   92","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21089,"byte_end":21100,"line_start":638,"line_end":638,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21105,"byte_end":21112,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22038,"byte_end":22041,"line_start":669,"line_end":669,"column_start":22,"column_end":25},"name":"new","qualname":"<Lazy<T, F>>::new","value":"pub const fn new(F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing function.","sig":null,"attributes":[{"value":"/ Creates a new lazy value with the given initializing function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21604,"byte_end":21670,"line_start":655,"line_end":655,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21679,"byte_end":21682,"line_start":656,"line_end":656,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21691,"byte_end":21704,"line_start":657,"line_end":657,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21713,"byte_end":21720,"line_start":658,"line_end":658,"column_start":9,"column_end":16}},{"value":"/ # fn main() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21729,"byte_end":21746,"line_start":659,"line_end":659,"column_start":9,"column_end":26}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21755,"byte_end":21787,"line_start":660,"line_end":660,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21796,"byte_end":21799,"line_start":661,"line_end":661,"column_start":9,"column_end":12}},{"value":"/ let hello = \"Hello, World!\".to_string();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21808,"byte_end":21852,"line_start":662,"line_end":662,"column_start":9,"column_end":53}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21861,"byte_end":21864,"line_start":663,"line_end":663,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| hello.to_uppercase());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21873,"byte_end":21923,"line_start":664,"line_end":664,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21932,"byte_end":21935,"line_start":665,"line_end":665,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(&*lazy, \"HELLO, WORLD!\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21944,"byte_end":21984,"line_start":666,"line_end":666,"column_start":9,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21993,"byte_end":22000,"line_start":667,"line_end":667,"column_start":9,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22009,"byte_end":22016,"line_start":668,"line_end":668,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22319,"byte_end":22329,"line_start":676,"line_end":676,"column_start":16,"column_end":26},"name":"into_value","qualname":"<Lazy<T, F>>::into_value","value":"pub fn into_value(Lazy<T, F>) -> Result<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Lazy` returning the stored value.","sig":null,"attributes":[{"value":"/ Consumes this `Lazy` returning the stored value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22158,"byte_end":22210,"line_start":673,"line_end":673,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22219,"byte_end":22222,"line_start":674,"line_end":674,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(value)` if `Lazy` is initialized and `Err(f)` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22231,"byte_end":22303,"line_start":675,"line_end":675,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23113,"byte_end":23118,"line_start":700,"line_end":700,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"pub fn force(&Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and returns a reference to\n the result.","sig":null,"attributes":[{"value":"/ Forces the evaluation of this lazy value and returns a reference to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22663,"byte_end":22734,"line_start":686,"line_end":686,"column_start":9,"column_end":80}},{"value":"/ the result.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22743,"byte_end":22758,"line_start":687,"line_end":687,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22767,"byte_end":22770,"line_start":688,"line_end":688,"column_start":9,"column_end":12}},{"value":"/ This is equivalent to the `Deref` impl, but is explicit.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22779,"byte_end":22839,"line_start":689,"line_end":689,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22848,"byte_end":22851,"line_start":690,"line_end":690,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22860,"byte_end":22873,"line_start":691,"line_end":691,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22882,"byte_end":22889,"line_start":692,"line_end":692,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::Lazy;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22898,"byte_end":22930,"line_start":693,"line_end":693,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22939,"byte_end":22942,"line_start":694,"line_end":694,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| 92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22951,"byte_end":22983,"line_start":695,"line_end":695,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22992,"byte_end":22995,"line_start":696,"line_end":696,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(Lazy::force(&lazy), &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23004,"byte_end":23044,"line_start":697,"line_end":697,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(&*lazy, &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23053,"byte_end":23081,"line_start":698,"line_end":698,"column_start":9,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23090,"byte_end":23097,"line_start":699,"line_end":699,"column_start":9,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":190},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24015,"byte_end":24019,"line_start":732,"line_end":732,"column_start":9,"column_end":13},"name":"sync","qualname":"::sync","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":254},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":291},{"krate":0,"index":294}],"decl_id":null,"docs":" Thread-safe, blocking version of `OnceCell`.\n","sig":null,"attributes":[{"value":"/ Thread-safe, blocking version of `OnceCell`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23934,"byte_end":23982,"line_start":730,"line_end":730,"column_start":1,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23983,"byte_end":24006,"line_start":731,"line_end":731,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25259,"byte_end":25267,"line_start":770,"line_end":770,"column_start":16,"column_end":24},"name":"OnceCell","qualname":"::sync::OnceCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24187,"byte_end":24244,"line_start":742,"line_end":742,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24249,"byte_end":24252,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ `OnceCell` provides `&` references to the contents without RAII guards.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24257,"byte_end":24332,"line_start":744,"line_end":744,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24337,"byte_end":24340,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ Reading a non-`None` value out of `OnceCell` establishes a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24345,"byte_end":24407,"line_start":746,"line_end":746,"column_start":5,"column_end":67}},{"value":"/ happens-before relationship with a corresponding write. For example, if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24412,"byte_end":24487,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ thread A initializes the cell with `get_or_init(f)`, and thread B","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24492,"byte_end":24561,"line_start":748,"line_end":748,"column_start":5,"column_end":74}},{"value":"/ subsequently reads the result of this call, B also observes all the side","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24566,"byte_end":24642,"line_start":749,"line_end":749,"column_start":5,"column_end":81}},{"value":"/ effects of `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24647,"byte_end":24666,"line_start":750,"line_end":750,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24671,"byte_end":24674,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24679,"byte_end":24692,"line_start":752,"line_end":752,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24697,"byte_end":24704,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24709,"byte_end":24743,"line_start":754,"line_end":754,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24748,"byte_end":24751,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ static CELL: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24756,"byte_end":24808,"line_start":756,"line_end":756,"column_start":5,"column_end":57}},{"value":"/ assert!(CELL.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24813,"byte_end":24847,"line_start":757,"line_end":757,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24852,"byte_end":24855,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24860,"byte_end":24887,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     let value: &String = CELL.get_or_init(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24892,"byte_end":24942,"line_start":760,"line_end":760,"column_start":5,"column_end":55}},{"value":"/         \"Hello, World!\".to_string()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24947,"byte_end":24986,"line_start":761,"line_end":761,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":24991,"byte_end":25002,"line_start":762,"line_end":762,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(value, \"Hello, World!\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25007,"byte_end":25050,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25055,"byte_end":25078,"line_start":764,"line_end":764,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25083,"byte_end":25086,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ let value: Option<&String> = CELL.get();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25091,"byte_end":25135,"line_start":766,"line_end":766,"column_start":5,"column_end":49}},{"value":"/ assert!(value.is_some());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25140,"byte_end":25169,"line_start":767,"line_end":767,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(value.unwrap().as_str(), \"Hello, World!\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25174,"byte_end":25231,"line_start":768,"line_end":768,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25236,"byte_end":25243,"line_start":769,"line_end":769,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26536,"byte_end":26539,"line_start":818,"line_end":818,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub const fn new() -> OnceCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26485,"byte_end":26514,"line_start":817,"line_end":817,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26795,"byte_end":26798,"line_start":826,"line_end":826,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the reference to the underlying value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26611,"byte_end":26658,"line_start":822,"line_end":822,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26667,"byte_end":26670,"line_start":823,"line_end":823,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty, or being initialized. This","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26679,"byte_end":26746,"line_start":824,"line_end":824,"column_start":9,"column_end":76}},{"value":"/ method never blocks.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26755,"byte_end":26779,"line_start":825,"line_end":825,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27174,"byte_end":27181,"line_start":838,"line_end":838,"column_start":16,"column_end":23},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the mutable reference to the underlying value.","sig":null,"attributes":[{"value":"/ Gets the mutable reference to the underlying value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27042,"byte_end":27097,"line_start":835,"line_end":835,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27106,"byte_end":27109,"line_start":836,"line_end":836,"column_start":9,"column_end":12}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27118,"byte_end":27158,"line_start":837,"line_end":837,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27583,"byte_end":27596,"line_start":849,"line_end":849,"column_start":23,"column_end":36},"name":"get_unchecked","qualname":"<OnceCell<T>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get the reference to the underlying value, without checking if the\n cell is initialized.","sig":null,"attributes":[{"value":"/ Get the reference to the underlying value, without checking if the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27261,"byte_end":27331,"line_start":842,"line_end":842,"column_start":9,"column_end":79}},{"value":"/ cell is initialized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27340,"byte_end":27364,"line_start":843,"line_end":843,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27373,"byte_end":27376,"line_start":844,"line_end":844,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27385,"byte_end":27397,"line_start":845,"line_end":845,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27406,"byte_end":27409,"line_start":846,"line_end":846,"column_start":9,"column_end":12}},{"value":"/ Caller must ensure that the cell is in initialized state, and that","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27418,"byte_end":27488,"line_start":847,"line_end":847,"column_start":9,"column_end":79}},{"value":"/ the contents are acquired by (synchronized to) this thread.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27497,"byte_end":27560,"line_start":848,"line_end":848,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28380,"byte_end":28383,"line_start":876,"line_end":876,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27666,"byte_end":27712,"line_start":853,"line_end":853,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27721,"byte_end":27724,"line_start":854,"line_end":854,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27733,"byte_end":27802,"line_start":855,"line_end":855,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27811,"byte_end":27820,"line_start":856,"line_end":856,"column_start":9,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27829,"byte_end":27832,"line_start":857,"line_end":857,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27841,"byte_end":27854,"line_start":858,"line_end":858,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27863,"byte_end":27866,"line_start":859,"line_end":859,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27875,"byte_end":27882,"line_start":860,"line_end":860,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27891,"byte_end":27925,"line_start":861,"line_end":861,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27934,"byte_end":27937,"line_start":862,"line_end":862,"column_start":9,"column_end":12}},{"value":"/ static CELL: OnceCell<i32> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":27946,"byte_end":27995,"line_start":863,"line_end":863,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28004,"byte_end":28007,"line_start":864,"line_end":864,"column_start":9,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28016,"byte_end":28031,"line_start":865,"line_end":865,"column_start":9,"column_end":24}},{"value":"/     assert!(CELL.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28040,"byte_end":28078,"line_start":866,"line_end":866,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28087,"byte_end":28090,"line_start":867,"line_end":867,"column_start":9,"column_end":12}},{"value":"/     std::thread::spawn(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28099,"byte_end":28130,"line_start":868,"line_end":868,"column_start":9,"column_end":40}},{"value":"/         assert_eq!(CELL.set(92), Ok(()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28139,"byte_end":28184,"line_start":869,"line_end":869,"column_start":9,"column_end":54}},{"value":"/     }).join().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28193,"byte_end":28220,"line_start":870,"line_end":870,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28229,"byte_end":28232,"line_start":871,"line_end":871,"column_start":9,"column_end":12}},{"value":"/     assert_eq!(CELL.set(62), Err(62));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28241,"byte_end":28283,"line_start":872,"line_end":872,"column_start":9,"column_end":51}},{"value":"/     assert_eq!(CELL.get(), Some(&92));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28292,"byte_end":28334,"line_start":873,"line_end":873,"column_start":9,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28343,"byte_end":28348,"line_start":874,"line_end":874,"column_start":9,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28357,"byte_end":28364,"line_start":875,"line_end":875,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29074,"byte_end":29084,"line_start":898,"line_end":898,"column_start":16,"column_end":26},"name":"try_insert","qualname":"<OnceCell<T>>::try_insert","value":"pub fn try_insert(&Self, T) -> Result<&T, (&T, T)>","parent":null,"children":[],"decl_id":null,"docs":" Like [`set`](Self::set), but also returns a reference to the final cell value.","sig":null,"attributes":[{"value":"/ Like [`set`](Self::set), but also returns a reference to the final cell value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28576,"byte_end":28658,"line_start":883,"line_end":883,"column_start":9,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28667,"byte_end":28670,"line_start":884,"line_end":884,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28679,"byte_end":28692,"line_start":885,"line_end":885,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28701,"byte_end":28704,"line_start":886,"line_end":886,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28713,"byte_end":28720,"line_start":887,"line_end":887,"column_start":9,"column_end":16}},{"value":"/ use once_cell::unsync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28729,"byte_end":28765,"line_start":888,"line_end":888,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28774,"byte_end":28777,"line_start":889,"line_end":889,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28786,"byte_end":28817,"line_start":890,"line_end":890,"column_start":9,"column_end":40}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28826,"byte_end":28860,"line_start":891,"line_end":891,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28869,"byte_end":28872,"line_start":892,"line_end":892,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(cell.try_insert(92), Ok(&92));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28881,"byte_end":28926,"line_start":893,"line_end":893,"column_start":9,"column_end":54}},{"value":"/ assert_eq!(cell.try_insert(62), Err((&92, 62)));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28935,"byte_end":28987,"line_start":894,"line_end":894,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":28996,"byte_end":28999,"line_start":895,"line_end":895,"column_start":9,"column_end":12}},{"value":"/ assert!(cell.get().is_some());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29008,"byte_end":29042,"line_start":896,"line_end":896,"column_start":9,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29051,"byte_end":29058,"line_start":897,"line_end":897,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30412,"byte_end":30423,"line_start":933,"line_end":933,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell\n was empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29376,"byte_end":29447,"line_start":907,"line_end":907,"column_start":9,"column_end":80}},{"value":"/ was empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29456,"byte_end":29470,"line_start":908,"line_end":908,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29479,"byte_end":29482,"line_start":909,"line_end":909,"column_start":9,"column_end":12}},{"value":"/ Many threads may call `get_or_init` concurrently with different","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29491,"byte_end":29558,"line_start":910,"line_end":910,"column_start":9,"column_end":76}},{"value":"/ initializing functions, but it is guaranteed that only one function","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29567,"byte_end":29638,"line_start":911,"line_end":911,"column_start":9,"column_end":80}},{"value":"/ will be executed.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29647,"byte_end":29668,"line_start":912,"line_end":912,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29677,"byte_end":29680,"line_start":913,"line_end":913,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29689,"byte_end":29701,"line_start":914,"line_end":914,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29710,"byte_end":29713,"line_start":915,"line_end":915,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and the cell","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29722,"byte_end":29792,"line_start":916,"line_end":916,"column_start":9,"column_end":79}},{"value":"/ remains uninitialized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29801,"byte_end":29827,"line_start":917,"line_end":917,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29836,"byte_end":29839,"line_start":918,"line_end":918,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`. The","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29848,"byte_end":29915,"line_start":919,"line_end":919,"column_start":9,"column_end":76}},{"value":"/ exact outcome is unspecified. Current implementation deadlocks, but","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":29924,"byte_end":29995,"line_start":920,"line_end":920,"column_start":9,"column_end":80}},{"value":"/ this may be changed to a panic in the future.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30004,"byte_end":30053,"line_start":921,"line_end":921,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30062,"byte_end":30065,"line_start":922,"line_end":922,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30074,"byte_end":30087,"line_start":923,"line_end":923,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30096,"byte_end":30103,"line_start":924,"line_end":924,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30112,"byte_end":30146,"line_start":925,"line_end":925,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30155,"byte_end":30158,"line_start":926,"line_end":926,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30167,"byte_end":30198,"line_start":927,"line_end":927,"column_start":9,"column_end":40}},{"value":"/ let value = cell.get_or_init(|| 92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30207,"byte_end":30247,"line_start":928,"line_end":928,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30256,"byte_end":30283,"line_start":929,"line_end":929,"column_start":9,"column_end":36}},{"value":"/ let value = cell.get_or_init(|| unreachable!());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30292,"byte_end":30344,"line_start":930,"line_end":930,"column_start":9,"column_end":61}},{"value":"/ assert_eq!(value, &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30353,"byte_end":30380,"line_start":931,"line_end":931,"column_start":9,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30389,"byte_end":30396,"line_start":932,"line_end":932,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31730,"byte_end":31745,"line_start":970,"line_end":970,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30698,"byte_end":30760,"line_start":944,"line_end":944,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30769,"byte_end":30833,"line_start":945,"line_end":945,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30842,"byte_end":30864,"line_start":946,"line_end":946,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30873,"byte_end":30876,"line_start":947,"line_end":947,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30885,"byte_end":30897,"line_start":948,"line_end":948,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30906,"byte_end":30909,"line_start":949,"line_end":949,"column_start":9,"column_end":12}},{"value":"/ If `f` panics, the panic is propagated to the caller, and","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30918,"byte_end":30979,"line_start":950,"line_end":950,"column_start":9,"column_end":70}},{"value":"/ the cell remains uninitialized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":30988,"byte_end":31023,"line_start":951,"line_end":951,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31032,"byte_end":31035,"line_start":952,"line_end":952,"column_start":9,"column_end":12}},{"value":"/ It is an error to reentrantly initialize the cell from `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31044,"byte_end":31107,"line_start":953,"line_end":953,"column_start":9,"column_end":72}},{"value":"/ The exact outcome is unspecified. Current implementation","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31116,"byte_end":31176,"line_start":954,"line_end":954,"column_start":9,"column_end":69}},{"value":"/ deadlocks, but this may be changed to a panic in the future.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31185,"byte_end":31249,"line_start":955,"line_end":955,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31258,"byte_end":31261,"line_start":956,"line_end":956,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31270,"byte_end":31283,"line_start":957,"line_end":957,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31292,"byte_end":31299,"line_start":958,"line_end":958,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31308,"byte_end":31342,"line_start":959,"line_end":959,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31351,"byte_end":31354,"line_start":960,"line_end":960,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31363,"byte_end":31394,"line_start":961,"line_end":961,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get_or_try_init(|| Err(())), Err(()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31403,"byte_end":31461,"line_start":962,"line_end":962,"column_start":9,"column_end":67}},{"value":"/ assert!(cell.get().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31470,"byte_end":31504,"line_start":963,"line_end":963,"column_start":9,"column_end":43}},{"value":"/ let value = cell.get_or_try_init(|| -> Result<i32, ()> {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31513,"byte_end":31573,"line_start":964,"line_end":964,"column_start":9,"column_end":69}},{"value":"/     Ok(92)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31582,"byte_end":31596,"line_start":965,"line_end":965,"column_start":9,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31605,"byte_end":31612,"line_start":966,"line_end":966,"column_start":9,"column_end":16}},{"value":"/ assert_eq!(value, Ok(&92));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31621,"byte_end":31652,"line_start":967,"line_end":967,"column_start":9,"column_end":40}},{"value":"/ assert_eq!(cell.get(), Some(&92))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31661,"byte_end":31698,"line_start":968,"line_end":968,"column_start":9,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":31707,"byte_end":31714,"line_start":969,"line_end":969,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32827,"byte_end":32831,"line_start":1002,"line_end":1002,"column_start":16,"column_end":20},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","sig":null,"attributes":[{"value":"/ Takes the value out of this `OnceCell`, moving it back to an uninitialized state.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32173,"byte_end":32258,"line_start":985,"line_end":985,"column_start":9,"column_end":94}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32267,"byte_end":32270,"line_start":986,"line_end":986,"column_start":9,"column_end":12}},{"value":"/ Has no effect and returns `None` if the `OnceCell` hasn't been initialized.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32279,"byte_end":32358,"line_start":987,"line_end":987,"column_start":9,"column_end":88}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32367,"byte_end":32370,"line_start":988,"line_end":988,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32379,"byte_end":32393,"line_start":989,"line_end":989,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32402,"byte_end":32405,"line_start":990,"line_end":990,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32414,"byte_end":32421,"line_start":991,"line_end":991,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32430,"byte_end":32464,"line_start":992,"line_end":992,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32473,"byte_end":32476,"line_start":993,"line_end":993,"column_start":9,"column_end":12}},{"value":"/ let mut cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32485,"byte_end":32538,"line_start":994,"line_end":994,"column_start":9,"column_end":62}},{"value":"/ assert_eq!(cell.take(), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32547,"byte_end":32581,"line_start":995,"line_end":995,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32590,"byte_end":32593,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ let mut cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32602,"byte_end":32637,"line_start":997,"line_end":997,"column_start":9,"column_end":44}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32646,"byte_end":32689,"line_start":998,"line_end":998,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.take(), Some(\"hello\".to_string()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32698,"byte_end":32753,"line_start":999,"line_end":999,"column_start":9,"column_end":64}},{"value":"/ assert_eq!(cell.get(), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32762,"byte_end":32795,"line_start":1000,"line_end":1000,"column_start":9,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32804,"byte_end":32811,"line_start":1001,"line_end":1001,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33476,"byte_end":33486,"line_start":1021,"line_end":1021,"column_start":16,"column_end":26},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `OnceCell`, returning the wrapped value. Returns\n `None` if the cell was empty.","sig":null,"attributes":[{"value":"/ Consumes the `OnceCell`, returning the wrapped value. Returns","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":32938,"byte_end":33003,"line_start":1006,"line_end":1006,"column_start":9,"column_end":74}},{"value":"/ `None` if the cell was empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33012,"byte_end":33045,"line_start":1007,"line_end":1007,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33054,"byte_end":33057,"line_start":1008,"line_end":1008,"column_start":9,"column_end":12}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33066,"byte_end":33080,"line_start":1009,"line_end":1009,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33089,"byte_end":33092,"line_start":1010,"line_end":1010,"column_start":9,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33101,"byte_end":33108,"line_start":1011,"line_end":1011,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::OnceCell;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33117,"byte_end":33151,"line_start":1012,"line_end":1012,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33160,"byte_end":33163,"line_start":1013,"line_end":1013,"column_start":9,"column_end":12}},{"value":"/ let cell: OnceCell<String> = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33172,"byte_end":33221,"line_start":1014,"line_end":1014,"column_start":9,"column_end":58}},{"value":"/ assert_eq!(cell.into_inner(), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33230,"byte_end":33270,"line_start":1015,"line_end":1015,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33279,"byte_end":33282,"line_start":1016,"line_end":1016,"column_start":9,"column_end":12}},{"value":"/ let cell = OnceCell::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33291,"byte_end":33322,"line_start":1017,"line_end":1017,"column_start":9,"column_end":40}},{"value":"/ cell.set(\"hello\".to_string()).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33331,"byte_end":33374,"line_start":1018,"line_end":1018,"column_start":9,"column_end":52}},{"value":"/ assert_eq!(cell.into_inner(), Some(\"hello\".to_string()));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33383,"byte_end":33444,"line_start":1019,"line_end":1019,"column_start":9,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33453,"byte_end":33460,"line_start":1020,"line_end":1020,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34498,"byte_end":34502,"line_start":1059,"line_end":1059,"column_start":16,"column_end":20},"name":"Lazy","qualname":"::sync::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" A value which is initialized on the first access.","sig":null,"attributes":[{"value":"/ A value which is initialized on the first access.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33561,"byte_end":33614,"line_start":1026,"line_end":1026,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33619,"byte_end":33622,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ This type is thread-safe and can be used in statics.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33627,"byte_end":33683,"line_start":1028,"line_end":1028,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33688,"byte_end":33691,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33696,"byte_end":33709,"line_start":1030,"line_end":1030,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33714,"byte_end":33717,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33722,"byte_end":33729,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33734,"byte_end":33768,"line_start":1033,"line_end":1033,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33773,"byte_end":33776,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33781,"byte_end":33811,"line_start":1035,"line_end":1035,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33816,"byte_end":33819,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ static HASHMAP: Lazy<HashMap<i32, String>> = Lazy::new(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33824,"byte_end":33887,"line_start":1037,"line_end":1037,"column_start":5,"column_end":68}},{"value":"/     println!(\"initializing\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33892,"byte_end":33925,"line_start":1038,"line_end":1038,"column_start":5,"column_end":38}},{"value":"/     let mut m = HashMap::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33930,"byte_end":33965,"line_start":1039,"line_end":1039,"column_start":5,"column_end":40}},{"value":"/     m.insert(13, \"Spica\".to_string());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":33970,"byte_end":34012,"line_start":1040,"line_end":1040,"column_start":5,"column_end":47}},{"value":"/     m.insert(74, \"Hoyten\".to_string());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34017,"byte_end":34060,"line_start":1041,"line_end":1041,"column_start":5,"column_end":48}},{"value":"/     m","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34065,"byte_end":34074,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34079,"byte_end":34086,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34091,"byte_end":34094,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34099,"byte_end":34114,"line_start":1045,"line_end":1045,"column_start":5,"column_end":20}},{"value":"/     println!(\"ready\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34119,"byte_end":34145,"line_start":1046,"line_end":1046,"column_start":5,"column_end":31}},{"value":"/     std::thread::spawn(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34150,"byte_end":34181,"line_start":1047,"line_end":1047,"column_start":5,"column_end":36}},{"value":"/         println!(\"{:?}\", HASHMAP.get(&13));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34186,"byte_end":34233,"line_start":1048,"line_end":1048,"column_start":5,"column_end":52}},{"value":"/     }).join().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34238,"byte_end":34265,"line_start":1049,"line_end":1049,"column_start":5,"column_end":32}},{"value":"/     println!(\"{:?}\", HASHMAP.get(&74));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34270,"byte_end":34313,"line_start":1050,"line_end":1050,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34318,"byte_end":34321,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/     // Prints:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34326,"byte_end":34344,"line_start":1052,"line_end":1052,"column_start":5,"column_end":23}},{"value":"/     //   ready","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34349,"byte_end":34367,"line_start":1053,"line_end":1053,"column_start":5,"column_end":23}},{"value":"/     //   initializing","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34372,"byte_end":34397,"line_start":1054,"line_end":1054,"column_start":5,"column_end":30}},{"value":"/     //   Some(\"Spica\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34402,"byte_end":34428,"line_start":1055,"line_end":1055,"column_start":5,"column_end":31}},{"value":"/     //   Some(\"Hoyten\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34433,"byte_end":34460,"line_start":1056,"line_end":1056,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34465,"byte_end":34470,"line_start":1057,"line_end":1057,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34475,"byte_end":34482,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35451,"byte_end":35454,"line_start":1083,"line_end":1083,"column_start":22,"column_end":25},"name":"new","qualname":"<Lazy<T, F>>::new","value":"pub const fn new(F) -> Lazy<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lazy value with the given initializing\n function.\n","sig":null,"attributes":[{"value":"/ Creates a new lazy value with the given initializing","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35351,"byte_end":35407,"line_start":1081,"line_end":1081,"column_start":9,"column_end":65}},{"value":"/ function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35416,"byte_end":35429,"line_start":1082,"line_end":1082,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35726,"byte_end":35736,"line_start":1090,"line_end":1090,"column_start":16,"column_end":26},"name":"into_value","qualname":"<Lazy<T, F>>::into_value","value":"pub fn into_value(Lazy<T, F>) -> Result<T, F>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Lazy` returning the stored value.","sig":null,"attributes":[{"value":"/ Consumes this `Lazy` returning the stored value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35565,"byte_end":35617,"line_start":1087,"line_end":1087,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35626,"byte_end":35629,"line_start":1088,"line_end":1088,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(value)` if `Lazy` is initialized and `Err(f)` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35638,"byte_end":35710,"line_start":1089,"line_end":1089,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36506,"byte_end":36511,"line_start":1113,"line_end":1113,"column_start":16,"column_end":21},"name":"force","qualname":"<Lazy<T, F>>::force","value":"pub fn force(&Lazy<T, F>) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Forces the evaluation of this lazy value and\n returns a reference to the result. This is equivalent\n to the `Deref` impl, but is explicit.","sig":null,"attributes":[{"value":"/ Forces the evaluation of this lazy value and","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36070,"byte_end":36118,"line_start":1100,"line_end":1100,"column_start":9,"column_end":57}},{"value":"/ returns a reference to the result. This is equivalent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36127,"byte_end":36184,"line_start":1101,"line_end":1101,"column_start":9,"column_end":66}},{"value":"/ to the `Deref` impl, but is explicit.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36193,"byte_end":36234,"line_start":1102,"line_end":1102,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36243,"byte_end":36246,"line_start":1103,"line_end":1103,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36255,"byte_end":36268,"line_start":1104,"line_end":1104,"column_start":9,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36277,"byte_end":36284,"line_start":1105,"line_end":1105,"column_start":9,"column_end":16}},{"value":"/ use once_cell::sync::Lazy;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36293,"byte_end":36323,"line_start":1106,"line_end":1106,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36332,"byte_end":36335,"line_start":1107,"line_end":1107,"column_start":9,"column_end":12}},{"value":"/ let lazy = Lazy::new(|| 92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36344,"byte_end":36376,"line_start":1108,"line_end":1108,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36385,"byte_end":36388,"line_start":1109,"line_end":1109,"column_start":9,"column_end":12}},{"value":"/ assert_eq!(Lazy::force(&lazy), &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36397,"byte_end":36437,"line_start":1110,"line_end":1110,"column_start":9,"column_end":49}},{"value":"/ assert_eq!(&*lazy, &92);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36446,"byte_end":36474,"line_start":1111,"line_end":1111,"column_start":9,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36483,"byte_end":36490,"line_start":1112,"line_end":1112,"column_start":9,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":295},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"race","qualname":"::race","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":307},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":318},{"krate":0,"index":331},{"krate":0,"index":334}],"decl_id":null,"docs":" Thread-safe, non-blocking, \"first one wins\" flavor of `OnceCell`.","sig":null,"attributes":[{"value":"cfg(feature = \"race\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":37762,"byte_end":37786,"line_start":1160,"line_end":1160,"column_start":1,"column_end":25}},{"value":"/ Thread-safe, non-blocking, \"first one wins\" flavor of `OnceCell`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49016,"byte_end":49085,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49086,"byte_end":49089,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ If two threads race to initialize a type from the `race` module, they","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49090,"byte_end":49163,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ don't block, execute initialization function together, but only one of","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49164,"byte_end":49238,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ them stores the result.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49239,"byte_end":49266,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49267,"byte_end":49270,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This module does not require `std` feature.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49271,"byte_end":49318,"line_start":7,"line_end":7,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":383},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49497,"byte_end":49513,"line_start":16,"line_end":16,"column_start":12,"column_end":28},"name":"OnceNonZeroUsize","qualname":"::race::OnceNonZeroUsize","value":"OnceNonZeroUsize {  }","parent":null,"children":[{"krate":0,"index":384}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.\n","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49402,"byte_end":49459,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49632,"byte_end":49635,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"new","qualname":"<OnceNonZeroUsize>::new","value":"pub const fn new() -> OnceNonZeroUsize","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49571,"byte_end":49600,"line_start":21,"line_end":21,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49605,"byte_end":49614,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49783,"byte_end":49786,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceNonZeroUsize>::get","value":"pub fn get(&Self) -> Option<NonZeroUsize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying value.\n","sig":null,"attributes":[{"value":"/ Gets the underlying value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49727,"byte_end":49757,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49762,"byte_end":49771,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50081,"byte_end":50084,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceNonZeroUsize>::set","value":"pub fn set(&Self, NonZeroUsize) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49916,"byte_end":49962,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49967,"byte_end":49970,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(())` if it was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49975,"byte_end":50041,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ full.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50046,"byte_end":50055,"line_start":37,"line_end":37,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50060,"byte_end":50069,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50645,"byte_end":50656,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_or_init","qualname":"<OnceNonZeroUsize>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> NonZeroUsize where F: FnOnce() ->\nNonZeroUsize","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell was\n empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50356,"byte_end":50431,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50436,"byte_end":50446,"line_start":49,"line_end":49,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50451,"byte_end":50454,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50459,"byte_end":50535,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50540,"byte_end":50615,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50620,"byte_end":50633,"line_start":53,"line_end":53,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":51280,"byte_end":51295,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"get_or_try_init","qualname":"<OnceNonZeroUsize>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<NonZeroUsize, E> where\nF: FnOnce() -> Result<NonZeroUsize, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50923,"byte_end":50985,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":50990,"byte_end":51054,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ error is returned.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":51059,"byte_end":51081,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":51086,"byte_end":51089,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":51094,"byte_end":51170,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":51175,"byte_end":51250,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":51255,"byte_end":51268,"line_start":71,"line_end":71,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52025,"byte_end":52033,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"OnceBool","qualname":"::race::OnceBool","value":"OnceBool {  }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.\n","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":51930,"byte_end":51987,"line_start":93,"line_end":93,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52149,"byte_end":52152,"line_start":102,"line_end":102,"column_start":18,"column_end":21},"name":"new","qualname":"<OnceBool>::new","value":"pub const fn new() -> OnceBool","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52088,"byte_end":52117,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52122,"byte_end":52131,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52288,"byte_end":52291,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceBool>::get","value":"pub fn get(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying value.\n","sig":null,"attributes":[{"value":"/ Gets the underlying value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52232,"byte_end":52262,"line_start":106,"line_end":106,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52267,"byte_end":52276,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52544,"byte_end":52547,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceBool>::set","value":"pub fn set(&Self, bool) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52379,"byte_end":52425,"line_start":112,"line_end":112,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52430,"byte_end":52433,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(())` if it was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52438,"byte_end":52504,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ full.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52509,"byte_end":52518,"line_start":115,"line_end":115,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52523,"byte_end":52532,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52938,"byte_end":52949,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"get_or_init","qualname":"<OnceBool>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> bool where F: FnOnce() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell was\n empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52649,"byte_end":52724,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52729,"byte_end":52739,"line_start":122,"line_end":122,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52744,"byte_end":52747,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52752,"byte_end":52828,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52833,"byte_end":52908,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52913,"byte_end":52926,"line_start":126,"line_end":126,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53468,"byte_end":53483,"line_start":141,"line_end":141,"column_start":12,"column_end":27},"name":"get_or_try_init","qualname":"<OnceBool>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<bool, E> where F: FnOnce() ->\nResult<bool, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53111,"byte_end":53173,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53178,"byte_end":53242,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/ error is returned.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53247,"byte_end":53269,"line_start":136,"line_end":136,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53274,"byte_end":53277,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53282,"byte_end":53358,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53363,"byte_end":53438,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ some `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":53443,"byte_end":53456,"line_start":140,"line_end":140,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54254,"byte_end":54261,"line_start":173,"line_end":173,"column_start":16,"column_end":23},"name":"OnceBox","qualname":"::race::once_box::OnceBox","value":"OnceBox {  }","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.\n","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54160,"byte_end":54217,"line_start":171,"line_end":171,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54763,"byte_end":54766,"line_start":195,"line_end":195,"column_start":22,"column_end":25},"name":"new","qualname":"<OnceBox<T>>::new","value":"pub const fn new() -> OnceBox<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty cell.\n","sig":null,"attributes":[{"value":"/ Creates a new empty cell.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54712,"byte_end":54741,"line_start":194,"line_end":194,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54948,"byte_end":54951,"line_start":200,"line_end":200,"column_start":16,"column_end":19},"name":"get","qualname":"<OnceBox<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54887,"byte_end":54932,"line_start":199,"line_end":199,"column_start":9,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55331,"byte_end":55334,"line_start":212,"line_end":212,"column_start":16,"column_end":19},"name":"set","qualname":"<OnceBox<T>>::set","value":"pub fn set(&Self, Box<T>) -> Result<(), Box<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the contents of this cell to `value`.","sig":null,"attributes":[{"value":"/ Sets the contents of this cell to `value`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55161,"byte_end":55207,"line_start":208,"line_end":208,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55216,"byte_end":55219,"line_start":209,"line_end":209,"column_start":9,"column_end":12}},{"value":"/ Returns `Ok(())` if the cell was empty and `Err(value)` if it was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55228,"byte_end":55297,"line_start":210,"line_end":210,"column_start":9,"column_end":78}},{"value":"/ full.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55306,"byte_end":55315,"line_start":211,"line_end":211,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56117,"byte_end":56128,"line_start":233,"line_end":233,"column_start":16,"column_end":27},"name":"get_or_init","qualname":"<OnceBox<T>>::get_or_init","value":"pub fn get_or_init<F>(&Self, F) -> &T where F: FnOnce() -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if the cell was\n empty.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if the cell was","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55804,"byte_end":55879,"line_start":227,"line_end":227,"column_start":9,"column_end":84}},{"value":"/ empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55888,"byte_end":55898,"line_start":228,"line_end":228,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55907,"byte_end":55910,"line_start":229,"line_end":229,"column_start":9,"column_end":12}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":55919,"byte_end":55995,"line_start":230,"line_end":230,"column_start":9,"column_end":85}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56004,"byte_end":56079,"line_start":231,"line_end":231,"column_start":9,"column_end":84}},{"value":"/ some `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56088,"byte_end":56101,"line_start":232,"line_end":232,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56798,"byte_end":56813,"line_start":251,"line_end":251,"column_start":16,"column_end":31},"name":"get_or_try_init","qualname":"<OnceBox<T>>::get_or_try_init","value":"pub fn get_or_try_init<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<Box<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Gets the contents of the cell, initializing it with `f` if\n the cell was empty. If the cell was empty and `f` failed, an\n error is returned.","sig":null,"attributes":[{"value":"/ Gets the contents of the cell, initializing it with `f` if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56413,"byte_end":56475,"line_start":244,"line_end":244,"column_start":9,"column_end":71}},{"value":"/ the cell was empty. If the cell was empty and `f` failed, an","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56484,"byte_end":56548,"line_start":245,"line_end":245,"column_start":9,"column_end":73}},{"value":"/ error is returned.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56557,"byte_end":56579,"line_start":246,"line_end":246,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56588,"byte_end":56591,"line_start":247,"line_end":247,"column_start":9,"column_end":12}},{"value":"/ If several threads concurrently run `get_or_init`, more than one `f` can","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56600,"byte_end":56676,"line_start":248,"line_end":248,"column_start":9,"column_end":85}},{"value":"/ be called. However, all threads will return the same value, produced by","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56685,"byte_end":56760,"line_start":249,"line_end":249,"column_start":9,"column_end":84}},{"value":"/ some `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":56769,"byte_end":56782,"line_start":250,"line_end":250,"column_start":9,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39008,"byte_end":39016,"line_start":31,"line_end":31,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39053,"byte_end":39061,"line_start":32,"line_end":32,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39123,"byte_end":39131,"line_start":34,"line_end":34,"column_start":55,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39173,"byte_end":39181,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":40068,"byte_end":40076,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":45378,"byte_end":45389,"line_start":219,"line_end":219,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12606,"byte_end":12614,"line_start":381,"line_end":381,"column_start":59,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12688,"byte_end":12696,"line_start":383,"line_end":383,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12728,"byte_end":12736,"line_start":385,"line_end":385,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12853,"byte_end":12861,"line_start":391,"line_end":391,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13150,"byte_end":13158,"line_start":400,"line_end":400,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13519,"byte_end":13527,"line_start":413,"line_end":413,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13656,"byte_end":13664,"line_start":419,"line_end":419,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13696,"byte_end":13704,"line_start":421,"line_end":421,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13836,"byte_end":13844,"line_start":427,"line_end":427,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21294,"byte_end":21298,"line_start":646,"line_end":646,"column_start":49,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21384,"byte_end":21388,"line_start":648,"line_end":648,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21583,"byte_end":21587,"line_start":654,"line_end":654,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22642,"byte_end":22646,"line_start":685,"line_end":685,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23390,"byte_end":23394,"line_start":708,"line_end":708,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23550,"byte_end":23554,"line_start":715,"line_end":715,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23754,"byte_end":23758,"line_start":722,"line_end":722,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25305,"byte_end":25313,"line_start":772,"line_end":772,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25441,"byte_end":25449,"line_start":778,"line_end":778,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25738,"byte_end":25746,"line_start":787,"line_end":787,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26094,"byte_end":26102,"line_start":800,"line_end":800,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26291,"byte_end":26299,"line_start":808,"line_end":808,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26435,"byte_end":26443,"line_start":814,"line_end":814,"column_start":24,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26463,"byte_end":26471,"line_start":816,"line_end":816,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34630,"byte_end":34634,"line_start":1064,"line_end":1064,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35113,"byte_end":35117,"line_start":1074,"line_end":1074,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35267,"byte_end":35271,"line_start":1078,"line_end":1078,"column_start":49,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35330,"byte_end":35334,"line_start":1080,"line_end":1080,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36049,"byte_end":36053,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36783,"byte_end":36787,"line_start":1121,"line_end":1121,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36943,"byte_end":36947,"line_start":1128,"line_end":1128,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":37147,"byte_end":37151,"line_start":1135,"line_end":1135,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49548,"byte_end":49564,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52073,"byte_end":52081,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54371,"byte_end":54378,"line_start":178,"line_end":178,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54477,"byte_end":54484,"line_start":184,"line_end":184,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54691,"byte_end":54698,"line_start":193,"line_end":193,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":57563,"byte_end":57570,"line_start":275,"line_end":275,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":37795,"byte_end":37799,"line_start":1161,"line_end":1161,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":295}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39008,"byte_end":39016,"line_start":31,"line_end":31,"column_start":38,"column_end":46},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39053,"byte_end":39061,"line_start":32,"line_end":32,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39123,"byte_end":39131,"line_start":34,"line_end":34,"column_start":55,"column_end":63},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":39173,"byte_end":39181,"line_start":35,"line_end":35,"column_start":36,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":8274}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":40068,"byte_end":40076,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/imp_std.rs","byte_start":45378,"byte_end":45389,"line_start":219,"line_end":219,"column_start":15,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12606,"byte_end":12614,"line_start":381,"line_end":381,"column_start":59,"column_end":67},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12688,"byte_end":12696,"line_start":383,"line_end":383,"column_start":40,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":8274}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12728,"byte_end":12736,"line_start":385,"line_end":385,"column_start":25,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":12853,"byte_end":12861,"line_start":391,"line_end":391,"column_start":40,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13150,"byte_end":13158,"line_start":400,"line_end":400,"column_start":30,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13519,"byte_end":13527,"line_start":413,"line_end":413,"column_start":38,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13656,"byte_end":13664,"line_start":419,"line_end":419,"column_start":24,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13696,"byte_end":13704,"line_start":421,"line_end":421,"column_start":25,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":13836,"byte_end":13844,"line_start":427,"line_end":427,"column_start":13,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21294,"byte_end":21298,"line_start":646,"line_end":646,"column_start":49,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21384,"byte_end":21388,"line_start":648,"line_end":648,"column_start":43,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":21583,"byte_end":21587,"line_start":654,"line_end":654,"column_start":16,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":22642,"byte_end":22646,"line_start":685,"line_end":685,"column_start":31,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23390,"byte_end":23394,"line_start":708,"line_end":708,"column_start":41,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23550,"byte_end":23554,"line_start":715,"line_end":715,"column_start":44,"column_end":48},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":23754,"byte_end":23758,"line_start":722,"line_end":722,"column_start":34,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":153},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25305,"byte_end":25313,"line_start":772,"line_end":772,"column_start":25,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25441,"byte_end":25449,"line_start":778,"line_end":778,"column_start":40,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":25738,"byte_end":25746,"line_start":787,"line_end":787,"column_start":30,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26094,"byte_end":26102,"line_start":800,"line_end":800,"column_start":25,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":2895}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26291,"byte_end":26299,"line_start":808,"line_end":808,"column_start":38,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26435,"byte_end":26443,"line_start":814,"line_end":814,"column_start":24,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":26463,"byte_end":26471,"line_start":816,"line_end":816,"column_start":13,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":34630,"byte_end":34634,"line_start":1064,"line_end":1064,"column_start":43,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35113,"byte_end":35117,"line_start":1074,"line_end":1074,"column_start":38,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35267,"byte_end":35271,"line_start":1078,"line_end":1078,"column_start":49,"column_end":53},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":35330,"byte_end":35334,"line_start":1080,"line_end":1080,"column_start":16,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36049,"byte_end":36053,"line_start":1099,"line_end":1099,"column_start":31,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36783,"byte_end":36787,"line_start":1121,"line_end":1121,"column_start":41,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":36943,"byte_end":36947,"line_start":1128,"line_end":1128,"column_start":44,"column_end":48},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/lib.rs","byte_start":37147,"byte_end":37151,"line_start":1135,"line_end":1135,"column_start":34,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":254},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":49548,"byte_end":49564,"line_start":20,"line_end":20,"column_start":6,"column_end":22},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":52073,"byte_end":52081,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54371,"byte_end":54378,"line_start":178,"line_end":178,"column_start":25,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2967}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54477,"byte_end":54484,"line_start":184,"line_end":184,"column_start":22,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":54691,"byte_end":54698,"line_start":193,"line_end":193,"column_start":13,"column_end":20},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/once_cell-1.8.0/src/race.rs","byte_start":57563,"byte_end":57570,"line_start":275,"line_end":275,"column_start":42,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":3001}}]}