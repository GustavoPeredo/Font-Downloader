{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3","program":"/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","pest","/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=12c4ff7fdefe9771","-C","extra-filename=-12c4ff7fdefe9771","--out-dir","/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","-L","dependency=/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","--extern","ucd_trie=/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps/libucd_trie-b5cafc6c624bc004.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps/libpest-12c4ff7fdefe9771.rmeta"},"prelude":{"crate_id":{"name":"pest","disambiguator":[411892306409876862,0]},"crate_root":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src","external_crates":[{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","num":20,"id":{"name":"ucd_trie","disambiguator":[10461442407038071223,0]}}],"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":407,"byte_end":3421,"line_start":10,"line_end":103,"column_start":1,"column_end":58}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2563,"byte_end":2569,"line_start":73,"line_end":73,"column_start":17,"column_end":23},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2594,"byte_end":2599,"line_start":74,"line_end":74,"column_start":24,"column_end":29},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2601,"byte_end":2610,"line_start":74,"line_end":74,"column_start":31,"column_end":40},"alias_span":null,"name":"Atomicity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2612,"byte_end":2621,"line_start":74,"line_end":74,"column_start":42,"column_end":51},"alias_span":null,"name":"Lookahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2623,"byte_end":2631,"line_start":74,"line_end":74,"column_start":53,"column_end":61},"alias_span":null,"name":"MatchDir","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2633,"byte_end":2644,"line_start":74,"line_end":74,"column_start":63,"column_end":74},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2646,"byte_end":2657,"line_start":74,"line_end":74,"column_start":76,"column_end":87},"alias_span":null,"name":"ParserState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":904},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2678,"byte_end":2686,"line_start":75,"line_end":75,"column_start":19,"column_end":27},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2703,"byte_end":2708,"line_start":76,"line_end":76,"column_start":16,"column_end":21},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":941},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2710,"byte_end":2714,"line_start":76,"line_end":76,"column_start":23,"column_end":27},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2774,"byte_end":2779,"line_start":79,"line_end":79,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/mod.rs","byte_start":27525,"byte_end":27534,"line_start":18,"line_end":18,"column_start":27,"column_end":36},"alias_span":null,"name":"FlatPairs","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":0,"index":791},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/mod.rs","byte_start":27556,"byte_end":27560,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/mod.rs","byte_start":27583,"byte_end":27588,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"Pairs","value":"","parent":{"krate":0,"index":94}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/mod.rs","byte_start":27666,"byte_end":27672,"line_start":22,"line_end":22,"column_start":23,"column_end":29},"alias_span":null,"name":"Tokens","value":"","parent":{"krate":0,"index":94}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":407,"byte_end":3421,"line_start":10,"line_end":103,"column_start":1,"column_end":58},"name":"","qualname":"::","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":94},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":403},{"krate":0,"index":492},{"krate":0,"index":562},{"krate":0,"index":604},{"krate":0,"index":655},{"krate":0,"index":679},{"krate":0,"index":683},{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" # pest. The Elegant Parser","sig":null,"attributes":[{"value":"/ # pest. The Elegant Parser","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":407,"byte_end":437,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":438,"byte_end":441,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ pest is a general purpose parser written in Rust with a focus on accessibility, correctness,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":442,"byte_end":538,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ and performance. It uses parsing expression grammars (or [PEG]) as input, which are similar in","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":539,"byte_end":637,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ spirit to regular expressions, but which offer the enhanced expressivity needed to parse","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":638,"byte_end":730,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/ complex languages.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":731,"byte_end":753,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":754,"byte_end":757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [PEG]: https://en.wikipedia.org/wiki/Parsing_expression_grammar","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":758,"byte_end":825,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":826,"byte_end":829,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Getting started","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":830,"byte_end":852,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":853,"byte_end":856,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The recommended way to start parsing with pest is to read the official [book].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":857,"byte_end":939,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":940,"byte_end":943,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Other helpful resources:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":944,"byte_end":972,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":973,"byte_end":976,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * API reference on [docs.rs]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":977,"byte_end":1009,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ * play with grammars and share them on our [fiddle]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1010,"byte_end":1065,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ * leave feedback, ask questions, or greet us on [Gitter]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1066,"byte_end":1126,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [book]: https://pest-parser.github.io/book","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1131,"byte_end":1177,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ [docs.rs]: https://docs.rs/pest","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1178,"byte_end":1213,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ [fiddle]: https://pest-parser.github.io/#editor","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1214,"byte_end":1265,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [Gitter]: https://gitter.im/dragostis/pest","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1266,"byte_end":1312,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1313,"byte_end":1316,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1317,"byte_end":1329,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1330,"byte_end":1333,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The core of pest is the trait [`Parser`], which provides an interface to the parsing","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1334,"byte_end":1422,"line_start":36,"line_end":36,"column_start":1,"column_end":89}},{"value":"/ functionality.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1423,"byte_end":1441,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1442,"byte_end":1445,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The accompanying crate `pest_derive` can automatically generate a [`Parser`] from a PEG","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1446,"byte_end":1537,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ grammar. Using `pest_derive` is highly encouraged, but it is also possible to implement","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1538,"byte_end":1629,"line_start":40,"line_end":40,"column_start":1,"column_end":92}},{"value":"/ [`Parser`] manually if required.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1630,"byte_end":1666,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1667,"byte_end":1670,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## `.pest` files","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1671,"byte_end":1691,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1692,"byte_end":1695,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Grammar definitions reside in custom `.pest` files located in the crate `src` directory.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1696,"byte_end":1788,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ Parsers are automatically generated from these files using `#[derive(Parser)]` and a special","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1789,"byte_end":1885,"line_start":46,"line_end":46,"column_start":1,"column_end":97}},{"value":"/ `#[grammar = \"...\"]` attribute on a dummy struct.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1886,"byte_end":1939,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1940,"byte_end":1943,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1944,"byte_end":1957,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ #[derive(Parser)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1958,"byte_end":1979,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ #[grammar = \"path/to/my_grammar.pest\"] // relative to src","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":1980,"byte_end":2041,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"/ struct MyParser;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2042,"byte_end":2062,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2063,"byte_end":2070,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2071,"byte_end":2074,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The syntax of `.pest` files is documented in the [`pest_derive` crate].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2075,"byte_end":2150,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2151,"byte_end":2154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ## Inline grammars","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2155,"byte_end":2177,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Grammars can also be inlined by using the `#[grammar_inline = \"...\"]` attribute.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2182,"byte_end":2266,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2267,"byte_end":2270,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2271,"byte_end":2304,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ [`pest_derive` crate]: https://docs.rs/pest_derive/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2305,"byte_end":2360,"line_start":62,"line_end":62,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":691},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":748},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":67},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":93}],"decl_id":null,"docs":" Types for different kinds of parsing failures.\n","sig":null,"attributes":[{"value":"/ Types for different kinds of parsing failures.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":3830,"byte_end":3880,"line_start":10,"line_end":10,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4082,"byte_end":4087,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { variant, location, line_col }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698}],"decl_id":null,"docs":" Parse-related error type.\n","sig":null,"attributes":[{"value":"/ Parse-related error type.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":3996,"byte_end":4025,"line_start":21,"line_end":21,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":693},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4130,"byte_end":4137,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"variant","qualname":"::error::Error::variant","value":"error::ErrorVariant<R>","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" Variant of the error\n","sig":null,"attributes":[{"value":"/ Variant of the error","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4097,"byte_end":4121,"line_start":24,"line_end":24,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":694},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4205,"byte_end":4213,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"location","qualname":"::error::Error::location","value":"error::InputLocation","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" Location within the input string\n","sig":null,"attributes":[{"value":"/ Location within the input string","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4160,"byte_end":4196,"line_start":26,"line_end":26,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":695},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4282,"byte_end":4290,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"name":"line_col","qualname":"::error::Error::line_col","value":"error::LineColLocation","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" Line/column within the input string\n","sig":null,"attributes":[{"value":"/ Line/column within the input string","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4234,"byte_end":4273,"line_start":28,"line_end":28,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":722},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4576,"byte_end":4588,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"ParsingError","qualname":"::error::ErrorVariant::ParsingError","value":"ErrorVariant::ParsingError { positives, negatives }","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Generated parsing error with expected and unexpected `Rule`s\n","sig":null,"attributes":[{"value":"/ Generated parsing error with expected and unexpected `Rule`s","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4507,"byte_end":4571,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":725},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4752,"byte_end":4763,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"CustomError","qualname":"::error::ErrorVariant::CustomError","value":"ErrorVariant::CustomError { message }","parent":{"krate":0,"index":720},"children":[],"decl_id":null,"docs":" Custom error with a message\n","sig":null,"attributes":[{"value":"/ Custom error with a message","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4716,"byte_end":4747,"line_start":45,"line_end":45,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":720},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4485,"byte_end":4497,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"ErrorVariant","qualname":"::error::ErrorVariant","value":"pub enum ErrorVariant<R> {\n    ParsingError {\n        positives: Vec<R>,\n        negatives: Vec<R>,\n    },\n    CustomError {\n        message: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":725}],"decl_id":null,"docs":" Different kinds of parsing errors.\n","sig":null,"attributes":[{"value":"/ Different kinds of parsing errors.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4392,"byte_end":4430,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":749},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4993,"byte_end":4996,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::InputLocation::Pos","value":"InputLocation::Pos(usize)","parent":{"krate":0,"index":748},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[{"value":"/ `Error` was created by `Error::new_from_pos`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4940,"byte_end":4988,"line_start":55,"line_end":55,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":752},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5063,"byte_end":5067,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::InputLocation::Span","value":"InputLocation::Span((usize, usize))","parent":{"krate":0,"index":748},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[{"value":"/ `Error` was created by `Error::new_from_span`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5009,"byte_end":5058,"line_start":57,"line_end":57,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":748},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4920,"byte_end":4933,"line_start":54,"line_end":54,"column_start":10,"column_end":23},"name":"InputLocation","qualname":"::error::InputLocation","value":"pub enum InputLocation { Pos(usize), Span((usize, usize)), }","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":752}],"decl_id":null,"docs":" Where an `Error` has occurred.\n","sig":null,"attributes":[{"value":"/ Where an `Error` has occurred.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":4831,"byte_end":4865,"line_start":52,"line_end":52,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":770},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5284,"byte_end":5287,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::LineColLocation::Pos","value":"LineColLocation::Pos((usize, usize))","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Line/column pair if `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[{"value":"/ Line/column pair if `Error` was created by `Error::new_from_pos`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5211,"byte_end":5279,"line_start":64,"line_end":64,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":773},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5384,"byte_end":5388,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::LineColLocation::Span","value":"LineColLocation::Span((usize, usize), (usize, usize))","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" Line/column pairs if `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[{"value":"/ Line/column pairs if `Error` was created by `Error::new_from_span`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5309,"byte_end":5379,"line_start":66,"line_end":66,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":769},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5189,"byte_end":5204,"line_start":63,"line_end":63,"column_start":10,"column_end":25},"name":"LineColLocation","qualname":"::error::LineColLocation","value":"pub enum LineColLocation {\n    Pos((usize, usize)),\n    Span((usize, usize), (usize, usize)),\n}","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":773}],"decl_id":null,"docs":" Line/column where an `Error` has occurred.\n","sig":null,"attributes":[{"value":"/ Line/column where an `Error` has occurred.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5088,"byte_end":5134,"line_start":61,"line_end":61,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6286,"byte_end":6298,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"new_from_pos","qualname":"<Error<R>>::new_from_pos","value":"pub fn new_from_pos(ErrorVariant<R>, Position) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Position`.","sig":null,"attributes":[{"value":"/ Creates `Error` from `ErrorVariant` and `Position`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5458,"byte_end":5513,"line_start":71,"line_end":71,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5518,"byte_end":5521,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5526,"byte_end":5540,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5545,"byte_end":5548,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5553,"byte_end":5560,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5565,"byte_end":5610,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5615,"byte_end":5640,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5645,"byte_end":5681,"line_start":78,"line_end":78,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5686,"byte_end":5711,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5716,"byte_end":5789,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5794,"byte_end":5811,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5816,"byte_end":5837,"line_start":82,"line_end":82,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5842,"byte_end":5864,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5869,"byte_end":5876,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5881,"byte_end":5902,"line_start":85,"line_end":85,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5907,"byte_end":5951,"line_start":86,"line_end":86,"column_start":5,"column_end":49}},{"value":"/ let error = Error::new_from_pos(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5956,"byte_end":5992,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5997,"byte_end":6033,"line_start":88,"line_end":88,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6038,"byte_end":6084,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6089,"byte_end":6136,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6141,"byte_end":6151,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6156,"byte_end":6167,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6172,"byte_end":6178,"line_start":93,"line_end":93,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6183,"byte_end":6186,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", error);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6191,"byte_end":6217,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6222,"byte_end":6229,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6234,"byte_end":6274,"line_start":97,"line_end":97,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7548,"byte_end":7561,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"new_from_span","qualname":"<Error<R>>::new_from_span","value":"pub fn new_from_span(ErrorVariant<R>, Span) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Span`.","sig":null,"attributes":[{"value":"/ Creates `Error` from `ErrorVariant` and `Span`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6638,"byte_end":6689,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6694,"byte_end":6697,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6702,"byte_end":6716,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6721,"byte_end":6724,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6729,"byte_end":6736,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6741,"byte_end":6786,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"/ # use pest::{Position, Span};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6791,"byte_end":6824,"line_start":115,"line_end":115,"column_start":5,"column_end":38}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6829,"byte_end":6865,"line_start":116,"line_end":116,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6870,"byte_end":6895,"line_start":117,"line_end":117,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6900,"byte_end":6973,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":6978,"byte_end":6995,"line_start":119,"line_end":119,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7000,"byte_end":7021,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7026,"byte_end":7048,"line_start":121,"line_end":121,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7053,"byte_end":7060,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7065,"byte_end":7086,"line_start":123,"line_end":123,"column_start":5,"column_end":26}},{"value":"/ # let start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7091,"byte_end":7137,"line_start":124,"line_end":124,"column_start":5,"column_end":51}},{"value":"/ # let end = start.clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7142,"byte_end":7172,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ # let span = start.span(&end);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7177,"byte_end":7211,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/ let error = Error::new_from_span(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7216,"byte_end":7253,"line_start":127,"line_end":127,"column_start":5,"column_end":42}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7258,"byte_end":7294,"line_start":128,"line_end":128,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7299,"byte_end":7345,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7350,"byte_end":7397,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7402,"byte_end":7412,"line_start":131,"line_end":131,"column_start":5,"column_end":15}},{"value":"/     span","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7417,"byte_end":7429,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7434,"byte_end":7440,"line_start":133,"line_end":133,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7445,"byte_end":7448,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", error);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7453,"byte_end":7479,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7484,"byte_end":7491,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":7496,"byte_end":7536,"line_start":137,"line_end":137,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9272,"byte_end":9281,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Error<R>>::with_path","value":"pub fn with_path(Self, &str) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Error` variant with `path` which is shown when formatted with `Display`.","sig":null,"attributes":[{"value":"/ Returns `Error` variant with `path` which is shown when formatted with `Display`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8489,"byte_end":8574,"line_start":164,"line_end":164,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8579,"byte_end":8582,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8587,"byte_end":8601,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8606,"byte_end":8609,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8614,"byte_end":8621,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8626,"byte_end":8671,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8676,"byte_end":8701,"line_start":170,"line_end":170,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8706,"byte_end":8742,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8747,"byte_end":8772,"line_start":172,"line_end":172,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8777,"byte_end":8850,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8855,"byte_end":8872,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8877,"byte_end":8898,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8903,"byte_end":8925,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8930,"byte_end":8937,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8942,"byte_end":8963,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":8968,"byte_end":9012,"line_start":179,"line_end":179,"column_start":5,"column_end":49}},{"value":"/ Error::new_from_pos(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9017,"byte_end":9041,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9046,"byte_end":9082,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9087,"byte_end":9133,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9138,"byte_end":9185,"line_start":183,"line_end":183,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9190,"byte_end":9200,"line_start":184,"line_end":184,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9205,"byte_end":9216,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ ).with_path(\"file.rs\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9221,"byte_end":9248,"line_start":186,"line_end":186,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9253,"byte_end":9260,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10607,"byte_end":10620,"line_start":229,"line_end":229,"column_start":12,"column_end":25},"name":"renamed_rules","qualname":"<Error<R>>::renamed_rules","value":"pub fn renamed_rules<F>(Self, F) -> Error<R> where F: FnMut(&R) -> String","parent":null,"children":[],"decl_id":null,"docs":" Renames all `Rule`s if this is a [`ParsingError`]. It does nothing when called on a\n [`CustomError`].","sig":null,"attributes":[{"value":"/ Renames all `Rule`s if this is a [`ParsingError`]. It does nothing when called on a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9386,"byte_end":9473,"line_start":194,"line_end":194,"column_start":5,"column_end":92}},{"value":"/ [`CustomError`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9478,"byte_end":9498,"line_start":195,"line_end":195,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9503,"byte_end":9506,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Useful in order to rename verbose rules or have detailed per-`Rule` formatting.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9511,"byte_end":9594,"line_start":197,"line_end":197,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9599,"byte_end":9602,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`ParsingError`]: enum.ErrorVariant.html#variant.ParsingError","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9607,"byte_end":9672,"line_start":199,"line_end":199,"column_start":5,"column_end":70}},{"value":"/ [`CustomError`]: enum.ErrorVariant.html#variant.CustomError","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9677,"byte_end":9740,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9745,"byte_end":9748,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9753,"byte_end":9767,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9772,"byte_end":9775,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9780,"byte_end":9787,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ # use pest::error::{Error, ErrorVariant};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9792,"byte_end":9837,"line_start":205,"line_end":205,"column_start":5,"column_end":50}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9842,"byte_end":9867,"line_start":206,"line_end":206,"column_start":5,"column_end":30}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9872,"byte_end":9908,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9913,"byte_end":9938,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":9943,"byte_end":10016,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10021,"byte_end":10038,"line_start":210,"line_end":210,"column_start":5,"column_end":22}},{"value":"/ #     open_paren,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10043,"byte_end":10064,"line_start":211,"line_end":211,"column_start":5,"column_end":26}},{"value":"/ #     closed_paren","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10069,"byte_end":10091,"line_start":212,"line_end":212,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10096,"byte_end":10103,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10108,"byte_end":10129,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/ # let pos = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10134,"byte_end":10178,"line_start":215,"line_end":215,"column_start":5,"column_end":49}},{"value":"/ Error::new_from_pos(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10183,"byte_end":10207,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/     ErrorVariant::ParsingError {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10212,"byte_end":10248,"line_start":217,"line_end":217,"column_start":5,"column_end":41}},{"value":"/         positives: vec![Rule::open_paren],","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10253,"byte_end":10299,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/         negatives: vec![Rule::closed_paren]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10304,"byte_end":10351,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/     },","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10356,"byte_end":10366,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/     pos","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10371,"byte_end":10382,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/ ).renamed_rules(|rule| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10387,"byte_end":10415,"line_start":222,"line_end":222,"column_start":5,"column_end":33}},{"value":"/     match *rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10420,"byte_end":10441,"line_start":223,"line_end":223,"column_start":5,"column_end":26}},{"value":"/         Rule::open_paren => \"(\".to_owned(),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10446,"byte_end":10493,"line_start":224,"line_end":224,"column_start":5,"column_end":52}},{"value":"/         Rule::closed_paren => \"closed paren\".to_owned()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10498,"byte_end":10557,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10562,"byte_end":10571,"line_start":226,"line_end":226,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10576,"byte_end":10583,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":10588,"byte_end":10595,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":94},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterators","qualname":"::iterators","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/mod.rs","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":155},{"krate":0,"index":239},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383}],"decl_id":null,"docs":" Types and iterators for parser output.\n","sig":null,"attributes":[{"value":"/ Types and iterators for parser output.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/mod.rs","byte_start":27373,"byte_end":27415,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":28411,"byte_end":28420,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"FlatPairs","qualname":"::iterators::flat_pairs::FlatPairs","value":"FlatPairs {  }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`Pairs::flatten`].","sig":null,"attributes":[{"value":"/ An iterator over [`Pair`]s. It is created by [`Pairs::flatten`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":28239,"byte_end":28307,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":28308,"byte_end":28311,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Pair`]: struct.Pair.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":28312,"byte_end":28342,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ [`Pairs::flatten`]: struct.Pairs.html#method.flatten","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":28343,"byte_end":28399,"line_start":21,"line_end":21,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29677,"byte_end":29683,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"tokens","qualname":"<FlatPairs>::tokens","value":"pub fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for these pairs.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for these pairs.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29030,"byte_end":29071,"line_start":50,"line_end":50,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29076,"byte_end":29079,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29084,"byte_end":29098,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29103,"byte_end":29106,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29111,"byte_end":29118,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29123,"byte_end":29145,"line_start":55,"line_end":55,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29150,"byte_end":29165,"line_start":56,"line_end":56,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29170,"byte_end":29206,"line_start":57,"line_end":57,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29211,"byte_end":29284,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29289,"byte_end":29304,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29309,"byte_end":29318,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29323,"byte_end":29328,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29333,"byte_end":29336,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29341,"byte_end":29360,"line_start":63,"line_end":63,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29365,"byte_end":29409,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29414,"byte_end":29463,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29468,"byte_end":29508,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/ }).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29513,"byte_end":29529,"line_start":67,"line_end":67,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.flatten().tokens().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29534,"byte_end":29594,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29599,"byte_end":29602,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29607,"byte_end":29639,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29644,"byte_end":29651,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29656,"byte_end":29665,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33406,"byte_end":33410,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Pair","qualname":"::iterators::pair::Pair","value":"Pair {  }","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796}],"decl_id":null,"docs":" A matching pair of [`Token`]s and everything between them.","sig":null,"attributes":[{"value":"/ A matching pair of [`Token`]s and everything between them.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":32966,"byte_end":33028,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33029,"byte_end":33032,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ A matching `Token` pair is formed by a `Token::Start` and a subsequent `Token::End` with the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33033,"byte_end":33129,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ same `Rule`, with the condition that all `Token`s between them can form such pairs as well.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33130,"byte_end":33225,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ This is similar to the [brace matching problem](https://en.wikipedia.org/wiki/Brace_matching) in","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33226,"byte_end":33326,"line_start":29,"line_end":29,"column_start":1,"column_end":101}},{"value":"/ editors.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33327,"byte_end":33339,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33340,"byte_end":33343,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`Token`]: ../enum.Token.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33344,"byte_end":33377,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34595,"byte_end":34602,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"as_rule","qualname":"<Pair>::as_rule","value":"pub fn as_rule(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rule` of the `Pair`.","sig":null,"attributes":[{"value":"/ Returns the `Rule` of the `Pair`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33994,"byte_end":34031,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34036,"byte_end":34039,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34044,"byte_end":34058,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34063,"byte_end":34066,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34071,"byte_end":34078,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34083,"byte_end":34105,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34110,"byte_end":34125,"line_start":66,"line_end":66,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34130,"byte_end":34166,"line_start":67,"line_end":67,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34171,"byte_end":34244,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34249,"byte_end":34264,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34269,"byte_end":34278,"line_start":70,"line_end":70,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34283,"byte_end":34288,"line_start":71,"line_end":71,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34293,"byte_end":34296,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34301,"byte_end":34320,"line_start":73,"line_end":73,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34325,"byte_end":34368,"line_start":74,"line_end":74,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34373,"byte_end":34422,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34427,"byte_end":34467,"line_start":76,"line_end":76,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34472,"byte_end":34504,"line_start":77,"line_end":77,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34509,"byte_end":34512,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_rule(), Rule::a);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34517,"byte_end":34557,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34562,"byte_end":34569,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34574,"byte_end":34583,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35410,"byte_end":35416,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pair>::as_str","value":"pub fn as_str(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the token `Pair`.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the token `Pair`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34765,"byte_end":34830,"line_start":89,"line_end":89,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34835,"byte_end":34838,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34843,"byte_end":34857,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34862,"byte_end":34865,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34870,"byte_end":34877,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34882,"byte_end":34904,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34909,"byte_end":34924,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34929,"byte_end":34965,"line_start":96,"line_end":96,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":34970,"byte_end":35043,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35048,"byte_end":35063,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35068,"byte_end":35078,"line_start":99,"line_end":99,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35083,"byte_end":35088,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35093,"byte_end":35096,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35101,"byte_end":35122,"line_start":102,"line_end":102,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35127,"byte_end":35170,"line_start":103,"line_end":103,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35175,"byte_end":35225,"line_start":104,"line_end":104,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35230,"byte_end":35286,"line_start":105,"line_end":105,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35291,"byte_end":35323,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35328,"byte_end":35331,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_str(), \"ab\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35336,"byte_end":35372,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35377,"byte_end":35384,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35389,"byte_end":35398,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36370,"byte_end":36379,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"into_span","qualname":"<Pair>::into_span","value":"pub fn into_span(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, consuming it.","sig":null,"attributes":[{"value":"/ Returns the `Span` defined by the `Pair`, consuming it.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35645,"byte_end":35704,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35709,"byte_end":35712,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35717,"byte_end":35731,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35736,"byte_end":35739,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35744,"byte_end":35751,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35756,"byte_end":35778,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35783,"byte_end":35798,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35803,"byte_end":35839,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35844,"byte_end":35917,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35922,"byte_end":35937,"line_start":128,"line_end":128,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35942,"byte_end":35952,"line_start":129,"line_end":129,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35957,"byte_end":35962,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35967,"byte_end":35970,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":35975,"byte_end":35996,"line_start":132,"line_end":132,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36001,"byte_end":36044,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36049,"byte_end":36099,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36104,"byte_end":36160,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36165,"byte_end":36197,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36202,"byte_end":36205,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.into_span().as_str(), \"ab\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36210,"byte_end":36258,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36263,"byte_end":36270,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36275,"byte_end":36284,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"2.0.0\", note = \"Please use `as_span` instead\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36289,"byte_end":36358,"line_start":141,"line_end":141,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37095,"byte_end":37102,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"as_span","qualname":"<Pair>::as_span","value":"pub fn as_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, **without** consuming it.","sig":null,"attributes":[{"value":"/ Returns the `Span` defined by the `Pair`, **without** consuming it.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36434,"byte_end":36505,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36510,"byte_end":36513,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36518,"byte_end":36532,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36537,"byte_end":36540,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36545,"byte_end":36552,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36557,"byte_end":36579,"line_start":151,"line_end":151,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36584,"byte_end":36599,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36604,"byte_end":36640,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36645,"byte_end":36718,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36723,"byte_end":36738,"line_start":155,"line_end":155,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36743,"byte_end":36753,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36758,"byte_end":36763,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36768,"byte_end":36771,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36776,"byte_end":36797,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36802,"byte_end":36845,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::ab ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36850,"byte_end":36900,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ #     state.rule(Rule::ab, |s| s.match_string(\"ab\"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36905,"byte_end":36961,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":36966,"byte_end":36998,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37003,"byte_end":37006,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.as_span().as_str(), \"ab\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37011,"byte_end":37057,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37062,"byte_end":37069,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37074,"byte_end":37083,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38004,"byte_end":38014,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Pair>::into_inner","value":"pub fn into_inner(Self) -> Pairs","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `Pairs` between the `Pair`, consuming it.","sig":null,"attributes":[{"value":"/ Returns the inner `Pairs` between the `Pair`, consuming it.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37369,"byte_end":37432,"line_start":176,"line_end":176,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37437,"byte_end":37440,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37445,"byte_end":37459,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37464,"byte_end":37467,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37472,"byte_end":37479,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37484,"byte_end":37506,"line_start":181,"line_end":181,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37511,"byte_end":37526,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37531,"byte_end":37567,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37572,"byte_end":37645,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37650,"byte_end":37665,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37670,"byte_end":37679,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37684,"byte_end":37689,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37694,"byte_end":37697,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37702,"byte_end":37721,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37726,"byte_end":37769,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37774,"byte_end":37823,"line_start":191,"line_end":191,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37828,"byte_end":37868,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37873,"byte_end":37905,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37910,"byte_end":37913,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert!(pair.into_inner().next().is_none());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37918,"byte_end":37966,"line_start":195,"line_end":195,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37971,"byte_end":37978,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":37983,"byte_end":37992,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38798,"byte_end":38804,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pair>::tokens","value":"pub fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pair`.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for the `Pair`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38148,"byte_end":38188,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38193,"byte_end":38196,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38201,"byte_end":38215,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38220,"byte_end":38223,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38228,"byte_end":38235,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38240,"byte_end":38262,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38267,"byte_end":38282,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38287,"byte_end":38323,"line_start":211,"line_end":211,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38328,"byte_end":38401,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38406,"byte_end":38421,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38426,"byte_end":38435,"line_start":214,"line_end":214,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38440,"byte_end":38445,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38450,"byte_end":38453,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38458,"byte_end":38477,"line_start":217,"line_end":217,"column_start":5,"column_end":24}},{"value":"/ let pair = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38482,"byte_end":38525,"line_start":218,"line_end":218,"column_start":5,"column_end":48}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38530,"byte_end":38579,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38584,"byte_end":38624,"line_start":220,"line_end":220,"column_start":5,"column_end":45}},{"value":"/ }).unwrap().next().unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38629,"byte_end":38661,"line_start":221,"line_end":221,"column_start":5,"column_end":37}},{"value":"/ let tokens: Vec<_> = pair.tokens().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38666,"byte_end":38715,"line_start":222,"line_end":222,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38720,"byte_end":38723,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38728,"byte_end":38760,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38765,"byte_end":38772,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":38777,"byte_end":38786,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":39801,"byte_end":39807,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"single","qualname":"<Pairs>::single","value":"pub fn single(Pair) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Pairs` iterator containing just the single `Pair`.\n","sig":null,"attributes":[{"value":"/ Create a new `Pairs` iterator containing just the single `Pair`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":39721,"byte_end":39789,"line_start":259,"line_end":259,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44074,"byte_end":44079,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::iterators::pairs::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`pest::state`] and [`Pair::into_inner`].","sig":null,"attributes":[{"value":"/ An iterator over [`Pair`]s. It is created by [`pest::state`] and [`Pair::into_inner`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":43821,"byte_end":43911,"line_start":25,"line_end":25,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":43912,"byte_end":43915,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`Pair`]: struct.Pair.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":43916,"byte_end":43946,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ [`pest::state`]: ../fn.state.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":43947,"byte_end":43984,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ [`Pair::into_inner`]: struct.Pair.html#method.into_inner","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":43985,"byte_end":44045,"line_start":29,"line_end":29,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45364,"byte_end":45370,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pairs>::as_str","value":"pub fn as_str(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the starting position of the first token `Pair`\n and the ending position of the last token `Pair` of the `Pairs`. This also captures\n the input between those two token `Pair`s.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the starting position of the first token `Pair`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44436,"byte_end":44531,"line_start":53,"line_end":53,"column_start":5,"column_end":100}},{"value":"/ and the ending position of the last token `Pair` of the `Pairs`. This also captures","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44536,"byte_end":44623,"line_start":54,"line_end":54,"column_start":5,"column_end":92}},{"value":"/ the input between those two token `Pair`s.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44628,"byte_end":44674,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44679,"byte_end":44682,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44687,"byte_end":44701,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44706,"byte_end":44709,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44714,"byte_end":44721,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44726,"byte_end":44748,"line_start":60,"line_end":60,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44753,"byte_end":44768,"line_start":61,"line_end":61,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44773,"byte_end":44809,"line_start":62,"line_end":62,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44814,"byte_end":44887,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44892,"byte_end":44907,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44912,"byte_end":44922,"line_start":65,"line_end":65,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44927,"byte_end":44936,"line_start":66,"line_end":66,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44941,"byte_end":44946,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44951,"byte_end":44954,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let input = \"a b\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44959,"byte_end":44981,"line_start":69,"line_end":69,"column_start":5,"column_end":27}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44986,"byte_end":45030,"line_start":70,"line_end":70,"column_start":5,"column_end":49}},{"value":"/     // generating Token pairs with Rule::a and Rule::b ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45035,"byte_end":45097,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ #     state.rule(Rule::a, |s| s.match_string(\"a\")).and_then(|s| s.skip(1))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45102,"byte_end":45180,"line_start":72,"line_end":72,"column_start":5,"column_end":83}},{"value":"/ #         .and_then(|s| s.rule(Rule::b, |s| s.match_string(\"b\")))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45185,"byte_end":45254,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ }).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45259,"byte_end":45275,"line_start":74,"line_end":74,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45280,"byte_end":45283,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.as_str(), \"a b\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45288,"byte_end":45326,"line_start":76,"line_end":76,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45331,"byte_end":45338,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45343,"byte_end":45352,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46512,"byte_end":46518,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"concat","qualname":"<Pairs>::concat","value":"pub fn concat(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Captures inner token `Pair`s and concatenates resulting `&str`s. This does not capture\n the input between token `Pair`s.","sig":null,"attributes":[{"value":"/ Captures inner token `Pair`s and concatenates resulting `&str`s. This does not capture","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45692,"byte_end":45782,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ the input between token `Pair`s.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45787,"byte_end":45823,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45828,"byte_end":45831,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45836,"byte_end":45850,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45855,"byte_end":45858,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45863,"byte_end":45870,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45875,"byte_end":45897,"line_start":96,"line_end":96,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45902,"byte_end":45917,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45922,"byte_end":45958,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":45963,"byte_end":46036,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46041,"byte_end":46056,"line_start":100,"line_end":100,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46061,"byte_end":46071,"line_start":101,"line_end":101,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46076,"byte_end":46085,"line_start":102,"line_end":102,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46090,"byte_end":46095,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46100,"byte_end":46103,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let input = \"a b\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46108,"byte_end":46130,"line_start":105,"line_end":105,"column_start":5,"column_end":27}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46135,"byte_end":46179,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/     // generating Token pairs with Rule::a and Rule::b ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46184,"byte_end":46246,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"/ #     state.rule(Rule::a, |s| s.match_string(\"a\")).and_then(|s| s.skip(1))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46251,"byte_end":46329,"line_start":108,"line_end":108,"column_start":5,"column_end":83}},{"value":"/ #         .and_then(|s| s.rule(Rule::b, |s| s.match_string(\"b\")))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46334,"byte_end":46403,"line_start":109,"line_end":109,"column_start":5,"column_end":74}},{"value":"/ }).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46408,"byte_end":46424,"line_start":110,"line_end":110,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46429,"byte_end":46432,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.concat(), \"ab\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46437,"byte_end":46474,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46479,"byte_end":46486,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46491,"byte_end":46500,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47371,"byte_end":47378,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Pairs>::flatten","value":"pub fn flatten(Self) -> FlatPairs","parent":null,"children":[],"decl_id":null,"docs":" Flattens the `Pairs`.","sig":null,"attributes":[{"value":"/ Flattens the `Pairs`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46642,"byte_end":46667,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46672,"byte_end":46675,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46680,"byte_end":46694,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46699,"byte_end":46702,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46707,"byte_end":46714,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46719,"byte_end":46741,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46746,"byte_end":46761,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46766,"byte_end":46802,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46807,"byte_end":46880,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46885,"byte_end":46900,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46905,"byte_end":46915,"line_start":130,"line_end":130,"column_start":5,"column_end":15}},{"value":"/     b","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46920,"byte_end":46929,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46934,"byte_end":46939,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46944,"byte_end":46947,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46952,"byte_end":46971,"line_start":134,"line_end":134,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":46976,"byte_end":47020,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/     // generating nested Token pair with Rule::b inside Rule::a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47025,"byte_end":47092,"line_start":136,"line_end":136,"column_start":5,"column_end":72}},{"value":"/ #     state.rule(Rule::a, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47097,"byte_end":47136,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/ #         state.rule(Rule::b, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47141,"byte_end":47185,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/ #     })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47190,"byte_end":47202,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/ }).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47207,"byte_end":47223,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.flatten().tokens().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47228,"byte_end":47288,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47293,"byte_end":47296,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 4);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47301,"byte_end":47333,"line_start":143,"line_end":143,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47338,"byte_end":47345,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47350,"byte_end":47359,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48136,"byte_end":48142,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pairs>::tokens","value":"pub fn tokens(Self) -> Tokens","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pairs`.","sig":null,"attributes":[{"value":"/ Returns the `Tokens` for the `Pairs`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47499,"byte_end":47540,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47545,"byte_end":47548,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47553,"byte_end":47567,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47572,"byte_end":47575,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47580,"byte_end":47587,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47592,"byte_end":47614,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47619,"byte_end":47634,"line_start":156,"line_end":156,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47639,"byte_end":47675,"line_start":157,"line_end":157,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47680,"byte_end":47753,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47758,"byte_end":47773,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47778,"byte_end":47787,"line_start":160,"line_end":160,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47792,"byte_end":47797,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47802,"byte_end":47805,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47810,"byte_end":47829,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ let pairs = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47834,"byte_end":47878,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"/     // generating Token pair with Rule::a ...","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47883,"byte_end":47932,"line_start":165,"line_end":165,"column_start":5,"column_end":54}},{"value":"/ #     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47937,"byte_end":47977,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/ }).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":47982,"byte_end":47998,"line_start":167,"line_end":167,"column_start":5,"column_end":21}},{"value":"/ let tokens: Vec<_> = pairs.tokens().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48003,"byte_end":48053,"line_start":168,"line_end":168,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48058,"byte_end":48061,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tokens.len(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48066,"byte_end":48098,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48103,"byte_end":48110,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48115,"byte_end":48124,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48353,"byte_end":48357,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"peek","qualname":"<Pairs>::peek","value":"pub fn peek(&Self) -> Option<Pair>","parent":null,"children":[],"decl_id":null,"docs":" Peek at the first inner `Pair` without changing the position of this iterator.\n","sig":null,"attributes":[{"value":"/ Peek at the first inner `Pair` without changing the position of this iterator.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48245,"byte_end":48327,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":48332,"byte_end":48341,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":56140,"byte_end":56146,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::iterators::tokens::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832}],"decl_id":null,"docs":" An iterator over [`Token`]s. It is created by [`Pair::tokens`] and [`Pairs::tokens`].","sig":null,"attributes":[{"value":"/ An iterator over [`Token`]s. It is created by [`Pair::tokens`] and [`Pairs::tokens`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":55876,"byte_end":55965,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":55966,"byte_end":55969,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Token`]: ../enum.Token.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":55970,"byte_end":56003,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Pair::tokens`]: struct.Pair.html#method.tokens","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":56004,"byte_end":56056,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Pairs::tokens`]: struct.Pairs.html#method.tokens","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":56057,"byte_end":56111,"line_start":23,"line_end":23,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":400},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser.rs","byte_start":75319,"byte_end":75325,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parser::Parser","value":"Parser<R: RuleType>","parent":null,"children":[{"krate":0,"index":402}],"decl_id":null,"docs":" A trait with a single method that parses strings.\n","sig":null,"attributes":[{"value":"/ A trait with a single method that parses strings.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser.rs","byte_start":75255,"byte_end":75308,"line_start":14,"line_end":14,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser.rs","byte_start":75394,"byte_end":75399,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parser::parse","value":"pub fn parse(R, &str) -> Result<Pairs<, R>, Error<R>>","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" Parses a `&str` starting from `rule`.\n","sig":null,"attributes":[{"value":"/ Parses a `&str` starting from `rule`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser.rs","byte_start":75345,"byte_end":75386,"line_start":16,"line_end":16,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":838},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76231,"byte_end":76239,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Positive","qualname":"::parser_state::Lookahead::Positive","value":"Lookahead::Positive","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":840},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76245,"byte_end":76253,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Negative","qualname":"::parser_state::Lookahead::Negative","value":"Lookahead::Negative","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":842},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76259,"byte_end":76263,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"None","qualname":"::parser_state::Lookahead::None","value":"Lookahead::None","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":837},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76215,"byte_end":76224,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"Lookahead","qualname":"::parser_state::Lookahead","value":"pub enum Lookahead { Positive, Negative, None, }","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842}],"decl_id":null,"docs":" The current lookahead status of a [`ParserState`].","sig":null,"attributes":[{"value":"/ The current lookahead status of a [`ParserState`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76057,"byte_end":76111,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76112,"byte_end":76115,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ParserState`]: struct.ParserState.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76116,"byte_end":76160,"line_start":22,"line_end":22,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76435,"byte_end":76441,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::parser_state::Atomicity::Atomic","value":"Atomicity::Atomic","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":858},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76447,"byte_end":76461,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"CompoundAtomic","qualname":"::parser_state::Atomicity::CompoundAtomic","value":"Atomicity::CompoundAtomic","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":860},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76467,"byte_end":76476,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"NonAtomic","qualname":"::parser_state::Atomicity::NonAtomic","value":"Atomicity::NonAtomic","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":855},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76419,"byte_end":76428,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"Atomicity","qualname":"::parser_state::Atomicity","value":"pub enum Atomicity { Atomic, CompoundAtomic, NonAtomic, }","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860}],"decl_id":null,"docs":" The current atomicity of a [`ParserState`].","sig":null,"attributes":[{"value":"/ The current atomicity of a [`ParserState`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76268,"byte_end":76315,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76316,"byte_end":76319,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`ParserState`]: struct.ParserState.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76320,"byte_end":76364,"line_start":32,"line_end":32,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":440},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76566,"byte_end":76577,"line_start":41,"line_end":41,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parser_state::ParseResult","value":"Result<S, S>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to simplify specifying the return value of chained closures.\n","sig":null,"attributes":[{"value":"/ Type alias to simplify specifying the return value of chained closures.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76481,"byte_end":76556,"line_start":40,"line_end":40,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76749,"byte_end":76760,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"BottomToTop","qualname":"::parser_state::MatchDir::BottomToTop","value":"MatchDir::BottomToTop","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76766,"byte_end":76777,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"TopToBottom","qualname":"::parser_state::MatchDir::TopToBottom","value":"MatchDir::TopToBottom","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":873},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76734,"byte_end":76742,"line_start":45,"line_end":45,"column_start":10,"column_end":18},"name":"MatchDir","qualname":"::parser_state::MatchDir","value":"pub enum MatchDir { BottomToTop, TopToBottom, }","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":876}],"decl_id":null,"docs":" Match direction for the stack. Used in `PEEK[a..b]`/`stack_match_peek_slice`.\n","sig":null,"attributes":[{"value":"/ Match direction for the stack. Used in `PEEK[a..b]`/`stack_match_peek_slice`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76598,"byte_end":76679,"line_start":43,"line_end":43,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":889},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76888,"byte_end":76899,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"ParserState","qualname":"::parser_state::ParserState","value":"ParserState {  }","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" The complete state of a [`Parser`].","sig":null,"attributes":[{"value":"/ The complete state of a [`Parser`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76782,"byte_end":76821,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76822,"byte_end":76825,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":76826,"byte_end":76859,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77350,"byte_end":77355,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"state","qualname":"::parser_state::state","value":"pub fn state<'i, R: RuleType, F>(&'i str, F) -> Result<pairs::Pairs, Error<R>>\nwhere F: FnOnce(Box<ParserState>) -> ParseResult<Box<ParserState>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ParserState` from a `&str`, supplying it to a closure `f`.","sig":null,"attributes":[{"value":"/ Creates a `ParserState` from a `&str`, supplying it to a closure `f`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77141,"byte_end":77214,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77215,"byte_end":77218,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77219,"byte_end":77233,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77234,"byte_end":77237,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77238,"byte_end":77245,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77246,"byte_end":77261,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77262,"byte_end":77281,"line_start":71,"line_end":71,"column_start":1,"column_end":20}},{"value":"/ pest::state::<(), _>(input, |s| Ok(s)).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77282,"byte_end":77334,"line_start":72,"line_end":72,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":77335,"byte_end":77342,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78798,"byte_end":78801,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserState>::new","value":"pub fn new(&'i str) -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a fresh `ParserState` object to the heap and returns the owned `Box`. This `Box`\n will be passed from closure to closure based on the needs of the specified `Parser`.","sig":null,"attributes":[{"value":"/ Allocates a fresh `ParserState` object to the heap and returns the owned `Box`. This `Box`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78377,"byte_end":78471,"line_start":104,"line_end":104,"column_start":5,"column_end":99}},{"value":"/ will be passed from closure to closure based on the needs of the specified `Parser`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78476,"byte_end":78564,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78569,"byte_end":78572,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78577,"byte_end":78591,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78596,"byte_end":78599,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78604,"byte_end":78611,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78616,"byte_end":78631,"line_start":110,"line_end":110,"column_start":5,"column_end":20}},{"value":"/ let input = \"\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78636,"byte_end":78655,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/ let state: Box<pest::ParserState<&str>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78660,"byte_end":78736,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78741,"byte_end":78748,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78753,"byte_end":78786,"line_start":114,"line_end":114,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79703,"byte_end":79711,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"position","qualname":"<ParserState>::position","value":"pub fn position(&Self) -> &Position","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `Position` of the `ParserState`.","sig":null,"attributes":[{"value":"/ Returns a reference to the current `Position` of the `ParserState`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79178,"byte_end":79249,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79254,"byte_end":79257,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79262,"byte_end":79276,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79281,"byte_end":79284,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79289,"byte_end":79296,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79301,"byte_end":79316,"line_start":133,"line_end":133,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79321,"byte_end":79357,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79362,"byte_end":79435,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79440,"byte_end":79455,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79460,"byte_end":79470,"line_start":137,"line_end":137,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79475,"byte_end":79480,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79485,"byte_end":79488,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79493,"byte_end":79514,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79519,"byte_end":79599,"line_start":141,"line_end":141,"column_start":5,"column_end":85}},{"value":"/ let position = state.position();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79604,"byte_end":79640,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(position.pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79645,"byte_end":79679,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79684,"byte_end":79691,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80328,"byte_end":80337,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"atomicity","qualname":"<ParserState>::atomicity","value":"pub fn atomicity(&Self) -> Atomicity","parent":null,"children":[],"decl_id":null,"docs":" Returns the current atomicity of the `ParserState`.","sig":null,"attributes":[{"value":"/ Returns the current atomicity of the `ParserState`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79772,"byte_end":79827,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79832,"byte_end":79835,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79840,"byte_end":79854,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79859,"byte_end":79862,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79867,"byte_end":79874,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79879,"byte_end":79894,"line_start":154,"line_end":154,"column_start":5,"column_end":20}},{"value":"/ # use pest::Atomicity;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79899,"byte_end":79925,"line_start":155,"line_end":155,"column_start":5,"column_end":31}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79930,"byte_end":79966,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":79971,"byte_end":80044,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80049,"byte_end":80064,"line_start":158,"line_end":158,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80069,"byte_end":80079,"line_start":159,"line_end":159,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80084,"byte_end":80089,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80094,"byte_end":80097,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80102,"byte_end":80123,"line_start":162,"line_end":162,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80128,"byte_end":80208,"line_start":163,"line_end":163,"column_start":5,"column_end":85}},{"value":"/ let atomicity = state.atomicity();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80213,"byte_end":80251,"line_start":164,"line_end":164,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(atomicity, Atomicity::NonAtomic);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80256,"byte_end":80304,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80309,"byte_end":80316,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80994,"byte_end":80998,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"rule","qualname":"<ParserState>::rule","value":"pub fn rule<F>(Box<Self>, R, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper needed to generate tokens. This will associate the `R` type rule to the closure\n meant to match the rule.","sig":null,"attributes":[{"value":"/ Wrapper needed to generate tokens. This will associate the `R` type rule to the closure","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80394,"byte_end":80485,"line_start":171,"line_end":171,"column_start":5,"column_end":96}},{"value":"/ meant to match the rule.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80490,"byte_end":80518,"line_start":172,"line_end":172,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80523,"byte_end":80526,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80531,"byte_end":80545,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80550,"byte_end":80553,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80558,"byte_end":80565,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80570,"byte_end":80585,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80590,"byte_end":80626,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80631,"byte_end":80704,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80709,"byte_end":80724,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80729,"byte_end":80738,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80743,"byte_end":80748,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80753,"byte_end":80756,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80761,"byte_end":80781,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80786,"byte_end":80838,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/     state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80843,"byte_end":80881,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80886,"byte_end":80912,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80917,"byte_end":80920,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80925,"byte_end":80956,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80961,"byte_end":80968,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":80973,"byte_end":80982,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86471,"byte_end":86479,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"sequence","qualname":"<ParserState>::sequence","value":"pub fn sequence<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a sequence of transformations provided by `f` from the `Box<ParserState>`. Returns\n the same `Result` returned by `f` in the case of an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Starts a sequence of transformations provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85343,"byte_end":85436,"line_start":327,"line_end":327,"column_start":5,"column_end":98}},{"value":"/ the same `Result` returned by `f` in the case of an `Ok`, or `Err` with the current","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85441,"byte_end":85528,"line_start":328,"line_end":328,"column_start":5,"column_end":92}},{"value":"/ `Box<ParserState>` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85533,"byte_end":85566,"line_start":329,"line_end":329,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85571,"byte_end":85574,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This method is useful to parse sequences that only match together which usually come in the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85579,"byte_end":85674,"line_start":331,"line_end":331,"column_start":5,"column_end":100}},{"value":"/ form of chained `Result`s with","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85679,"byte_end":85713,"line_start":332,"line_end":332,"column_start":5,"column_end":39}},{"value":"/ [`Result::and_then`](https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85718,"byte_end":85814,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85819,"byte_end":85822,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85827,"byte_end":85830,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85835,"byte_end":85849,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85854,"byte_end":85857,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85862,"byte_end":85869,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85874,"byte_end":85889,"line_start":339,"line_end":339,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85894,"byte_end":85930,"line_start":340,"line_end":340,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":85935,"byte_end":86008,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86013,"byte_end":86028,"line_start":342,"line_end":342,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86033,"byte_end":86042,"line_start":343,"line_end":343,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86047,"byte_end":86052,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86057,"byte_end":86060,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86065,"byte_end":86085,"line_start":346,"line_end":346,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86090,"byte_end":86142,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/     state.sequence(|s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86147,"byte_end":86175,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/         s.rule(Rule::a, |s| Ok(s)).and_then(|s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86180,"byte_end":86233,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/             s.match_string(\"b\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86238,"byte_end":86273,"line_start":350,"line_end":350,"column_start":5,"column_end":40}},{"value":"/         })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86278,"byte_end":86292,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/     }).or_else(|s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86297,"byte_end":86321,"line_start":352,"line_end":352,"column_start":5,"column_end":29}},{"value":"/         Ok(s)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86326,"byte_end":86343,"line_start":353,"line_end":353,"column_start":5,"column_end":22}},{"value":"/     })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86348,"byte_end":86358,"line_start":354,"line_end":354,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86363,"byte_end":86389,"line_start":355,"line_end":355,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86394,"byte_end":86397,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86402,"byte_end":86433,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86438,"byte_end":86445,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":86450,"byte_end":86459,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88056,"byte_end":88062,"line_start":409,"line_end":409,"column_start":12,"column_end":18},"name":"repeat","qualname":"<ParserState>::repeat","value":"pub fn repeat<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnMut(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Repeatedly applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` wrapped up in an `Err`.","sig":null,"attributes":[{"value":"/ Repeatedly applies the transformation provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87081,"byte_end":87175,"line_start":380,"line_end":380,"column_start":5,"column_end":99}},{"value":"/ `Ok` with the updated `Box<ParserState>` returned by `f` wrapped up in an `Err`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87180,"byte_end":87264,"line_start":381,"line_end":381,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87269,"byte_end":87272,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87277,"byte_end":87291,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87296,"byte_end":87299,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87304,"byte_end":87311,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87316,"byte_end":87331,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87336,"byte_end":87372,"line_start":387,"line_end":387,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87377,"byte_end":87450,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87455,"byte_end":87470,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87475,"byte_end":87485,"line_start":390,"line_end":390,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87490,"byte_end":87495,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87500,"byte_end":87503,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let input = \"aab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87508,"byte_end":87530,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87535,"byte_end":87615,"line_start":394,"line_end":394,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.repeat(|s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87620,"byte_end":87659,"line_start":395,"line_end":395,"column_start":5,"column_end":44}},{"value":"/     s.match_string(\"a\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87664,"byte_end":87691,"line_start":396,"line_end":396,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87696,"byte_end":87703,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87708,"byte_end":87736,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87741,"byte_end":87793,"line_start":399,"line_end":399,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87798,"byte_end":87801,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87806,"byte_end":87848,"line_start":401,"line_end":401,"column_start":5,"column_end":47}},{"value":"/ result = state.repeat(|s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87853,"byte_end":87884,"line_start":402,"line_end":402,"column_start":5,"column_end":36}},{"value":"/     s.match_string(\"b\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87889,"byte_end":87916,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87921,"byte_end":87928,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87933,"byte_end":87961,"line_start":405,"line_end":405,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":87966,"byte_end":88018,"line_start":406,"line_end":406,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88023,"byte_end":88030,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88035,"byte_end":88044,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89269,"byte_end":89277,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"optional","qualname":"<ParserState>::optional","value":"pub fn optional<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Optionally applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` regardless of the `Result`.","sig":null,"attributes":[{"value":"/ Optionally applies the transformation provided by `f` from the `Box<ParserState>`. Returns","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88399,"byte_end":88493,"line_start":423,"line_end":423,"column_start":5,"column_end":99}},{"value":"/ `Ok` with the updated `Box<ParserState>` returned by `f` regardless of the `Result`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88498,"byte_end":88586,"line_start":424,"line_end":424,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88591,"byte_end":88594,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88599,"byte_end":88613,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88618,"byte_end":88621,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88626,"byte_end":88633,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88638,"byte_end":88653,"line_start":429,"line_end":429,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88658,"byte_end":88694,"line_start":430,"line_end":430,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88699,"byte_end":88772,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88777,"byte_end":88792,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/     ab","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88797,"byte_end":88807,"line_start":433,"line_end":433,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88812,"byte_end":88817,"line_start":434,"line_end":434,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88822,"byte_end":88825,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88830,"byte_end":88851,"line_start":436,"line_end":436,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88856,"byte_end":88936,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/ let result = state.optional(|s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88941,"byte_end":88978,"line_start":438,"line_end":438,"column_start":5,"column_end":42}},{"value":"/     s.match_string(\"ab\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":88983,"byte_end":89011,"line_start":439,"line_end":439,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89016,"byte_end":89023,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89028,"byte_end":89056,"line_start":441,"line_end":441,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89061,"byte_end":89064,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89069,"byte_end":89111,"line_start":443,"line_end":443,"column_start":5,"column_end":47}},{"value":"/ let result = state.optional(|s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89116,"byte_end":89153,"line_start":444,"line_end":444,"column_start":5,"column_end":42}},{"value":"/     s.match_string(\"ac\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89158,"byte_end":89186,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89191,"byte_end":89198,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89203,"byte_end":89231,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89236,"byte_end":89243,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89248,"byte_end":89257,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90489,"byte_end":90502,"line_start":484,"line_end":484,"column_start":12,"column_end":25},"name":"match_char_by","qualname":"<ParserState>::match_char_by","value":"pub fn match_char_by<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character based on a filter function. Returns `Ok` with the\n updated `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>`\n otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match a single character based on a filter function. Returns `Ok` with the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89496,"byte_end":89586,"line_start":459,"line_end":459,"column_start":5,"column_end":95}},{"value":"/ updated `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89591,"byte_end":89681,"line_start":460,"line_end":460,"column_start":5,"column_end":95}},{"value":"/ otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89686,"byte_end":89700,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89705,"byte_end":89708,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89713,"byte_end":89727,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89732,"byte_end":89735,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89740,"byte_end":89747,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89752,"byte_end":89767,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89772,"byte_end":89808,"line_start":467,"line_end":467,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89813,"byte_end":89886,"line_start":468,"line_end":468,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89891,"byte_end":89907,"line_start":469,"line_end":469,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89912,"byte_end":89915,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89920,"byte_end":89941,"line_start":471,"line_end":471,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":89946,"byte_end":90026,"line_start":472,"line_end":472,"column_start":5,"column_end":85}},{"value":"/ let result = state.match_char_by(|c| c.is_ascii());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90031,"byte_end":90086,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90091,"byte_end":90119,"line_start":474,"line_end":474,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90124,"byte_end":90176,"line_start":475,"line_end":475,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90181,"byte_end":90184,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let input = \"❤\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90189,"byte_end":90211,"line_start":477,"line_end":477,"column_start":5,"column_end":25}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90216,"byte_end":90296,"line_start":478,"line_end":478,"column_start":5,"column_end":85}},{"value":"/ let result = state.match_char_by(|c| c.is_ascii());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90301,"byte_end":90356,"line_start":479,"line_end":479,"column_start":5,"column_end":60}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90361,"byte_end":90390,"line_start":480,"line_end":480,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90395,"byte_end":90451,"line_start":481,"line_end":481,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90456,"byte_end":90463,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90468,"byte_end":90477,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91598,"byte_end":91610,"line_start":518,"line_end":518,"column_start":12,"column_end":24},"name":"match_string","qualname":"<ParserState>::match_string","value":"pub fn match_string(Box<Self>, &str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the given string. Returns `Ok` with the updated `Box<ParserState>` if\n successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the given string. Returns `Ok` with the updated `Box<ParserState>` if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90733,"byte_end":90824,"line_start":495,"line_end":495,"column_start":5,"column_end":96}},{"value":"/ successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90829,"byte_end":90900,"line_start":496,"line_end":496,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90905,"byte_end":90908,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90913,"byte_end":90927,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90932,"byte_end":90935,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90940,"byte_end":90947,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90952,"byte_end":90967,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":90972,"byte_end":91008,"line_start":502,"line_end":502,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91013,"byte_end":91086,"line_start":503,"line_end":503,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91091,"byte_end":91107,"line_start":504,"line_end":504,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91112,"byte_end":91115,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91120,"byte_end":91141,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91146,"byte_end":91226,"line_start":507,"line_end":507,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"ab\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91231,"byte_end":91277,"line_start":508,"line_end":508,"column_start":5,"column_end":51}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91282,"byte_end":91310,"line_start":509,"line_end":509,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91315,"byte_end":91367,"line_start":510,"line_end":510,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91372,"byte_end":91375,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91380,"byte_end":91422,"line_start":512,"line_end":512,"column_start":5,"column_end":47}},{"value":"/ result = state.match_string(\"ac\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91427,"byte_end":91465,"line_start":513,"line_end":513,"column_start":5,"column_end":43}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91470,"byte_end":91499,"line_start":514,"line_end":514,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91504,"byte_end":91560,"line_start":515,"line_end":515,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91565,"byte_end":91572,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91577,"byte_end":91586,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92697,"byte_end":92714,"line_start":549,"line_end":549,"column_start":12,"column_end":29},"name":"match_insensitive","qualname":"<ParserState>::match_insensitive","value":"pub fn match_insensitive(Box<Self>, &str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to case-insensitively match the given string. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to case-insensitively match the given string. Returns `Ok` with the updated","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91803,"byte_end":91891,"line_start":526,"line_end":526,"column_start":5,"column_end":93}},{"value":"/ `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91896,"byte_end":91989,"line_start":527,"line_end":527,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":91994,"byte_end":91997,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92002,"byte_end":92016,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92021,"byte_end":92024,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92029,"byte_end":92036,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92041,"byte_end":92056,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92061,"byte_end":92097,"line_start":533,"line_end":533,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92102,"byte_end":92175,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92180,"byte_end":92196,"line_start":535,"line_end":535,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92201,"byte_end":92204,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92209,"byte_end":92230,"line_start":537,"line_end":537,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92235,"byte_end":92315,"line_start":538,"line_end":538,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_insensitive(\"AB\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92320,"byte_end":92371,"line_start":539,"line_end":539,"column_start":5,"column_end":56}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92376,"byte_end":92404,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92409,"byte_end":92461,"line_start":541,"line_end":541,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92466,"byte_end":92469,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92474,"byte_end":92516,"line_start":543,"line_end":543,"column_start":5,"column_end":47}},{"value":"/ result = state.match_insensitive(\"AC\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92521,"byte_end":92564,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92569,"byte_end":92598,"line_start":545,"line_end":545,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92603,"byte_end":92659,"line_start":546,"line_end":546,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92664,"byte_end":92671,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92676,"byte_end":92685,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93806,"byte_end":93817,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"name":"match_range","qualname":"<ParserState>::match_range","value":"pub fn match_range(Box<Self>, Range<char>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character from the given range. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match a single character from the given range. Returns `Ok` with the updated","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":92912,"byte_end":93004,"line_start":557,"line_end":557,"column_start":5,"column_end":97}},{"value":"/ `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93009,"byte_end":93102,"line_start":558,"line_end":558,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93107,"byte_end":93110,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93115,"byte_end":93129,"line_start":560,"line_end":560,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93134,"byte_end":93137,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93142,"byte_end":93149,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93154,"byte_end":93169,"line_start":563,"line_end":563,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93174,"byte_end":93210,"line_start":564,"line_end":564,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93215,"byte_end":93288,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93293,"byte_end":93309,"line_start":566,"line_end":566,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93314,"byte_end":93317,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93322,"byte_end":93343,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93348,"byte_end":93428,"line_start":569,"line_end":569,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_range('a'..'z');","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93433,"byte_end":93482,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93487,"byte_end":93515,"line_start":571,"line_end":571,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93520,"byte_end":93572,"line_start":572,"line_end":572,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93577,"byte_end":93580,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93585,"byte_end":93627,"line_start":574,"line_end":574,"column_start":5,"column_end":47}},{"value":"/ result = state.match_range('A'..'Z');","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93632,"byte_end":93673,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93678,"byte_end":93707,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93712,"byte_end":93768,"line_start":577,"line_end":577,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93773,"byte_end":93780,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":93785,"byte_end":93794,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94862,"byte_end":94866,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"skip","qualname":"<ParserState>::skip","value":"pub fn skip(Box<Self>, usize) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip `n` characters forward. Returns `Ok` with the updated `Box<ParserState>`\n if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to skip `n` characters forward. Returns `Ok` with the updated `Box<ParserState>`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94014,"byte_end":94107,"line_start":588,"line_end":588,"column_start":5,"column_end":98}},{"value":"/ if successful, or `Err` with the updated `Box<ParserState>` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94112,"byte_end":94186,"line_start":589,"line_end":589,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94191,"byte_end":94194,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94199,"byte_end":94213,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94218,"byte_end":94221,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94226,"byte_end":94233,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94238,"byte_end":94253,"line_start":594,"line_end":594,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94258,"byte_end":94294,"line_start":595,"line_end":595,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94299,"byte_end":94372,"line_start":596,"line_end":596,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94377,"byte_end":94393,"line_start":597,"line_end":597,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94398,"byte_end":94401,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94406,"byte_end":94427,"line_start":599,"line_end":599,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94432,"byte_end":94512,"line_start":600,"line_end":600,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.skip(1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94517,"byte_end":94552,"line_start":601,"line_end":601,"column_start":5,"column_end":40}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94557,"byte_end":94585,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94590,"byte_end":94642,"line_start":603,"line_end":603,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94647,"byte_end":94650,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94655,"byte_end":94697,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ result = state.skip(3);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94702,"byte_end":94729,"line_start":606,"line_end":606,"column_start":5,"column_end":32}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94734,"byte_end":94763,"line_start":607,"line_end":607,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.unwrap_err().position().pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94768,"byte_end":94824,"line_start":608,"line_end":608,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94829,"byte_end":94836,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":94841,"byte_end":94850,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95724,"byte_end":95734,"line_start":637,"line_end":637,"column_start":12,"column_end":22},"name":"skip_until","qualname":"<ParserState>::skip_until","value":"pub fn skip_until(Box<Self>, &[&str]) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip forward until one of the given strings is found. Returns `Ok` with the\n updated `Box<ParserState>` whether or not one of the strings is found.","sig":null,"attributes":[{"value":"/ Attempts to skip forward until one of the given strings is found. Returns `Ok` with the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95042,"byte_end":95133,"line_start":619,"line_end":619,"column_start":5,"column_end":96}},{"value":"/ updated `Box<ParserState>` whether or not one of the strings is found.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95138,"byte_end":95212,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95217,"byte_end":95220,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95225,"byte_end":95239,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95244,"byte_end":95247,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95252,"byte_end":95259,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95264,"byte_end":95279,"line_start":625,"line_end":625,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95284,"byte_end":95320,"line_start":626,"line_end":626,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95325,"byte_end":95398,"line_start":627,"line_end":627,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95403,"byte_end":95419,"line_start":628,"line_end":628,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95424,"byte_end":95427,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let input = \"abcd\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95432,"byte_end":95455,"line_start":630,"line_end":630,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95460,"byte_end":95540,"line_start":631,"line_end":631,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.skip_until(&[\"c\", \"d\"]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95545,"byte_end":95596,"line_start":632,"line_end":632,"column_start":5,"column_end":56}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95601,"byte_end":95629,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95634,"byte_end":95686,"line_start":634,"line_end":634,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95691,"byte_end":95698,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95703,"byte_end":95712,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96694,"byte_end":96708,"line_start":664,"line_end":664,"column_start":12,"column_end":26},"name":"start_of_input","qualname":"<ParserState>::start_of_input","value":"pub fn start_of_input(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the start of the input. Returns `Ok` with the current `Box<ParserState>`\n if the parser has not yet advanced, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the start of the input. Returns `Ok` with the current `Box<ParserState>`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95873,"byte_end":95967,"line_start":642,"line_end":642,"column_start":5,"column_end":99}},{"value":"/ if the parser has not yet advanced, or `Err` with the current `Box<ParserState>` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":95972,"byte_end":96067,"line_start":643,"line_end":643,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96072,"byte_end":96075,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96080,"byte_end":96094,"line_start":645,"line_end":645,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96099,"byte_end":96102,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96107,"byte_end":96114,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96119,"byte_end":96134,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96139,"byte_end":96175,"line_start":649,"line_end":649,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96180,"byte_end":96253,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96258,"byte_end":96274,"line_start":651,"line_end":651,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96279,"byte_end":96282,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96287,"byte_end":96308,"line_start":653,"line_end":653,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96313,"byte_end":96393,"line_start":654,"line_end":654,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.start_of_input();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96398,"byte_end":96442,"line_start":655,"line_end":655,"column_start":5,"column_end":49}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96447,"byte_end":96475,"line_start":656,"line_end":656,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96480,"byte_end":96483,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96488,"byte_end":96530,"line_start":658,"line_end":658,"column_start":5,"column_end":47}},{"value":"/ state = state.match_string(\"ab\").unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96535,"byte_end":96581,"line_start":659,"line_end":659,"column_start":5,"column_end":51}},{"value":"/ result = state.start_of_input();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96586,"byte_end":96622,"line_start":660,"line_end":660,"column_start":5,"column_end":41}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96627,"byte_end":96656,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96661,"byte_end":96668,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96673,"byte_end":96682,"line_start":663,"line_end":663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97684,"byte_end":97696,"line_start":694,"line_end":694,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<ParserState>::end_of_input","value":"pub fn end_of_input(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the end of the input. Returns `Ok` with the current `Box<ParserState>` if\n there is no input remaining, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"/ Attempts to match the end of the input. Returns `Ok` with the current `Box<ParserState>` if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96873,"byte_end":96968,"line_start":672,"line_end":672,"column_start":5,"column_end":100}},{"value":"/ there is no input remaining, or `Err` with the current `Box<ParserState>` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":96973,"byte_end":97061,"line_start":673,"line_end":673,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97066,"byte_end":97069,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97074,"byte_end":97088,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97093,"byte_end":97096,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97101,"byte_end":97108,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97113,"byte_end":97128,"line_start":678,"line_end":678,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97133,"byte_end":97169,"line_start":679,"line_end":679,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97174,"byte_end":97247,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97252,"byte_end":97268,"line_start":681,"line_end":681,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97273,"byte_end":97276,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97281,"byte_end":97302,"line_start":683,"line_end":683,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97307,"byte_end":97387,"line_start":684,"line_end":684,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.end_of_input();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97392,"byte_end":97434,"line_start":685,"line_end":685,"column_start":5,"column_end":47}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97439,"byte_end":97468,"line_start":686,"line_end":686,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97473,"byte_end":97476,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ state = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97481,"byte_end":97523,"line_start":688,"line_end":688,"column_start":5,"column_end":47}},{"value":"/ state = state.match_string(\"ab\").unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97528,"byte_end":97574,"line_start":689,"line_end":689,"column_start":5,"column_end":51}},{"value":"/ result = state.end_of_input();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97579,"byte_end":97613,"line_start":690,"line_end":690,"column_start":5,"column_end":39}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97618,"byte_end":97646,"line_start":691,"line_end":691,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97651,"byte_end":97658,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97663,"byte_end":97672,"line_start":693,"line_end":693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98731,"byte_end":98740,"line_start":727,"line_end":727,"column_start":12,"column_end":21},"name":"lookahead","qualname":"<ParserState>::lookahead","value":"pub fn lookahead<F>(Box<Self>, bool, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a lookahead transformation provided by `f` from the `Box<ParserState>`. It returns\n `Ok` with the current `Box<ParserState>` if `f` also returns an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise. If `is_positive` is `false`, it swaps the `Ok` and `Err`\n together, negating the `Result`.","sig":null,"attributes":[{"value":"/ Starts a lookahead transformation provided by `f` from the `Box<ParserState>`. It returns","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97859,"byte_end":97952,"line_start":702,"line_end":702,"column_start":5,"column_end":98}},{"value":"/ `Ok` with the current `Box<ParserState>` if `f` also returns an `Ok`, or `Err` with the current","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":97957,"byte_end":98056,"line_start":703,"line_end":703,"column_start":5,"column_end":104}},{"value":"/ `Box<ParserState>` otherwise. If `is_positive` is `false`, it swaps the `Ok` and `Err`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98061,"byte_end":98151,"line_start":704,"line_end":704,"column_start":5,"column_end":95}},{"value":"/ together, negating the `Result`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98156,"byte_end":98192,"line_start":705,"line_end":705,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98197,"byte_end":98200,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98205,"byte_end":98219,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98224,"byte_end":98227,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98232,"byte_end":98239,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98244,"byte_end":98259,"line_start":710,"line_end":710,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98264,"byte_end":98300,"line_start":711,"line_end":711,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98305,"byte_end":98378,"line_start":712,"line_end":712,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98383,"byte_end":98398,"line_start":713,"line_end":713,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98403,"byte_end":98412,"line_start":714,"line_end":714,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98417,"byte_end":98422,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98427,"byte_end":98430,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98435,"byte_end":98455,"line_start":717,"line_end":717,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98460,"byte_end":98512,"line_start":718,"line_end":718,"column_start":5,"column_end":57}},{"value":"/     state.lookahead(true, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98517,"byte_end":98556,"line_start":719,"line_end":719,"column_start":5,"column_end":44}},{"value":"/         state.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98561,"byte_end":98603,"line_start":720,"line_end":720,"column_start":5,"column_end":47}},{"value":"/     })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98608,"byte_end":98618,"line_start":721,"line_end":721,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98623,"byte_end":98649,"line_start":722,"line_end":722,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98654,"byte_end":98657,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98662,"byte_end":98693,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98698,"byte_end":98705,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":98710,"byte_end":98719,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100793,"byte_end":100799,"line_start":794,"line_end":794,"column_start":12,"column_end":18},"name":"atomic","qualname":"<ParserState>::atomic","value":"pub fn atomic<F>(Box<Self>, Atomicity, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Transformation which stops `Token`s from being generated according to `is_atomic`.","sig":null,"attributes":[{"value":"/ Transformation which stops `Token`s from being generated according to `is_atomic`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100147,"byte_end":100233,"line_start":772,"line_end":772,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100238,"byte_end":100241,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100246,"byte_end":100260,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100265,"byte_end":100268,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100273,"byte_end":100280,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"/ # use pest::{self, Atomicity};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100285,"byte_end":100319,"line_start":777,"line_end":777,"column_start":5,"column_end":39}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100324,"byte_end":100360,"line_start":778,"line_end":778,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100365,"byte_end":100438,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/ enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100443,"byte_end":100458,"line_start":780,"line_end":780,"column_start":5,"column_end":20}},{"value":"/     a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100463,"byte_end":100472,"line_start":781,"line_end":781,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100477,"byte_end":100482,"line_start":782,"line_end":782,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100487,"byte_end":100490,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100495,"byte_end":100515,"line_start":784,"line_end":784,"column_start":5,"column_end":25}},{"value":"/ let pairs: Vec<_> = pest::state(input, |state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100520,"byte_end":100572,"line_start":785,"line_end":785,"column_start":5,"column_end":57}},{"value":"/     state.atomic(Atomicity::Atomic, |s| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100577,"byte_end":100622,"line_start":786,"line_end":786,"column_start":5,"column_end":50}},{"value":"/         s.rule(Rule::a, |s| Ok(s))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100627,"byte_end":100665,"line_start":787,"line_end":787,"column_start":5,"column_end":43}},{"value":"/     })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100670,"byte_end":100680,"line_start":788,"line_end":788,"column_start":5,"column_end":15}},{"value":"/ }).unwrap().collect();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100685,"byte_end":100711,"line_start":789,"line_end":789,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100716,"byte_end":100719,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pairs.len(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100724,"byte_end":100755,"line_start":791,"line_end":791,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100760,"byte_end":100767,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":100772,"byte_end":100781,"line_start":793,"line_end":793,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102387,"byte_end":102397,"line_start":842,"line_end":842,"column_start":12,"column_end":22},"name":"stack_push","qualname":"<ParserState>::stack_push","value":"pub fn stack_push<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the result of closure `f` and pushes the span of the input consumed from before\n `f` is called to after `f` is called to the stack. Returns `Ok(Box<ParserState>)` if `f` is\n called successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Evaluates the result of closure `f` and pushes the span of the input consumed from before","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101597,"byte_end":101690,"line_start":823,"line_end":823,"column_start":5,"column_end":98}},{"value":"/ `f` is called to after `f` is called to the stack. Returns `Ok(Box<ParserState>)` if `f` is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101695,"byte_end":101790,"line_start":824,"line_end":824,"column_start":5,"column_end":100}},{"value":"/ called successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101795,"byte_end":101857,"line_start":825,"line_end":825,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101862,"byte_end":101865,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101870,"byte_end":101884,"line_start":827,"line_end":827,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101889,"byte_end":101892,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101897,"byte_end":101904,"line_start":829,"line_end":829,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101909,"byte_end":101924,"line_start":830,"line_end":830,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101929,"byte_end":101965,"line_start":831,"line_end":831,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":101970,"byte_end":102043,"line_start":832,"line_end":832,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102048,"byte_end":102064,"line_start":833,"line_end":833,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102069,"byte_end":102072,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102077,"byte_end":102098,"line_start":835,"line_end":835,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102103,"byte_end":102183,"line_start":836,"line_end":836,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\"));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102188,"byte_end":102259,"line_start":837,"line_end":837,"column_start":5,"column_end":76}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102264,"byte_end":102292,"line_start":838,"line_end":838,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102297,"byte_end":102349,"line_start":839,"line_end":839,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102354,"byte_end":102361,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102366,"byte_end":102375,"line_start":841,"line_end":841,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103621,"byte_end":103631,"line_start":880,"line_end":880,"column_start":12,"column_end":22},"name":"stack_peek","qualname":"<ParserState>::stack_peek","value":"pub fn stack_peek(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Peeks the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Peeks the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102852,"byte_end":102947,"line_start":860,"line_end":860,"column_start":5,"column_end":100}},{"value":"/ if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":102952,"byte_end":103032,"line_start":861,"line_end":861,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103037,"byte_end":103040,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103045,"byte_end":103059,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103064,"byte_end":103067,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103072,"byte_end":103079,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103084,"byte_end":103099,"line_start":866,"line_end":866,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103104,"byte_end":103140,"line_start":867,"line_end":867,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103145,"byte_end":103218,"line_start":868,"line_end":868,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103223,"byte_end":103239,"line_start":869,"line_end":869,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103244,"byte_end":103247,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103252,"byte_end":103273,"line_start":871,"line_end":871,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103278,"byte_end":103358,"line_start":872,"line_end":872,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103363,"byte_end":103443,"line_start":873,"line_end":873,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_peek()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103448,"byte_end":103482,"line_start":874,"line_end":874,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103487,"byte_end":103493,"line_start":875,"line_end":875,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103498,"byte_end":103526,"line_start":876,"line_end":876,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103531,"byte_end":103583,"line_start":877,"line_end":877,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103588,"byte_end":103595,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103600,"byte_end":103609,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104631,"byte_end":104640,"line_start":909,"line_end":909,"column_start":12,"column_end":21},"name":"stack_pop","qualname":"<ParserState>::stack_pop","value":"pub fn stack_pop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Pops the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Pops the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103864,"byte_end":103958,"line_start":889,"line_end":889,"column_start":5,"column_end":99}},{"value":"/ if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":103963,"byte_end":104043,"line_start":890,"line_end":890,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104048,"byte_end":104051,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104056,"byte_end":104070,"line_start":892,"line_end":892,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104075,"byte_end":104078,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104083,"byte_end":104090,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104095,"byte_end":104110,"line_start":895,"line_end":895,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104115,"byte_end":104151,"line_start":896,"line_end":896,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104156,"byte_end":104229,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104234,"byte_end":104250,"line_start":898,"line_end":898,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104255,"byte_end":104258,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104263,"byte_end":104284,"line_start":900,"line_end":900,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104289,"byte_end":104369,"line_start":901,"line_end":901,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104374,"byte_end":104454,"line_start":902,"line_end":902,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_pop()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104459,"byte_end":104492,"line_start":903,"line_end":903,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104497,"byte_end":104503,"line_start":904,"line_end":904,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104508,"byte_end":104536,"line_start":905,"line_end":905,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104541,"byte_end":104593,"line_start":906,"line_end":906,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104598,"byte_end":104605,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104610,"byte_end":104619,"line_start":908,"line_end":908,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":106029,"byte_end":106051,"line_start":943,"line_end":943,"column_start":12,"column_end":34},"name":"stack_match_peek_slice","qualname":"<ParserState>::stack_match_peek_slice","value":"pub fn stack_match_peek_slice(Box<Self>, i32, Option<i32>, MatchDir)\n-> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches part of the state of the stack.","sig":null,"attributes":[{"value":"/ Matches part of the state of the stack.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104875,"byte_end":104918,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104923,"byte_end":104926,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104931,"byte_end":104945,"line_start":920,"line_end":920,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104950,"byte_end":104953,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104958,"byte_end":104965,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # use pest::{self, MatchDir};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":104970,"byte_end":105003,"line_start":923,"line_end":923,"column_start":5,"column_end":38}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105008,"byte_end":105044,"line_start":924,"line_end":924,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105049,"byte_end":105122,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105127,"byte_end":105143,"line_start":926,"line_end":926,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105148,"byte_end":105151,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let input = \"abcd cd cb\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105156,"byte_end":105185,"line_start":928,"line_end":928,"column_start":5,"column_end":34}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105190,"byte_end":105270,"line_start":929,"line_end":929,"column_start":5,"column_end":85}},{"value":"/ let mut result = state","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105275,"byte_end":105301,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/     .stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105306,"byte_end":105358,"line_start":931,"line_end":931,"column_start":5,"column_end":57}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"b\")))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105363,"byte_end":105439,"line_start":932,"line_end":932,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"c\")))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105444,"byte_end":105520,"line_start":933,"line_end":933,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.stack_push(|state| state.match_string(\"d\")))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105525,"byte_end":105601,"line_start":934,"line_end":934,"column_start":5,"column_end":81}},{"value":"/     .and_then(|state| state.match_string(\" \"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105606,"byte_end":105656,"line_start":935,"line_end":935,"column_start":5,"column_end":55}},{"value":"/     .and_then(|state| state.stack_match_peek_slice(2, None, MatchDir::BottomToTop))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105661,"byte_end":105748,"line_start":936,"line_end":936,"column_start":5,"column_end":92}},{"value":"/     .and_then(|state| state.match_string(\" \"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105753,"byte_end":105803,"line_start":937,"line_end":937,"column_start":5,"column_end":55}},{"value":"/     .and_then(|state| state.stack_match_peek_slice(1, Some(-1), MatchDir::TopToBottom));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105808,"byte_end":105900,"line_start":938,"line_end":938,"column_start":5,"column_end":97}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105905,"byte_end":105933,"line_start":939,"line_end":939,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 10);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105938,"byte_end":105991,"line_start":940,"line_end":940,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":105996,"byte_end":106003,"line_start":941,"line_end":941,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":106008,"byte_end":106017,"line_start":942,"line_end":942,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107736,"byte_end":107752,"line_start":995,"line_end":995,"column_start":12,"column_end":28},"name":"stack_match_peek","qualname":"<ParserState>::stack_match_peek","value":"pub fn stack_match_peek(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack.","sig":null,"attributes":[{"value":"/ Matches the full state of the stack.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107010,"byte_end":107050,"line_start":975,"line_end":975,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107055,"byte_end":107058,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107063,"byte_end":107077,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107082,"byte_end":107085,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107090,"byte_end":107097,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107102,"byte_end":107117,"line_start":980,"line_end":980,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107122,"byte_end":107158,"line_start":981,"line_end":981,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107163,"byte_end":107236,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107241,"byte_end":107257,"line_start":983,"line_end":983,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107262,"byte_end":107265,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let input = \"abba\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107270,"byte_end":107293,"line_start":985,"line_end":985,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107298,"byte_end":107378,"line_start":986,"line_end":986,"column_start":5,"column_end":85}},{"value":"/ let mut result = state","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107383,"byte_end":107409,"line_start":987,"line_end":987,"column_start":5,"column_end":31}},{"value":"/     .stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107414,"byte_end":107466,"line_start":988,"line_end":988,"column_start":5,"column_end":57}},{"value":"/     .and_then(|state| { state.stack_push(|state| state.match_string(\"b\")) })","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107471,"byte_end":107551,"line_start":989,"line_end":989,"column_start":5,"column_end":85}},{"value":"/     .and_then(|state| state.stack_match_peek());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107556,"byte_end":107608,"line_start":990,"line_end":990,"column_start":5,"column_end":57}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107613,"byte_end":107641,"line_start":991,"line_end":991,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 4);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107646,"byte_end":107698,"line_start":992,"line_end":992,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107703,"byte_end":107710,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107715,"byte_end":107724,"line_start":994,"line_end":994,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108638,"byte_end":108653,"line_start":1018,"line_end":1018,"column_start":12,"column_end":27},"name":"stack_match_pop","qualname":"<ParserState>::stack_match_pop","value":"pub fn stack_match_pop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack. This method will clear the stack as it evaluates.","sig":null,"attributes":[{"value":"/ Matches the full state of the stack. This method will clear the stack as it evaluates.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107877,"byte_end":107967,"line_start":999,"line_end":999,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107972,"byte_end":107975,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107980,"byte_end":107994,"line_start":1001,"line_end":1001,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":107999,"byte_end":108002,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108007,"byte_end":108014,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"/ /// # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108019,"byte_end":108038,"line_start":1004,"line_end":1004,"column_start":5,"column_end":24}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108043,"byte_end":108079,"line_start":1005,"line_end":1005,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108084,"byte_end":108157,"line_start":1006,"line_end":1006,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108162,"byte_end":108178,"line_start":1007,"line_end":1007,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108183,"byte_end":108186,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ let input = \"aaaa\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108191,"byte_end":108214,"line_start":1009,"line_end":1009,"column_start":5,"column_end":28}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108219,"byte_end":108299,"line_start":1010,"line_end":1010,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(|state| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108304,"byte_end":108393,"line_start":1011,"line_end":1011,"column_start":5,"column_end":94}},{"value":"/     state.stack_push(|state| state.match_string(\"a\"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108398,"byte_end":108455,"line_start":1012,"line_end":1012,"column_start":5,"column_end":62}},{"value":"/ }).and_then(|state| state.stack_match_peek());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108460,"byte_end":108510,"line_start":1013,"line_end":1013,"column_start":5,"column_end":55}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108515,"byte_end":108543,"line_start":1014,"line_end":1014,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 4);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108548,"byte_end":108600,"line_start":1015,"line_end":1015,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108605,"byte_end":108612,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":108617,"byte_end":108626,"line_start":1017,"line_end":1017,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109832,"byte_end":109842,"line_start":1056,"line_end":1056,"column_start":12,"column_end":22},"name":"stack_drop","qualname":"<ParserState>::stack_drop","value":"pub fn stack_drop(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Drops the top of the stack. Returns `Ok(Box<ParserState>)` if there was a value to drop, or\n `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"/ Drops the top of the stack. Returns `Ok(Box<ParserState>)` if there was a value to drop, or","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109105,"byte_end":109200,"line_start":1036,"line_end":1036,"column_start":5,"column_end":100}},{"value":"/ `Err(Box<ParserState>)` otherwise.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109205,"byte_end":109243,"line_start":1037,"line_end":1037,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109248,"byte_end":109251,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109256,"byte_end":109270,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109275,"byte_end":109278,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109283,"byte_end":109290,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109295,"byte_end":109310,"line_start":1042,"line_end":1042,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109315,"byte_end":109351,"line_start":1043,"line_end":1043,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109356,"byte_end":109429,"line_start":1044,"line_end":1044,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109434,"byte_end":109450,"line_start":1045,"line_end":1045,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109455,"byte_end":109458,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ let input = \"aa\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109463,"byte_end":109484,"line_start":1047,"line_end":1047,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109489,"byte_end":109569,"line_start":1048,"line_end":1048,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.stack_push(|state| state.match_string(\"a\")).and_then(","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109574,"byte_end":109654,"line_start":1049,"line_end":1049,"column_start":5,"column_end":85}},{"value":"/     |state| state.stack_drop()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109659,"byte_end":109693,"line_start":1050,"line_end":1050,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109698,"byte_end":109704,"line_start":1051,"line_end":1051,"column_start":5,"column_end":11}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109709,"byte_end":109737,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().pos(), 1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109742,"byte_end":109794,"line_start":1053,"line_end":1053,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109799,"byte_end":109806,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":109811,"byte_end":109820,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110945,"byte_end":110959,"line_start":1087,"line_end":1087,"column_start":12,"column_end":26},"name":"restore_on_err","qualname":"<ParserState>::restore_on_err","value":"pub fn restore_on_err<F>(Box<Self>, F) -> ParseResult<Box<Self>> where\nF: FnOnce(Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Restores the original state of the `ParserState` when `f` returns an `Err`. Currently,\n this method only restores the stack.","sig":null,"attributes":[{"value":"/ Restores the original state of the `ParserState` when `f` returns an `Err`. Currently,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110010,"byte_end":110100,"line_start":1063,"line_end":1063,"column_start":5,"column_end":95}},{"value":"/ this method only restores the stack.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110105,"byte_end":110145,"line_start":1064,"line_end":1064,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110150,"byte_end":110153,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110158,"byte_end":110172,"line_start":1066,"line_end":1066,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110177,"byte_end":110180,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110185,"byte_end":110192,"line_start":1068,"line_end":1068,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110197,"byte_end":110212,"line_start":1069,"line_end":1069,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110217,"byte_end":110253,"line_start":1070,"line_end":1070,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110258,"byte_end":110331,"line_start":1071,"line_end":1071,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110336,"byte_end":110352,"line_start":1072,"line_end":1072,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110357,"byte_end":110360,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110365,"byte_end":110386,"line_start":1074,"line_end":1074,"column_start":5,"column_end":26}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110391,"byte_end":110471,"line_start":1075,"line_end":1075,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.restore_on_err(|state| state.stack_push(|state|","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110476,"byte_end":110550,"line_start":1076,"line_end":1076,"column_start":5,"column_end":79}},{"value":"/     state.match_string(\"a\")).and_then(|state| state.match_string(\"a\"))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110555,"byte_end":110629,"line_start":1077,"line_end":1077,"column_start":5,"column_end":79}},{"value":"/ );","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110634,"byte_end":110640,"line_start":1078,"line_end":1078,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110645,"byte_end":110648,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ assert!(result.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110653,"byte_end":110682,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110687,"byte_end":110690,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ // Since the the rule doesn't match, the \"a\" pushed to the stack will be removed.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110695,"byte_end":110780,"line_start":1082,"line_end":1082,"column_start":5,"column_end":90}},{"value":"/ let catch_panic = std::panic::catch_unwind(|| result.unwrap_err().stack_pop());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110785,"byte_end":110868,"line_start":1083,"line_end":1083,"column_start":5,"column_end":88}},{"value":"/ assert!(catch_panic.is_err());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110873,"byte_end":110907,"line_start":1084,"line_end":1084,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110912,"byte_end":110919,"line_start":1085,"line_end":1085,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":110924,"byte_end":110933,"line_start":1086,"line_end":1086,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":904},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":113639,"byte_end":113647,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Position","qualname":"::position::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":" A cursor position in a `&str` which provides useful methods to manually parse that string.\n","sig":null,"attributes":[{"value":"/ A cursor position in a `&str` which provides useful methods to manually parse that string.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":113516,"byte_end":113610,"line_start":19,"line_end":19,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114749,"byte_end":114752,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Position>::new","value":"pub fn new(&str, usize) -> Option<Position>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new `Position` at the given position. If the specified position is\n an invalid index, or the specified position is not a valid UTF8 boundary, then None is\n returned.","sig":null,"attributes":[{"value":"/ Attempts to create a new `Position` at the given position. If the specified position is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114239,"byte_end":114330,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ an invalid index, or the specified position is not a valid UTF8 boundary, then None is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114335,"byte_end":114425,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ returned.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114430,"byte_end":114443,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114448,"byte_end":114451,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114456,"byte_end":114470,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114475,"byte_end":114482,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114487,"byte_end":114512,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/ let cheart = '💖';","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114517,"byte_end":114541,"line_start":47,"line_end":47,"column_start":5,"column_end":26}},{"value":"/ let heart = \"💖\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114546,"byte_end":114569,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(Position::new(heart, 1), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114574,"byte_end":114620,"line_start":49,"line_end":49,"column_start":5,"column_end":51}},{"value":"/ assert_ne!(Position::new(heart, cheart.len_utf8()), None);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114625,"byte_end":114687,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114692,"byte_end":114699,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114704,"byte_end":114737,"line_start":52,"line_end":52,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115116,"byte_end":115126,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_start","qualname":"<Position>::from_start","value":"pub fn from_start(&'i str) -> Position","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Position` at the start of a `&str`.","sig":null,"attributes":[{"value":"/ Creates a `Position` at the start of a `&str`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114869,"byte_end":114919,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114924,"byte_end":114927,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114932,"byte_end":114946,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114951,"byte_end":114954,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114959,"byte_end":114966,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":114971,"byte_end":114996,"line_start":62,"line_end":62,"column_start":5,"column_end":30}},{"value":"/ let start = Position::from_start(\"\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115001,"byte_end":115042,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(start.pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115047,"byte_end":115078,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115083,"byte_end":115090,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115095,"byte_end":115104,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115586,"byte_end":115589,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"pos","qualname":"<Position>::pos","value":"pub fn pos(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte position of this `Position` as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the byte position of this `Position` as a `usize`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115286,"byte_end":115348,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115353,"byte_end":115356,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115361,"byte_end":115375,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115380,"byte_end":115383,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115388,"byte_end":115395,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115400,"byte_end":115425,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115430,"byte_end":115451,"line_start":78,"line_end":78,"column_start":5,"column_end":26}},{"value":"/ let mut start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115456,"byte_end":115504,"line_start":79,"line_end":79,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115509,"byte_end":115512,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(start.pos(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115517,"byte_end":115548,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115553,"byte_end":115560,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115565,"byte_end":115574,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116088,"byte_end":116092,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"span","qualname":"<Position>::span","value":"pub fn span(&Self, &Position) -> span::Span","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Span` from two `Position`s.","sig":null,"attributes":[{"value":"/ Creates a `Span` from two `Position`s.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115636,"byte_end":115678,"line_start":88,"line_end":88,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115683,"byte_end":115686,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115691,"byte_end":115703,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115708,"byte_end":115711,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Panics if the positions come from different inputs.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115716,"byte_end":115771,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115776,"byte_end":115779,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115784,"byte_end":115798,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115803,"byte_end":115806,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115811,"byte_end":115818,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115823,"byte_end":115848,"line_start":97,"line_end":97,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115853,"byte_end":115874,"line_start":98,"line_end":98,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115879,"byte_end":115923,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/ let span = start.span(&start.clone());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115928,"byte_end":115970,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115975,"byte_end":115978,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":115983,"byte_end":116015,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(span.end(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116020,"byte_end":116050,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116055,"byte_end":116062,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116067,"byte_end":116076,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":117185,"byte_end":117193,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Position>::line_col","value":"pub fn line_col(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line and column number of this `Position`.","sig":null,"attributes":[{"value":"/ Returns the line and column number of this `Position`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116610,"byte_end":116668,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116673,"byte_end":116676,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116681,"byte_end":116695,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116700,"byte_end":116703,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116708,"byte_end":116715,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116720,"byte_end":116735,"line_start":123,"line_end":123,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116740,"byte_end":116776,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116781,"byte_end":116854,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116859,"byte_end":116875,"line_start":126,"line_end":126,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116880,"byte_end":116883,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let input = \"\\na\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116888,"byte_end":116910,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":116915,"byte_end":116995,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"\\na\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":117000,"byte_end":117047,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":117052,"byte_end":117080,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().line_col(), (2, 2));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":117085,"byte_end":117147,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":117152,"byte_end":117159,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":117164,"byte_end":117173,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":119071,"byte_end":119078,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"line_of","qualname":"<Position>::line_of","value":"pub fn line_of(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire line of the input that contains this `Position`.","sig":null,"attributes":[{"value":"/ Returns the entire line of the input that contains this `Position`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118487,"byte_end":118558,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118563,"byte_end":118566,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118571,"byte_end":118585,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118590,"byte_end":118593,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118598,"byte_end":118605,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118610,"byte_end":118625,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118630,"byte_end":118666,"line_start":186,"line_end":186,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118671,"byte_end":118744,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118749,"byte_end":118765,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118770,"byte_end":118773,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let input = \"\\na\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118778,"byte_end":118800,"line_start":190,"line_end":190,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118805,"byte_end":118885,"line_start":191,"line_end":191,"column_start":5,"column_end":85}},{"value":"/ let mut result = state.match_string(\"\\na\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118890,"byte_end":118937,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118942,"byte_end":118970,"line_start":193,"line_end":193,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(result.unwrap().position().line_of(), \"a\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":118975,"byte_end":119033,"line_start":194,"line_end":194,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":119038,"byte_end":119045,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":119050,"byte_end":119059,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prec_climber","qualname":"::prec_climber","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":911},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":932},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":587}],"decl_id":null,"docs":" Constructs useful in infix operator parsing with the precedence climbing method.\n","sig":null,"attributes":[{"value":"/ Constructs useful in infix operator parsing with the precedence climbing method.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":131991,"byte_end":132075,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":912},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132376,"byte_end":132380,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Left","qualname":"::prec_climber::Assoc::Left","value":"Assoc::Left","parent":{"krate":0,"index":911},"children":[],"decl_id":null,"docs":" Left `Operator` associativity\n","sig":null,"attributes":[{"value":"/ Left `Operator` associativity","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132338,"byte_end":132371,"line_start":24,"line_end":24,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132425,"byte_end":132430,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Right","qualname":"::prec_climber::Assoc::Right","value":"Assoc::Right","parent":{"krate":0,"index":911},"children":[],"decl_id":null,"docs":" Right `Operator` associativity\n","sig":null,"attributes":[{"value":"/ Right `Operator` associativity","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132386,"byte_end":132420,"line_start":26,"line_end":26,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":911},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132326,"byte_end":132331,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Assoc","qualname":"::prec_climber::Assoc","value":"pub enum Assoc { Left, Right, }","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":914}],"decl_id":null,"docs":" Associativity of an [`Operator`].","sig":null,"attributes":[{"value":"/ Associativity of an [`Operator`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132191,"byte_end":132228,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132229,"byte_end":132232,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Operator`]: struct.Operator.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132233,"byte_end":132271,"line_start":21,"line_end":21,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132556,"byte_end":132564,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"Operator","qualname":"::prec_climber::Operator","value":"Operator {  }","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931}],"decl_id":null,"docs":" Infix operator used in [`PrecClimber`].","sig":null,"attributes":[{"value":"/ Infix operator used in [`PrecClimber`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132435,"byte_end":132478,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132479,"byte_end":132482,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ [`PrecClimber`]: struct.PrecClimber.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132483,"byte_end":132527,"line_start":32,"line_end":32,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133179,"byte_end":133182,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Operator<R>>::new","value":"pub fn new(R, Assoc) -> Operator<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Operator` from a `Rule` and `Assoc`.","sig":null,"attributes":[{"value":"/ Creates a new `Operator` from a `Rule` and `Assoc`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132686,"byte_end":132741,"line_start":41,"line_end":41,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132746,"byte_end":132749,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132754,"byte_end":132768,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132773,"byte_end":132776,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132781,"byte_end":132788,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # use pest::prec_climber::{Assoc, Operator};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132793,"byte_end":132841,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132846,"byte_end":132882,"line_start":47,"line_end":47,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132887,"byte_end":132912,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132917,"byte_end":132990,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132995,"byte_end":133012,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/ #     plus,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133017,"byte_end":133032,"line_start":51,"line_end":51,"column_start":5,"column_end":20}},{"value":"/ #     minus","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133037,"byte_end":133052,"line_start":52,"line_end":52,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133057,"byte_end":133064,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ Operator::new(Rule::plus, Assoc::Left) | Operator::new(Rule::minus, Assoc::Right);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133069,"byte_end":133155,"line_start":54,"line_end":54,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133160,"byte_end":133167,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134200,"byte_end":134211,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"PrecClimber","qualname":"::prec_climber::PrecClimber","value":"PrecClimber {  }","parent":null,"children":[{"krate":0,"index":937}],"decl_id":null,"docs":" List of operators and precedences, which can perform [precedence climbing][1] on infix\n expressions contained in a [`Pairs`]. The token pairs contained in the `Pairs` should start\n with a *primary* pair and then alternate between an *operator* and a *primary*.","sig":null,"attributes":[{"value":"/ List of operators and precedences, which can perform [precedence climbing][1] on infix","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133758,"byte_end":133848,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"/ expressions contained in a [`Pairs`]. The token pairs contained in the `Pairs` should start","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133849,"byte_end":133944,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ with a *primary* pair and then alternate between an *operator* and a *primary*.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133945,"byte_end":134028,"line_start":84,"line_end":84,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134029,"byte_end":134032,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Operator-precedence_parser#Precedence_climbing_method","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134033,"byte_end":134125,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"/ [`Pairs`]: ../iterators/struct.Pairs.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134126,"byte_end":134171,"line_start":87,"line_end":87,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":135251,"byte_end":135254,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<PrecClimber<R>>::new","value":"pub fn new(Vec<Operator<R>>) -> PrecClimber<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PrecClimber` from the `Operator`s contained in `ops`. Every entry in the\n `Vec` has precedence *index + 1*. In order to have operators with same precedence, they need\n to be chained with `|` between them.","sig":null,"attributes":[{"value":"/ Creates a new `PrecClimber` from the `Operator`s contained in `ops`. Every entry in the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134304,"byte_end":134395,"line_start":94,"line_end":94,"column_start":5,"column_end":96}},{"value":"/ `Vec` has precedence *index + 1*. In order to have operators with same precedence, they need","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134400,"byte_end":134496,"line_start":95,"line_end":95,"column_start":5,"column_end":101}},{"value":"/ to be chained with `|` between them.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134501,"byte_end":134541,"line_start":96,"line_end":96,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134546,"byte_end":134549,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134554,"byte_end":134568,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134573,"byte_end":134576,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134581,"byte_end":134588,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use pest::prec_climber::{Assoc, Operator, PrecClimber};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134593,"byte_end":134654,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134659,"byte_end":134695,"line_start":102,"line_end":102,"column_start":5,"column_end":41}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134700,"byte_end":134725,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134730,"byte_end":134803,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ # enum Rule {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134808,"byte_end":134825,"line_start":105,"line_end":105,"column_start":5,"column_end":22}},{"value":"/ #     plus,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134830,"byte_end":134845,"line_start":106,"line_end":106,"column_start":5,"column_end":20}},{"value":"/ #     minus,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134850,"byte_end":134866,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"/ #     times,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134871,"byte_end":134887,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/ #     divide,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134892,"byte_end":134909,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/ #     power","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134914,"byte_end":134929,"line_start":110,"line_end":110,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134934,"byte_end":134941,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ PrecClimber::new(vec![","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134946,"byte_end":134972,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/     Operator::new(Rule::plus, Assoc::Left) | Operator::new(Rule::minus, Assoc::Left),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134977,"byte_end":135066,"line_start":113,"line_end":113,"column_start":5,"column_end":94}},{"value":"/     Operator::new(Rule::times, Assoc::Left) | Operator::new(Rule::divide, Assoc::Left),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":135071,"byte_end":135162,"line_start":114,"line_end":114,"column_start":5,"column_end":96}},{"value":"/     Operator::new(Rule::power, Assoc::Right)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":135167,"byte_end":135215,"line_start":115,"line_end":115,"column_start":5,"column_end":53}},{"value":"/ ]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":135220,"byte_end":135227,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":135232,"byte_end":135239,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136956,"byte_end":136961,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"climb","qualname":"<PrecClimber<R>>::climb","value":"pub fn climb<'i, P, F, G, T>(&Self, P, F, G) -> T where P: Iterator<Item =\nPair>, F: FnMut(Pair) -> T, G: FnMut(T, Pair, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Performs the precedence climbing algorithm on the `pairs` in a similar manner to map-reduce.\n *Primary* pairs are mapped with `primary` and then reduced to one single result with\n `infix`.","sig":null,"attributes":[{"value":"/ Performs the precedence climbing algorithm on the `pairs` in a similar manner to map-reduce.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":135989,"byte_end":136085,"line_start":144,"line_end":144,"column_start":5,"column_end":101}},{"value":"/ *Primary* pairs are mapped with `primary` and then reduced to one single result with","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136090,"byte_end":136178,"line_start":145,"line_end":145,"column_start":5,"column_end":93}},{"value":"/ `infix`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136183,"byte_end":136195,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136200,"byte_end":136203,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136208,"byte_end":136220,"line_start":148,"line_end":148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136225,"byte_end":136228,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Panics will occur when `pairs` is empty or when the alternating *primary*, *operator*,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136233,"byte_end":136323,"line_start":150,"line_end":150,"column_start":5,"column_end":95}},{"value":"/ *primary* order is not respected.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136328,"byte_end":136365,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136370,"byte_end":136373,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136378,"byte_end":136392,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136397,"byte_end":136400,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136405,"byte_end":136418,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ let primary = |pair| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136423,"byte_end":136449,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/     consume(pair, climber)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136454,"byte_end":136484,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/ };","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136489,"byte_end":136495,"line_start":158,"line_end":158,"column_start":5,"column_end":11}},{"value":"/ let infix = |lhs: i32, op: Pair<Rule>, rhs: i32| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136500,"byte_end":136554,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/     match op.rule() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136559,"byte_end":136584,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/         Rule::plus => lhs + rhs,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136589,"byte_end":136625,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/         Rule::minus => lhs - rhs,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136630,"byte_end":136667,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/         Rule::times => lhs * rhs,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136672,"byte_end":136709,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/         Rule::divide => lhs / rhs,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136714,"byte_end":136752,"line_start":164,"line_end":164,"column_start":5,"column_end":43}},{"value":"/         Rule::power => lhs.pow(rhs as u32),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136757,"byte_end":136804,"line_start":165,"line_end":165,"column_start":5,"column_end":52}},{"value":"/         _ => unreachable!()","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136809,"byte_end":136840,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136845,"byte_end":136854,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136859,"byte_end":136865,"line_start":168,"line_end":168,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136870,"byte_end":136873,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let result = climber.climb(pairs, primary, infix);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136878,"byte_end":136932,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":136937,"byte_end":136944,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":139718,"byte_end":139722,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945}],"decl_id":null,"docs":" A span over a `&str`. It is created from either [two `Position`s] or from a [`Pair`].","sig":null,"attributes":[{"value":"/ A span over a `&str`. It is created from either [two `Position`s] or from a [`Pair`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":139484,"byte_end":139573,"line_start":17,"line_end":17,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":139574,"byte_end":139577,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [two `Position`s]: struct.Position.html#method.span","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":139578,"byte_end":139633,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/ [`Pair`]: ../iterators/struct.Pair.html#method.span","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":139634,"byte_end":139689,"line_start":20,"line_end":20,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140788,"byte_end":140791,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(&str, usize, usize) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new span. Will return `None` if `input[start..end]` is an invalid index\n into `input`.","sig":null,"attributes":[{"value":"/ Attempts to create a new span. Will return `None` if `input[start..end]` is an invalid index","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140392,"byte_end":140488,"line_start":45,"line_end":45,"column_start":5,"column_end":101}},{"value":"/ into `input`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140493,"byte_end":140510,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140515,"byte_end":140518,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140523,"byte_end":140537,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140542,"byte_end":140545,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140550,"byte_end":140557,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # use pest::Span;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140562,"byte_end":140583,"line_start":51,"line_end":51,"column_start":5,"column_end":26}},{"value":"/ let input = \"Hello!\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140588,"byte_end":140613,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(None, Span::new(input, 100, 0));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140618,"byte_end":140665,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/ assert!(Span::new(input, 0, input.len()).is_some());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140670,"byte_end":140726,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140731,"byte_end":140738,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140743,"byte_end":140776,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141357,"byte_end":141362,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"start","qualname":"<Span>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start byte position as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s start byte position as a `usize`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":140994,"byte_end":141052,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141057,"byte_end":141060,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141065,"byte_end":141079,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141084,"byte_end":141087,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141092,"byte_end":141099,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141104,"byte_end":141129,"line_start":70,"line_end":70,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141134,"byte_end":141155,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141160,"byte_end":141204,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141209,"byte_end":141237,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141242,"byte_end":141274,"line_start":74,"line_end":74,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141279,"byte_end":141282,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141287,"byte_end":141319,"line_start":76,"line_end":76,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141324,"byte_end":141331,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141336,"byte_end":141345,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141770,"byte_end":141773,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"end","qualname":"<Span>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end byte position as a `usize`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s end byte position as a `usize`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141411,"byte_end":141467,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141472,"byte_end":141475,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141480,"byte_end":141494,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141499,"byte_end":141502,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141507,"byte_end":141514,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141519,"byte_end":141544,"line_start":88,"line_end":88,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141549,"byte_end":141570,"line_start":89,"line_end":89,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141575,"byte_end":141619,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141624,"byte_end":141652,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141657,"byte_end":141689,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141694,"byte_end":141697,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.end(), 0);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141702,"byte_end":141732,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141737,"byte_end":141744,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141749,"byte_end":141758,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142183,"byte_end":142192,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"start_pos","qualname":"<Span>::start_pos","value":"pub fn start_pos(&Self) -> position::Position","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start `Position`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s start `Position`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141820,"byte_end":141862,"line_start":101,"line_end":101,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141867,"byte_end":141870,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141875,"byte_end":141889,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141894,"byte_end":141897,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141902,"byte_end":141909,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141914,"byte_end":141939,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141944,"byte_end":141965,"line_start":107,"line_end":107,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":141970,"byte_end":142014,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142019,"byte_end":142047,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/ let span = start.clone().span(&end);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142052,"byte_end":142092,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142097,"byte_end":142100,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.start_pos(), start);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142105,"byte_end":142145,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142150,"byte_end":142157,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142162,"byte_end":142171,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142724,"byte_end":142731,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"end_pos","qualname":"<Span>::end_pos","value":"pub fn end_pos(&Self) -> position::Position","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end `Position`.","sig":null,"attributes":[{"value":"/ Returns the `Span`'s end `Position`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142375,"byte_end":142415,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142420,"byte_end":142423,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142428,"byte_end":142442,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142447,"byte_end":142450,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142455,"byte_end":142462,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142467,"byte_end":142492,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142497,"byte_end":142518,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142523,"byte_end":142567,"line_start":127,"line_end":127,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142572,"byte_end":142600,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/ let span = start.span(&end);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142605,"byte_end":142637,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142642,"byte_end":142645,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.end_pos(), end);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142650,"byte_end":142686,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142691,"byte_end":142698,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142703,"byte_end":142712,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143283,"byte_end":143288,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"split","qualname":"<Span>::split","value":"pub fn split(Self) -> (position::Position, position::Position)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `Span` into a pair of `Position`s.","sig":null,"attributes":[{"value":"/ Splits the `Span` into a pair of `Position`s.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142910,"byte_end":142959,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142964,"byte_end":142967,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142972,"byte_end":142986,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142991,"byte_end":142994,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":142999,"byte_end":143006,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use pest::Position;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143011,"byte_end":143036,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/ let input = \"ab\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143041,"byte_end":143062,"line_start":145,"line_end":145,"column_start":5,"column_end":26}},{"value":"/ let start = Position::from_start(input);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143067,"byte_end":143111,"line_start":146,"line_end":146,"column_start":5,"column_end":49}},{"value":"/ let end = start.clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143116,"byte_end":143144,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let span = start.clone().span(&end);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143149,"byte_end":143189,"line_start":148,"line_end":148,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143194,"byte_end":143197,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(span.split(), (start, end));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143202,"byte_end":143245,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143250,"byte_end":143257,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143262,"byte_end":143271,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144271,"byte_end":144277,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Span>::as_str","value":"pub fn as_str(&Self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the `Span`.","sig":null,"attributes":[{"value":"/ Captures a slice from the `&str` defined by the `Span`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143628,"byte_end":143687,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143692,"byte_end":143695,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143700,"byte_end":143714,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143719,"byte_end":143722,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143727,"byte_end":143734,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143739,"byte_end":143754,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143759,"byte_end":143795,"line_start":167,"line_end":167,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143800,"byte_end":143873,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143878,"byte_end":143894,"line_start":169,"line_end":169,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143899,"byte_end":143902,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let input = \"abc\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143907,"byte_end":143929,"line_start":171,"line_end":171,"column_start":5,"column_end":27}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input).skip(1).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":143934,"byte_end":144031,"line_start":172,"line_end":172,"column_start":5,"column_end":102}},{"value":"/ let start_pos = state.position().clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144036,"byte_end":144081,"line_start":173,"line_end":173,"column_start":5,"column_end":50}},{"value":"/ state = state.match_string(\"b\").unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144086,"byte_end":144131,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/ let span = start_pos.span(&state.position().clone());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144136,"byte_end":144193,"line_start":175,"line_end":175,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(span.as_str(), \"b\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144198,"byte_end":144233,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144238,"byte_end":144245,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144250,"byte_end":144259,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145105,"byte_end":145110,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"lines","qualname":"<Span>::lines","value":"pub fn lines(&Self) -> Lines","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all lines (partially) covered by this span.","sig":null,"attributes":[{"value":"/ Iterates over all lines (partially) covered by this span.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144421,"byte_end":144482,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144487,"byte_end":144490,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144495,"byte_end":144509,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144514,"byte_end":144517,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144522,"byte_end":144529,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # use pest;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144534,"byte_end":144549,"line_start":189,"line_end":189,"column_start":5,"column_end":20}},{"value":"/ # #[allow(non_camel_case_types)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144554,"byte_end":144590,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ # #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144595,"byte_end":144668,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ enum Rule {}","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144673,"byte_end":144689,"line_start":192,"line_end":192,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144694,"byte_end":144697,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let input = \"a\\nb\\nc\";","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144702,"byte_end":144728,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ let mut state: Box<pest::ParserState<Rule>> = pest::ParserState::new(input).skip(2).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144733,"byte_end":144830,"line_start":195,"line_end":195,"column_start":5,"column_end":102}},{"value":"/ let start_pos = state.position().clone();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144835,"byte_end":144880,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ state = state.match_string(\"b\\nc\").unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144885,"byte_end":144933,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ let span = start_pos.span(&state.position().clone());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":144938,"byte_end":144995,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(span.lines().collect::<Vec<_>>(), vec![\"b\\n\", \"c\"]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145000,"byte_end":145067,"line_start":199,"line_end":199,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145072,"byte_end":145079,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145084,"byte_end":145093,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":146103,"byte_end":146108,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"Lines","qualname":"::span::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" Line iterator for Spans, created by [`Span::lines()`].","sig":null,"attributes":[{"value":"/ Line iterator for Spans, created by [`Span::lines()`].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145900,"byte_end":145958,"line_start":236,"line_end":236,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145959,"byte_end":145962,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ Iterates all lines that are at least partially covered by the span.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145963,"byte_end":146034,"line_start":238,"line_end":238,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":146035,"byte_end":146038,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`Span::lines()`]: struct.Span.html#method.lines","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":146039,"byte_end":146091,"line_start":240,"line_end":240,"column_start":1,"column_end":53}}]},{"kind":"StructVariant","id":{"krate":0,"index":971},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/token.rs","byte_start":153770,"byte_end":153775,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Start","qualname":"::token::Token::Start","value":"Token::Start { rule, pos }","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" The starting `Position` of a matched `Rule`\n","sig":null,"attributes":[{"value":"/ The starting `Position` of a matched `Rule`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/token.rs","byte_start":153718,"byte_end":153765,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":974},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/token.rs","byte_start":153862,"byte_end":153865,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"End","qualname":"::token::Token::End","value":"Token::End { rule, pos }","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" The ending `Position` of a matched `Rule`\n","sig":null,"attributes":[{"value":"/ The ending `Position` of a matched `Rule`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/token.rs","byte_start":153812,"byte_end":153857,"line_start":17,"line_end":17,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":968},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/token.rs","byte_start":153699,"byte_end":153704,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Token","qualname":"::token::Token","value":"pub enum Token<'i, R> {\n    Start {\n        rule: R,\n        pos: Position,\n    },\n    End {\n        rule: R,\n        pos: Position,\n    },\n}","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":974}],"decl_id":null,"docs":" A token generated by a `Parser`.\n","sig":null,"attributes":[{"value":"/ A token generated by a `Parser`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/token.rs","byte_start":153608,"byte_end":153644,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":683},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unicode","qualname":"::unicode","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":1005},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":685}],"decl_id":null,"docs":" Character inclusion in binary or General_Category value Unicode sets.","sig":null,"attributes":[{"value":"/ Character inclusion in binary or General_Category value Unicode sets.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":153901,"byte_end":153974,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":153975,"byte_end":153978,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ We rely on dead code elimination to remove the tables that aren't needed.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":153979,"byte_end":154056,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"allow(bad_style)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154058,"byte_end":154078,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"allow(clippy :: all)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154079,"byte_end":154101,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1060},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154560,"byte_end":154570,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"ALPHABETIC","qualname":"::unicode::ALPHABETIC","value":"pub fn ALPHABETIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1061},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154572,"byte_end":154584,"line_start":27,"line_end":27,"column_start":21,"column_end":33},"name":"BIDI_CONTROL","qualname":"::unicode::BIDI_CONTROL","value":"pub fn BIDI_CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1062},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154586,"byte_end":154600,"line_start":27,"line_end":27,"column_start":35,"column_end":49},"name":"CASE_IGNORABLE","qualname":"::unicode::CASE_IGNORABLE","value":"pub fn CASE_IGNORABLE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1063},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154602,"byte_end":154607,"line_start":27,"line_end":27,"column_start":51,"column_end":56},"name":"CASED","qualname":"::unicode::CASED","value":"pub fn CASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1064},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154609,"byte_end":154632,"line_start":27,"line_end":27,"column_start":58,"column_end":81},"name":"CHANGES_WHEN_CASEFOLDED","qualname":"::unicode::CHANGES_WHEN_CASEFOLDED","value":"pub fn CHANGES_WHEN_CASEFOLDED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1065},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154642,"byte_end":154665,"line_start":28,"line_end":28,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_CASEMAPPED","qualname":"::unicode::CHANGES_WHEN_CASEMAPPED","value":"pub fn CHANGES_WHEN_CASEMAPPED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1066},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154667,"byte_end":154690,"line_start":28,"line_end":28,"column_start":34,"column_end":57},"name":"CHANGES_WHEN_LOWERCASED","qualname":"::unicode::CHANGES_WHEN_LOWERCASED","value":"pub fn CHANGES_WHEN_LOWERCASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1067},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154692,"byte_end":154715,"line_start":28,"line_end":28,"column_start":59,"column_end":82},"name":"CHANGES_WHEN_TITLECASED","qualname":"::unicode::CHANGES_WHEN_TITLECASED","value":"pub fn CHANGES_WHEN_TITLECASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1068},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154725,"byte_end":154748,"line_start":29,"line_end":29,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_UPPERCASED","qualname":"::unicode::CHANGES_WHEN_UPPERCASED","value":"pub fn CHANGES_WHEN_UPPERCASED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1069},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154750,"byte_end":154754,"line_start":29,"line_end":29,"column_start":34,"column_end":38},"name":"DASH","qualname":"::unicode::DASH","value":"pub fn DASH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1070},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154756,"byte_end":154784,"line_start":29,"line_end":29,"column_start":40,"column_end":68},"name":"DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::DEFAULT_IGNORABLE_CODE_POINT","value":"pub fn DEFAULT_IGNORABLE_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1071},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154786,"byte_end":154796,"line_start":29,"line_end":29,"column_start":70,"column_end":80},"name":"DEPRECATED","qualname":"::unicode::DEPRECATED","value":"pub fn DEPRECATED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1072},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154798,"byte_end":154807,"line_start":29,"line_end":29,"column_start":82,"column_end":91},"name":"DIACRITIC","qualname":"::unicode::DIACRITIC","value":"pub fn DIACRITIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1073},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154817,"byte_end":154825,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"name":"EXTENDER","qualname":"::unicode::EXTENDER","value":"pub fn EXTENDER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1074},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154827,"byte_end":154840,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"name":"GRAPHEME_BASE","qualname":"::unicode::GRAPHEME_BASE","value":"pub fn GRAPHEME_BASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1075},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154842,"byte_end":154857,"line_start":30,"line_end":30,"column_start":34,"column_end":49},"name":"GRAPHEME_EXTEND","qualname":"::unicode::GRAPHEME_EXTEND","value":"pub fn GRAPHEME_EXTEND(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154859,"byte_end":154872,"line_start":30,"line_end":30,"column_start":51,"column_end":64},"name":"GRAPHEME_LINK","qualname":"::unicode::GRAPHEME_LINK","value":"pub fn GRAPHEME_LINK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1077},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154874,"byte_end":154883,"line_start":30,"line_end":30,"column_start":66,"column_end":75},"name":"HEX_DIGIT","qualname":"::unicode::HEX_DIGIT","value":"pub fn HEX_DIGIT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1078},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154885,"byte_end":154891,"line_start":30,"line_end":30,"column_start":77,"column_end":83},"name":"HYPHEN","qualname":"::unicode::HYPHEN","value":"pub fn HYPHEN(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1079},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154901,"byte_end":154920,"line_start":31,"line_end":31,"column_start":9,"column_end":28},"name":"IDS_BINARY_OPERATOR","qualname":"::unicode::IDS_BINARY_OPERATOR","value":"pub fn IDS_BINARY_OPERATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1080},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154922,"byte_end":154942,"line_start":31,"line_end":31,"column_start":30,"column_end":50},"name":"IDS_TRINARY_OPERATOR","qualname":"::unicode::IDS_TRINARY_OPERATOR","value":"pub fn IDS_TRINARY_OPERATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1081},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154944,"byte_end":154955,"line_start":31,"line_end":31,"column_start":52,"column_end":63},"name":"ID_CONTINUE","qualname":"::unicode::ID_CONTINUE","value":"pub fn ID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1082},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154957,"byte_end":154965,"line_start":31,"line_end":31,"column_start":65,"column_end":73},"name":"ID_START","qualname":"::unicode::ID_START","value":"pub fn ID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154967,"byte_end":154978,"line_start":31,"line_end":31,"column_start":75,"column_end":86},"name":"IDEOGRAPHIC","qualname":"::unicode::IDEOGRAPHIC","value":"pub fn IDEOGRAPHIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1084},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":154980,"byte_end":154992,"line_start":31,"line_end":31,"column_start":88,"column_end":100},"name":"JOIN_CONTROL","qualname":"::unicode::JOIN_CONTROL","value":"pub fn JOIN_CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1085},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155002,"byte_end":155025,"line_start":32,"line_end":32,"column_start":9,"column_end":32},"name":"LOGICAL_ORDER_EXCEPTION","qualname":"::unicode::LOGICAL_ORDER_EXCEPTION","value":"pub fn LOGICAL_ORDER_EXCEPTION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1086},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155027,"byte_end":155036,"line_start":32,"line_end":32,"column_start":34,"column_end":43},"name":"LOWERCASE","qualname":"::unicode::LOWERCASE","value":"pub fn LOWERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1087},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155038,"byte_end":155042,"line_start":32,"line_end":32,"column_start":45,"column_end":49},"name":"MATH","qualname":"::unicode::MATH","value":"pub fn MATH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1088},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155044,"byte_end":155067,"line_start":32,"line_end":32,"column_start":51,"column_end":74},"name":"NONCHARACTER_CODE_POINT","qualname":"::unicode::NONCHARACTER_CODE_POINT","value":"pub fn NONCHARACTER_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1089},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155069,"byte_end":155085,"line_start":32,"line_end":32,"column_start":76,"column_end":92},"name":"OTHER_ALPHABETIC","qualname":"::unicode::OTHER_ALPHABETIC","value":"pub fn OTHER_ALPHABETIC(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1090},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155095,"byte_end":155129,"line_start":33,"line_end":33,"column_start":9,"column_end":43},"name":"OTHER_DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::OTHER_DEFAULT_IGNORABLE_CODE_POINT","value":"pub fn OTHER_DEFAULT_IGNORABLE_CODE_POINT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1091},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155131,"byte_end":155152,"line_start":33,"line_end":33,"column_start":45,"column_end":66},"name":"OTHER_GRAPHEME_EXTEND","qualname":"::unicode::OTHER_GRAPHEME_EXTEND","value":"pub fn OTHER_GRAPHEME_EXTEND(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1092},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155154,"byte_end":155171,"line_start":33,"line_end":33,"column_start":68,"column_end":85},"name":"OTHER_ID_CONTINUE","qualname":"::unicode::OTHER_ID_CONTINUE","value":"pub fn OTHER_ID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155181,"byte_end":155195,"line_start":34,"line_end":34,"column_start":9,"column_end":23},"name":"OTHER_ID_START","qualname":"::unicode::OTHER_ID_START","value":"pub fn OTHER_ID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1094},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155197,"byte_end":155212,"line_start":34,"line_end":34,"column_start":25,"column_end":40},"name":"OTHER_LOWERCASE","qualname":"::unicode::OTHER_LOWERCASE","value":"pub fn OTHER_LOWERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1095},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155214,"byte_end":155224,"line_start":34,"line_end":34,"column_start":42,"column_end":52},"name":"OTHER_MATH","qualname":"::unicode::OTHER_MATH","value":"pub fn OTHER_MATH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1096},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155226,"byte_end":155241,"line_start":34,"line_end":34,"column_start":54,"column_end":69},"name":"OTHER_UPPERCASE","qualname":"::unicode::OTHER_UPPERCASE","value":"pub fn OTHER_UPPERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155243,"byte_end":155257,"line_start":34,"line_end":34,"column_start":71,"column_end":85},"name":"PATTERN_SYNTAX","qualname":"::unicode::PATTERN_SYNTAX","value":"pub fn PATTERN_SYNTAX(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155267,"byte_end":155286,"line_start":35,"line_end":35,"column_start":9,"column_end":28},"name":"PATTERN_WHITE_SPACE","qualname":"::unicode::PATTERN_WHITE_SPACE","value":"pub fn PATTERN_WHITE_SPACE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1099},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155288,"byte_end":155316,"line_start":35,"line_end":35,"column_start":30,"column_end":58},"name":"PREPENDED_CONCATENATION_MARK","qualname":"::unicode::PREPENDED_CONCATENATION_MARK","value":"pub fn PREPENDED_CONCATENATION_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1100},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155318,"byte_end":155332,"line_start":35,"line_end":35,"column_start":60,"column_end":74},"name":"QUOTATION_MARK","qualname":"::unicode::QUOTATION_MARK","value":"pub fn QUOTATION_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1101},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155334,"byte_end":155341,"line_start":35,"line_end":35,"column_start":76,"column_end":83},"name":"RADICAL","qualname":"::unicode::RADICAL","value":"pub fn RADICAL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1102},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155351,"byte_end":155369,"line_start":36,"line_end":36,"column_start":9,"column_end":27},"name":"REGIONAL_INDICATOR","qualname":"::unicode::REGIONAL_INDICATOR","value":"pub fn REGIONAL_INDICATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1103},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155371,"byte_end":155388,"line_start":36,"line_end":36,"column_start":29,"column_end":46},"name":"SENTENCE_TERMINAL","qualname":"::unicode::SENTENCE_TERMINAL","value":"pub fn SENTENCE_TERMINAL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1104},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155390,"byte_end":155401,"line_start":36,"line_end":36,"column_start":48,"column_end":59},"name":"SOFT_DOTTED","qualname":"::unicode::SOFT_DOTTED","value":"pub fn SOFT_DOTTED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155403,"byte_end":155423,"line_start":36,"line_end":36,"column_start":61,"column_end":81},"name":"TERMINAL_PUNCTUATION","qualname":"::unicode::TERMINAL_PUNCTUATION","value":"pub fn TERMINAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1106},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155425,"byte_end":155442,"line_start":36,"line_end":36,"column_start":83,"column_end":100},"name":"UNIFIED_IDEOGRAPH","qualname":"::unicode::UNIFIED_IDEOGRAPH","value":"pub fn UNIFIED_IDEOGRAPH(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1107},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155452,"byte_end":155461,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"UPPERCASE","qualname":"::unicode::UPPERCASE","value":"pub fn UPPERCASE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1108},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155463,"byte_end":155481,"line_start":37,"line_end":37,"column_start":20,"column_end":38},"name":"VARIATION_SELECTOR","qualname":"::unicode::VARIATION_SELECTOR","value":"pub fn VARIATION_SELECTOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1109},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155483,"byte_end":155494,"line_start":37,"line_end":37,"column_start":40,"column_end":51},"name":"WHITE_SPACE","qualname":"::unicode::WHITE_SPACE","value":"pub fn WHITE_SPACE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1110},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155496,"byte_end":155508,"line_start":37,"line_end":37,"column_start":53,"column_end":65},"name":"XID_CONTINUE","qualname":"::unicode::XID_CONTINUE","value":"pub fn XID_CONTINUE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1111},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155510,"byte_end":155519,"line_start":37,"line_end":37,"column_start":67,"column_end":76},"name":"XID_START","qualname":"::unicode::XID_START","value":"pub fn XID_START(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1152},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155561,"byte_end":155573,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"name":"CASED_LETTER","qualname":"::unicode::CASED_LETTER","value":"pub fn CASED_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1153},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155575,"byte_end":155592,"line_start":42,"line_end":42,"column_start":23,"column_end":40},"name":"CLOSE_PUNCTUATION","qualname":"::unicode::CLOSE_PUNCTUATION","value":"pub fn CLOSE_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1154},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155594,"byte_end":155615,"line_start":42,"line_end":42,"column_start":42,"column_end":63},"name":"CONNECTOR_PUNCTUATION","qualname":"::unicode::CONNECTOR_PUNCTUATION","value":"pub fn CONNECTOR_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155617,"byte_end":155624,"line_start":42,"line_end":42,"column_start":65,"column_end":72},"name":"CONTROL","qualname":"::unicode::CONTROL","value":"pub fn CONTROL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155626,"byte_end":155641,"line_start":42,"line_end":42,"column_start":74,"column_end":89},"name":"CURRENCY_SYMBOL","qualname":"::unicode::CURRENCY_SYMBOL","value":"pub fn CURRENCY_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155651,"byte_end":155667,"line_start":43,"line_end":43,"column_start":9,"column_end":25},"name":"DASH_PUNCTUATION","qualname":"::unicode::DASH_PUNCTUATION","value":"pub fn DASH_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1158},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155669,"byte_end":155683,"line_start":43,"line_end":43,"column_start":27,"column_end":41},"name":"DECIMAL_NUMBER","qualname":"::unicode::DECIMAL_NUMBER","value":"pub fn DECIMAL_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155685,"byte_end":155699,"line_start":43,"line_end":43,"column_start":43,"column_end":57},"name":"ENCLOSING_MARK","qualname":"::unicode::ENCLOSING_MARK","value":"pub fn ENCLOSING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1160},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155701,"byte_end":155718,"line_start":43,"line_end":43,"column_start":59,"column_end":76},"name":"FINAL_PUNCTUATION","qualname":"::unicode::FINAL_PUNCTUATION","value":"pub fn FINAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1161},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155720,"byte_end":155726,"line_start":43,"line_end":43,"column_start":78,"column_end":84},"name":"FORMAT","qualname":"::unicode::FORMAT","value":"pub fn FORMAT(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155736,"byte_end":155755,"line_start":44,"line_end":44,"column_start":9,"column_end":28},"name":"INITIAL_PUNCTUATION","qualname":"::unicode::INITIAL_PUNCTUATION","value":"pub fn INITIAL_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1163},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155757,"byte_end":155763,"line_start":44,"line_end":44,"column_start":30,"column_end":36},"name":"LETTER","qualname":"::unicode::LETTER","value":"pub fn LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155765,"byte_end":155778,"line_start":44,"line_end":44,"column_start":38,"column_end":51},"name":"LETTER_NUMBER","qualname":"::unicode::LETTER_NUMBER","value":"pub fn LETTER_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155780,"byte_end":155794,"line_start":44,"line_end":44,"column_start":53,"column_end":67},"name":"LINE_SEPARATOR","qualname":"::unicode::LINE_SEPARATOR","value":"pub fn LINE_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1166},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155796,"byte_end":155812,"line_start":44,"line_end":44,"column_start":69,"column_end":85},"name":"LOWERCASE_LETTER","qualname":"::unicode::LOWERCASE_LETTER","value":"pub fn LOWERCASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1167},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155814,"byte_end":155818,"line_start":44,"line_end":44,"column_start":87,"column_end":91},"name":"MARK","qualname":"::unicode::MARK","value":"pub fn MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1168},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155828,"byte_end":155839,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"MATH_SYMBOL","qualname":"::unicode::MATH_SYMBOL","value":"pub fn MATH_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1169},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155841,"byte_end":155856,"line_start":45,"line_end":45,"column_start":22,"column_end":37},"name":"MODIFIER_LETTER","qualname":"::unicode::MODIFIER_LETTER","value":"pub fn MODIFIER_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1170},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155858,"byte_end":155873,"line_start":45,"line_end":45,"column_start":39,"column_end":54},"name":"MODIFIER_SYMBOL","qualname":"::unicode::MODIFIER_SYMBOL","value":"pub fn MODIFIER_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1171},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155875,"byte_end":155890,"line_start":45,"line_end":45,"column_start":56,"column_end":71},"name":"NONSPACING_MARK","qualname":"::unicode::NONSPACING_MARK","value":"pub fn NONSPACING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1172},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155892,"byte_end":155898,"line_start":45,"line_end":45,"column_start":73,"column_end":79},"name":"NUMBER","qualname":"::unicode::NUMBER","value":"pub fn NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1173},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155900,"byte_end":155916,"line_start":45,"line_end":45,"column_start":81,"column_end":97},"name":"OPEN_PUNCTUATION","qualname":"::unicode::OPEN_PUNCTUATION","value":"pub fn OPEN_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1174},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155926,"byte_end":155931,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"OTHER","qualname":"::unicode::OTHER","value":"pub fn OTHER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1175},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155933,"byte_end":155945,"line_start":46,"line_end":46,"column_start":16,"column_end":28},"name":"OTHER_LETTER","qualname":"::unicode::OTHER_LETTER","value":"pub fn OTHER_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1176},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155947,"byte_end":155959,"line_start":46,"line_end":46,"column_start":30,"column_end":42},"name":"OTHER_NUMBER","qualname":"::unicode::OTHER_NUMBER","value":"pub fn OTHER_NUMBER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1177},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155961,"byte_end":155978,"line_start":46,"line_end":46,"column_start":44,"column_end":61},"name":"OTHER_PUNCTUATION","qualname":"::unicode::OTHER_PUNCTUATION","value":"pub fn OTHER_PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1178},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155980,"byte_end":155992,"line_start":46,"line_end":46,"column_start":63,"column_end":75},"name":"OTHER_SYMBOL","qualname":"::unicode::OTHER_SYMBOL","value":"pub fn OTHER_SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1179},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":155994,"byte_end":156013,"line_start":46,"line_end":46,"column_start":77,"column_end":96},"name":"PARAGRAPH_SEPARATOR","qualname":"::unicode::PARAGRAPH_SEPARATOR","value":"pub fn PARAGRAPH_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1180},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156023,"byte_end":156034,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"PRIVATE_USE","qualname":"::unicode::PRIVATE_USE","value":"pub fn PRIVATE_USE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1181},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156036,"byte_end":156047,"line_start":47,"line_end":47,"column_start":22,"column_end":33},"name":"PUNCTUATION","qualname":"::unicode::PUNCTUATION","value":"pub fn PUNCTUATION(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1182},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156049,"byte_end":156058,"line_start":47,"line_end":47,"column_start":35,"column_end":44},"name":"SEPARATOR","qualname":"::unicode::SEPARATOR","value":"pub fn SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1183},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156060,"byte_end":156075,"line_start":47,"line_end":47,"column_start":46,"column_end":61},"name":"SPACE_SEPARATOR","qualname":"::unicode::SPACE_SEPARATOR","value":"pub fn SPACE_SEPARATOR(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1184},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156077,"byte_end":156089,"line_start":47,"line_end":47,"column_start":63,"column_end":75},"name":"SPACING_MARK","qualname":"::unicode::SPACING_MARK","value":"pub fn SPACING_MARK(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1185},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156091,"byte_end":156100,"line_start":47,"line_end":47,"column_start":77,"column_end":86},"name":"SURROGATE","qualname":"::unicode::SURROGATE","value":"pub fn SURROGATE(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156102,"byte_end":156108,"line_start":47,"line_end":47,"column_start":88,"column_end":94},"name":"SYMBOL","qualname":"::unicode::SYMBOL","value":"pub fn SYMBOL(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1187},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156118,"byte_end":156134,"line_start":48,"line_end":48,"column_start":9,"column_end":25},"name":"TITLECASE_LETTER","qualname":"::unicode::TITLECASE_LETTER","value":"pub fn TITLECASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1188},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156136,"byte_end":156146,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"name":"UNASSIGNED","qualname":"::unicode::UNASSIGNED","value":"pub fn UNASSIGNED(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1189},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156148,"byte_end":156164,"line_start":48,"line_end":48,"column_start":39,"column_end":55},"name":"UPPERCASE_LETTER","qualname":"::unicode::UPPERCASE_LETTER","value":"pub fn UPPERCASE_LETTER(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":685},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/unicode/mod.rs","byte_start":156183,"byte_end":156190,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"by_name","qualname":"::unicode::by_name","value":"pub fn by_name(&str) -> Option<Box<dyn Fn(char) -> bool>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":688},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3319,"byte_end":3327,"line_start":101,"line_end":101,"column_start":11,"column_end":19},"name":"RuleType","qualname":"::RuleType","value":"RuleType: Copy + Debug + Eq + Hash + Ord","parent":null,"children":[],"decl_id":null,"docs":" A trait which parser rules must implement.","sig":null,"attributes":[{"value":"/ A trait which parser rules must implement.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2959,"byte_end":3005,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3006,"byte_end":3009,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This trait is set up so that any struct that implements all of its required traits will","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3010,"byte_end":3101,"line_start":96,"line_end":96,"column_start":1,"column_end":92}},{"value":"/ automatically implement this trait as well.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3102,"byte_end":3149,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3150,"byte_end":3153,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This is essentially a [trait alias](https://github.com/rust-lang/rfcs/pull/1733). When trait","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3154,"byte_end":3250,"line_start":99,"line_end":99,"column_start":1,"column_end":97}},{"value":"/ aliases are implemented, this may be replaced by one.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3251,"byte_end":3308,"line_start":100,"line_end":100,"column_start":1,"column_end":58}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5443,"byte_end":5448,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":17063,"byte_end":17068,"line_start":434,"line_end":434,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":17220,"byte_end":17225,"line_start":440,"line_end":440,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29007,"byte_end":29016,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":30362,"byte_end":30371,"line_start":101,"line_end":101,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":30722,"byte_end":30731,"line_start":117,"line_end":117,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":31055,"byte_end":31064,"line_start":131,"line_end":131,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":31292,"byte_end":31301,"line_start":139,"line_end":139,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33976,"byte_end":33980,"line_start":59,"line_end":59,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":39702,"byte_end":39707,"line_start":258,"line_end":258,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":39974,"byte_end":39978,"line_start":266,"line_end":266,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":40312,"byte_end":40316,"line_start":276,"line_end":276,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":41036,"byte_end":41040,"line_start":301,"line_end":301,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":41265,"byte_end":41269,"line_start":309,"line_end":309,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":41308,"byte_end":41312,"line_start":311,"line_end":311,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44417,"byte_end":44422,"line_start":52,"line_end":52,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":49583,"byte_end":49588,"line_start":221,"line_end":221,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":49820,"byte_end":49825,"line_start":231,"line_end":231,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50154,"byte_end":50159,"line_start":245,"line_end":245,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50330,"byte_end":50335,"line_start":251,"line_end":251,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50650,"byte_end":50655,"line_start":264,"line_end":264,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50918,"byte_end":50923,"line_start":273,"line_end":273,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50962,"byte_end":50967,"line_start":275,"line_end":275,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":57087,"byte_end":57093,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":58122,"byte_end":58128,"line_start":94,"line_end":94,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":58441,"byte_end":58447,"line_start":110,"line_end":110,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":58725,"byte_end":58731,"line_start":124,"line_end":124,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78352,"byte_end":78363,"line_start":103,"line_end":103,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":113825,"byte_end":113833,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125123,"byte_end":125131,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125297,"byte_end":125305,"line_start":396,"line_end":396,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125452,"byte_end":125460,"line_start":402,"line_end":402,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125493,"byte_end":125501,"line_start":404,"line_end":404,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125739,"byte_end":125747,"line_start":414,"line_end":414,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125935,"byte_end":125943,"line_start":421,"line_end":421,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132668,"byte_end":132676,"line_start":40,"line_end":40,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133350,"byte_end":133358,"line_start":65,"line_end":65,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134283,"byte_end":134294,"line_start":93,"line_end":93,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":139971,"byte_end":139975,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145241,"byte_end":145245,"line_start":210,"line_end":210,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145516,"byte_end":145520,"line_start":220,"line_end":220,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145692,"byte_end":145696,"line_start":226,"line_end":226,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145723,"byte_end":145727,"line_start":228,"line_end":228,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":146180,"byte_end":146185,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/stack.rs","byte_start":148343,"byte_end":148348,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/stack.rs","byte_start":150586,"byte_end":150591,"line_start":103,"line_end":103,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3417,"byte_end":3418,"line_start":103,"line_end":103,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2790,"byte_end":2795,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2805,"byte_end":2814,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":94}},{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2880,"byte_end":2892,"line_start":87,"line_end":87,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":2949,"byte_end":2956,"line_start":92,"line_end":92,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":683}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":5443,"byte_end":5448,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":17063,"byte_end":17068,"line_start":434,"line_end":434,"column_start":36,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/error.rs","byte_start":17220,"byte_end":17225,"line_start":440,"line_end":440,"column_start":40,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":691},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":29007,"byte_end":29016,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":30362,"byte_end":30371,"line_start":101,"line_end":101,"column_start":36,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":30722,"byte_end":30731,"line_start":117,"line_end":117,"column_start":47,"column_end":56},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":31055,"byte_end":31064,"line_start":131,"line_end":131,"column_start":38,"column_end":47},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/flat_pairs.rs","byte_start":31292,"byte_end":31301,"line_start":139,"line_end":139,"column_start":30,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":33976,"byte_end":33980,"line_start":59,"line_end":59,"column_start":23,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":39702,"byte_end":39707,"line_start":258,"line_end":258,"column_start":23,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":39974,"byte_end":39978,"line_start":266,"line_end":266,"column_start":38,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":40312,"byte_end":40316,"line_start":276,"line_end":276,"column_start":40,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":41036,"byte_end":41040,"line_start":301,"line_end":301,"column_start":38,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":41265,"byte_end":41269,"line_start":309,"line_end":309,"column_start":24,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pair.rs","byte_start":41308,"byte_end":41312,"line_start":311,"line_end":311,"column_start":28,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":791},"to":{"krate":2,"index":9499}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":44417,"byte_end":44422,"line_start":52,"line_end":52,"column_start":23,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":49583,"byte_end":49588,"line_start":221,"line_end":221,"column_start":36,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":49820,"byte_end":49825,"line_start":231,"line_end":231,"column_start":47,"column_end":52},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50154,"byte_end":50159,"line_start":245,"line_end":245,"column_start":38,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50330,"byte_end":50335,"line_start":251,"line_end":251,"column_start":40,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50650,"byte_end":50655,"line_start":264,"line_end":264,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50918,"byte_end":50923,"line_start":273,"line_end":273,"column_start":24,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/pairs.rs","byte_start":50962,"byte_end":50967,"line_start":275,"line_end":275,"column_start":28,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":9499}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":57087,"byte_end":57093,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":58122,"byte_end":58128,"line_start":94,"line_end":94,"column_start":36,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":58441,"byte_end":58447,"line_start":110,"line_end":110,"column_start":47,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7423}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/iterators/tokens.rs","byte_start":58725,"byte_end":58731,"line_start":124,"line_end":124,"column_start":38,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/parser_state.rs","byte_start":78352,"byte_end":78363,"line_start":103,"line_end":103,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":113825,"byte_end":113833,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125123,"byte_end":125131,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125297,"byte_end":125305,"line_start":396,"line_end":396,"column_start":24,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125452,"byte_end":125460,"line_start":402,"line_end":402,"column_start":17,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125493,"byte_end":125501,"line_start":404,"line_end":404,"column_start":25,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":2687}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125739,"byte_end":125747,"line_start":414,"line_end":414,"column_start":18,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":2676}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/position.rs","byte_start":125935,"byte_end":125943,"line_start":421,"line_end":421,"column_start":19,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":9499}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":132668,"byte_end":132676,"line_start":40,"line_end":40,"column_start":19,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":133350,"byte_end":133358,"line_start":65,"line_end":65,"column_start":29,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":3117}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/prec_climber.rs","byte_start":134283,"byte_end":134294,"line_start":93,"line_end":93,"column_start":19,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":139971,"byte_end":139975,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145241,"byte_end":145245,"line_start":210,"line_end":210,"column_start":25,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145516,"byte_end":145520,"line_start":220,"line_end":220,"column_start":24,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145692,"byte_end":145696,"line_start":226,"line_end":226,"column_start":17,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":145723,"byte_end":145727,"line_start":228,"line_end":228,"column_start":19,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":9499}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/span.rs","byte_start":146180,"byte_end":146185,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/stack.rs","byte_start":148343,"byte_end":148348,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/stack.rs","byte_start":150586,"byte_end":150591,"line_start":103,"line_end":103,"column_start":40,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":949},"to":{"krate":2,"index":3285}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3329,"byte_end":3333,"line_start":101,"line_end":101,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2999},"to":{"krate":0,"index":688}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3336,"byte_end":3341,"line_start":101,"line_end":101,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":9293},"to":{"krate":0,"index":688}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3344,"byte_end":3346,"line_start":101,"line_end":101,"column_start":36,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":688}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3349,"byte_end":3353,"line_start":101,"line_end":101,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":9499},"to":{"krate":0,"index":688}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3356,"byte_end":3359,"line_start":101,"line_end":101,"column_start":48,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2676},"to":{"krate":0,"index":688}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.3/src/lib.rs","byte_start":3417,"byte_end":3418,"line_start":103,"line_end":103,"column_start":54,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":690},"to":{"krate":0,"index":688}}]}