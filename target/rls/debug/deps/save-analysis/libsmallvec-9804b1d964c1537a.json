{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0","program":"/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","smallvec","--edition=2018","/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9804b1d964c1537a","-C","extra-filename=-9804b1d964c1537a","--out-dir","/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","-L","dependency=/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps/libsmallvec-9804b1d964c1537a.rmeta"},"prelude":{"crate_id":{"name":"smallvec","disambiguator":[1303177301955051557,0]},"crate_root":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src","external_crates":[{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}}],"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":301,"byte_end":65044,"line_start":7,"line_end":2100,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":301,"byte_end":65044,"line_start":7,"line_end":2100,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":397},{"krate":0,"index":402},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":155},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":239},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":363},{"krate":0,"index":369},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":382},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":404},{"krate":0,"index":409},{"krate":0,"index":414},{"krate":0,"index":419},{"krate":0,"index":424},{"krate":0,"index":429},{"krate":0,"index":434},{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":449},{"krate":0,"index":454},{"krate":0,"index":459},{"krate":0,"index":464},{"krate":0,"index":469},{"krate":0,"index":474},{"krate":0,"index":479},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":494},{"krate":0,"index":499},{"krate":0,"index":504},{"krate":0,"index":509},{"krate":0,"index":514},{"krate":0,"index":519},{"krate":0,"index":524},{"krate":0,"index":529},{"krate":0,"index":534},{"krate":0,"index":539},{"krate":0,"index":544},{"krate":0,"index":549},{"krate":0,"index":554},{"krate":0,"index":559},{"krate":0,"index":564},{"krate":0,"index":569},{"krate":0,"index":574},{"krate":0,"index":579},{"krate":0,"index":584},{"krate":0,"index":589},{"krate":0,"index":594},{"krate":0,"index":599},{"krate":0,"index":604},{"krate":0,"index":609},{"krate":0,"index":614},{"krate":0,"index":619},{"krate":0,"index":624},{"krate":0,"index":629},{"krate":0,"index":634},{"krate":0,"index":639},{"krate":0,"index":644},{"krate":0,"index":649},{"krate":0,"index":654},{"krate":0,"index":659},{"krate":0,"index":664},{"krate":0,"index":391},{"krate":0,"index":394}],"decl_id":null,"docs":" Small vectors in various sizes. These store a certain number of elements inline, and fall back\n to the heap for larger allocations.  This can be a useful optimization for improving cache\n locality and reducing allocator traffic for workloads that fit within the inline buffer.","sig":null,"attributes":[{"value":"/ Small vectors in various sizes. These store a certain number of elements inline, and fall back","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":301,"byte_end":399,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ to the heap for larger allocations.  This can be a useful optimization for improving cache","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":400,"byte_end":494,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ locality and reducing allocator traffic for workloads that fit within the inline buffer.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":495,"byte_end":587,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":588,"byte_end":591,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## `no_std` support","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":592,"byte_end":615,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ By default, `smallvec` does not depend on `std`.  However, the optional","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":620,"byte_end":695,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ `write` feature implements the `std::io::Write` trait for vectors of `u8`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":696,"byte_end":774,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ When this feature is enabled, `smallvec` depends on `std`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":775,"byte_end":837,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":838,"byte_end":841,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Optional features","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":842,"byte_end":866,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":867,"byte_end":870,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ### `serde`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":871,"byte_end":886,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":887,"byte_end":890,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":891,"byte_end":985,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ `serde::Deserialize` traits.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":986,"byte_end":1018,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1019,"byte_end":1022,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ### `write`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1023,"byte_end":1038,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1039,"byte_end":1042,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1043,"byte_end":1135,"line_start":26,"line_end":26,"column_start":1,"column_end":93}},{"value":"/ This feature is not compatible with `#![no_std]` programs.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1136,"byte_end":1198,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1199,"byte_end":1202,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### `union`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1203,"byte_end":1218,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1219,"byte_end":1222,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ **This feature requires Rust 1.49.**","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1223,"byte_end":1263,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the `union` feature is enabled `smallvec` will track its state (inline or spilled)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1268,"byte_end":1359,"line_start":33,"line_end":33,"column_start":1,"column_end":92}},{"value":"/ without the use of an enum tag, reducing the size of the `smallvec` by one machine word.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1360,"byte_end":1452,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ This means that there is potentially no space overhead compared to `Vec`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1453,"byte_end":1530,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1531,"byte_end":1626,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ machine words.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1627,"byte_end":1645,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1646,"byte_end":1649,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ To use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1650,"byte_end":1741,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ Note that this feature requires Rust 1.49.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1742,"byte_end":1788,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1789,"byte_end":1792,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#55149](https://github.com/rust-lang/rust/issues/55149)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1793,"byte_end":1883,"line_start":42,"line_end":42,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1884,"byte_end":1887,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ### `const_generics`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1888,"byte_end":1912,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1913,"byte_end":1916,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ **This feature requires Rust 1.51.**","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1917,"byte_end":1957,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1958,"byte_end":1961,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":1962,"byte_end":2058,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ list of sizes.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2059,"byte_end":2077,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2078,"byte_end":2081,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### `const_new`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2082,"byte_end":2101,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2102,"byte_end":2105,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ **This feature requires Rust 1.51.**","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2106,"byte_end":2146,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2147,"byte_end":2150,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This feature exposes the functions [`SmallVec::new_const`], [`SmallVec::from_const`], and [`smallvec_inline`] which enables the `SmallVec` to be initialized from a const context.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2151,"byte_end":2333,"line_start":55,"line_end":55,"column_start":1,"column_end":183}},{"value":"/ For details, see the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2334,"byte_end":2358,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ [Rust Reference](https://doc.rust-lang.org/reference/const_eval.html#const-functions).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2359,"byte_end":2449,"line_start":57,"line_end":57,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2450,"byte_end":2453,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ### `specialization`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2454,"byte_end":2478,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2479,"byte_end":2482,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ **This feature is unstable and requires a nightly build of the Rust toolchain.**","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2483,"byte_end":2567,"line_start":61,"line_end":61,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2568,"byte_end":2571,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec::from(slice)` has improved performance for slices","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2572,"byte_end":2665,"line_start":63,"line_end":63,"column_start":1,"column_end":94}},{"value":"/ of `Copy` types.  (Without this feature, you can use `SmallVec::from_slice` to get optimal","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2666,"byte_end":2760,"line_start":64,"line_end":64,"column_start":1,"column_end":95}},{"value":"/ performance for `Copy` types.)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2761,"byte_end":2795,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2796,"byte_end":2799,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#31844](https://github.com/rust-lang/rust/issues/31844)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2800,"byte_end":2890,"line_start":67,"line_end":67,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2891,"byte_end":2894,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ### `may_dangle`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2895,"byte_end":2915,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2916,"byte_end":2919,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ **This feature is unstable and requires a nightly build of the Rust toolchain.**","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":2920,"byte_end":3004,"line_start":71,"line_end":71,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3005,"byte_end":3008,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This feature makes the Rust compiler less strict about use of vectors that contain borrowed","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3009,"byte_end":3104,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ references. For details, see the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3105,"byte_end":3141,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ [Rustonomicon](https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3142,"byte_end":3231,"line_start":75,"line_end":75,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3232,"byte_end":3235,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#34761](https://github.com/rust-lang/rust/issues/34761)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3236,"byte_end":3326,"line_start":77,"line_end":77,"column_start":1,"column_end":91}},{"value":"no_std","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3328,"byte_end":3338,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":3576,"byte_end":3598,"line_start":84,"line_end":84,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8765,"byte_end":8780,"line_start":264,"line_end":264,"column_start":11,"column_end":26},"name":"ExtendFromSlice","qualname":"::ExtendFromSlice","value":"ExtendFromSlice<T>","parent":null,"children":[{"krate":0,"index":92}],"decl_id":null,"docs":" Trait to be implemented by a collection that can be extended from a slice","sig":null,"attributes":[{"value":"/ Trait to be implemented by a collection that can be extended from a slice","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8228,"byte_end":8305,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8306,"byte_end":8309,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8310,"byte_end":8324,"line_start":245,"line_end":245,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8325,"byte_end":8328,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8329,"byte_end":8340,"line_start":247,"line_end":247,"column_start":1,"column_end":12}},{"value":"/ use smallvec::{ExtendFromSlice, SmallVec};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8341,"byte_end":8387,"line_start":248,"line_end":248,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8388,"byte_end":8391,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ fn initialize<V: ExtendFromSlice<u8>>(v: &mut V) {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8392,"byte_end":8446,"line_start":250,"line_end":250,"column_start":1,"column_end":55}},{"value":"/     v.extend_from_slice(b\"Test!\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8447,"byte_end":8485,"line_start":251,"line_end":251,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8486,"byte_end":8491,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8492,"byte_end":8495,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let mut vec = Vec::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8496,"byte_end":8525,"line_start":254,"line_end":254,"column_start":1,"column_end":30}},{"value":"/ initialize(&mut vec);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8526,"byte_end":8551,"line_start":255,"line_end":255,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(&vec, b\"Test!\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8552,"byte_end":8583,"line_start":256,"line_end":256,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8584,"byte_end":8587,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ let mut small_vec = SmallVec::<[u8; 8]>::new();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8588,"byte_end":8639,"line_start":258,"line_end":258,"column_start":1,"column_end":52}},{"value":"/ initialize(&mut small_vec);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8640,"byte_end":8671,"line_start":259,"line_end":259,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(&small_vec as &[_], b\"Test!\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8672,"byte_end":8717,"line_start":260,"line_end":260,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8718,"byte_end":8725,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"deprecated","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8741,"byte_end":8754,"line_start":263,"line_end":263,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8855,"byte_end":8872,"line_start":266,"line_end":266,"column_start":8,"column_end":25},"name":"extend_from_slice","qualname":"::ExtendFromSlice::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[T])","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Extends a collection from a slice of its element type\n","sig":null,"attributes":[{"value":"/ Extends a collection from a slice of its element type","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8790,"byte_end":8847,"line_start":265,"line_end":265,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":398},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9247,"byte_end":9263,"line_start":280,"line_end":280,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::CollectionAllocErr::CapacityOverflow","value":"CollectionAllocErr::CapacityOverflow","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Overflow `usize::MAX` or other error during size computation\n","sig":null,"attributes":[{"value":"/ Overflow `usize::MAX` or other error during size computation","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9178,"byte_end":9242,"line_start":279,"line_end":279,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":400},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9307,"byte_end":9315,"line_start":282,"line_end":282,"column_start":5,"column_end":13},"name":"AllocErr","qualname":"::CollectionAllocErr::AllocErr","value":"CollectionAllocErr::AllocErr { layout }","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The allocator return an error\n","sig":null,"attributes":[{"value":"/ The allocator return an error","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9269,"byte_end":9302,"line_start":281,"line_end":281,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":397},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9153,"byte_end":9171,"line_start":278,"line_end":278,"column_start":10,"column_end":28},"name":"CollectionAllocErr","qualname":"::CollectionAllocErr","value":"pub enum CollectionAllocErr {\n    CapacityOverflow,\n    AllocErr {\n        layout: Layout,\n    },\n}","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":400}],"decl_id":null,"docs":" Error type for APIs with fallible heap allocation\n","sig":null,"attributes":[{"value":"/ Error type for APIs with fallible heap allocation","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9073,"byte_end":9126,"line_start":276,"line_end":276,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":10890,"byte_end":10895,"line_start":330,"line_end":330,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" An iterator that removes the items from a `SmallVec` and yields them by value.","sig":null,"attributes":[{"value":"/ An iterator that removes the items from a `SmallVec` and yields them by value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":10703,"byte_end":10785,"line_start":325,"line_end":325,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":10786,"byte_end":10789,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::drain`][1].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":10790,"byte_end":10831,"line_start":327,"line_end":327,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":10832,"byte_end":10835,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.drain","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":10836,"byte_end":10878,"line_start":329,"line_end":329,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17192,"byte_end":17200,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"SmallVec","qualname":"::SmallVec","value":"SmallVec {  }","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" A `Vec`-like container that can store a small number of elements inline.","sig":null,"attributes":[{"value":"/ A `Vec`-like container that can store a small number of elements inline.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16099,"byte_end":16175,"line_start":521,"line_end":521,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16176,"byte_end":16179,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ `SmallVec` acts like a vector, but can store a limited amount of data inline within the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16180,"byte_end":16271,"line_start":523,"line_end":523,"column_start":1,"column_end":92}},{"value":"/ `SmallVec` struct rather than in a separate allocation.  If the data exceeds this limit, the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16272,"byte_end":16368,"line_start":524,"line_end":524,"column_start":1,"column_end":97}},{"value":"/ `SmallVec` will \"spill\" its data onto the heap, allocating a new buffer to hold it.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16369,"byte_end":16456,"line_start":525,"line_end":525,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16457,"byte_end":16460,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ The amount of data that a `SmallVec` can store inline depends on its backing store. The backing","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16461,"byte_end":16560,"line_start":527,"line_end":527,"column_start":1,"column_end":100}},{"value":"/ store can be any type that implements the `Array` trait; usually it is a small fixed-sized","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16561,"byte_end":16655,"line_start":528,"line_end":528,"column_start":1,"column_end":95}},{"value":"/ array.  For example a `SmallVec<[u64; 8]>` can hold up to eight 64-bit integers inline.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16656,"byte_end":16747,"line_start":529,"line_end":529,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16748,"byte_end":16751,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16752,"byte_end":16766,"line_start":531,"line_end":531,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16767,"byte_end":16770,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16771,"byte_end":16782,"line_start":533,"line_end":533,"column_start":1,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16783,"byte_end":16810,"line_start":534,"line_end":534,"column_start":1,"column_end":28}},{"value":"/ let mut v = SmallVec::<[u8; 4]>::new(); // initialize an empty vector","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16811,"byte_end":16884,"line_start":535,"line_end":535,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16885,"byte_end":16888,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ // The vector can hold up to 4 items without spilling onto the heap.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16889,"byte_end":16961,"line_start":537,"line_end":537,"column_start":1,"column_end":73}},{"value":"/ v.extend(0..4);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16962,"byte_end":16981,"line_start":538,"line_end":538,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(v.len(), 4);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16982,"byte_end":17009,"line_start":539,"line_end":539,"column_start":1,"column_end":28}},{"value":"/ assert!(!v.spilled());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17010,"byte_end":17036,"line_start":540,"line_end":540,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17037,"byte_end":17040,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ // Pushing another element will force the buffer to spill:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17041,"byte_end":17103,"line_start":542,"line_end":542,"column_start":1,"column_end":63}},{"value":"/ v.push(4);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17104,"byte_end":17118,"line_start":543,"line_end":543,"column_start":1,"column_end":15}},{"value":"/ assert_eq!(v.len(), 5);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17119,"byte_end":17146,"line_start":544,"line_end":544,"column_start":1,"column_end":28}},{"value":"/ assert!(v.spilled());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17147,"byte_end":17172,"line_start":545,"line_end":545,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17173,"byte_end":17180,"line_start":546,"line_end":546,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17737,"byte_end":17740,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallVec<A>>::new","value":"pub fn new() -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector\n","sig":null,"attributes":[{"value":"/ Construct an empty vector","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17682,"byte_end":17711,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17716,"byte_end":17725,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18655,"byte_end":18668,"line_start":585,"line_end":585,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<SmallVec<A>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector with enough capacity pre-allocated to store at least `n`\n elements.","sig":null,"attributes":[{"value":"/ Construct an empty vector with enough capacity pre-allocated to store at least `n`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18215,"byte_end":18301,"line_start":571,"line_end":571,"column_start":5,"column_end":91}},{"value":"/ elements.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18306,"byte_end":18319,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18324,"byte_end":18327,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Will create a heap allocation only if `n` is larger than the inline capacity.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18332,"byte_end":18413,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18418,"byte_end":18421,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18426,"byte_end":18433,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18438,"byte_end":18467,"line_start":577,"line_end":577,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18472,"byte_end":18475,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let v: SmallVec<[u8; 3]> = SmallVec::with_capacity(100);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18480,"byte_end":18540,"line_start":579,"line_end":579,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18545,"byte_end":18548,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18553,"byte_end":18579,"line_start":581,"line_end":581,"column_start":5,"column_end":31}},{"value":"/ assert!(v.capacity() >= 100);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18584,"byte_end":18617,"line_start":582,"line_end":582,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18622,"byte_end":18629,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18634,"byte_end":18643,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19202,"byte_end":19210,"line_start":604,"line_end":604,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<SmallVec<A>>::from_vec","value":"pub fn from_vec(Vec<A::Item>) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SmallVec` from a `Vec<A::Item>`.","sig":null,"attributes":[{"value":"/ Construct a new `SmallVec` from a `Vec<A::Item>`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18775,"byte_end":18828,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18833,"byte_end":18836,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Elements will be copied to the inline buffer if vec.capacity() <= Self::inline_capacity().","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18841,"byte_end":18935,"line_start":593,"line_end":593,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18940,"byte_end":18943,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18948,"byte_end":18959,"line_start":595,"line_end":595,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18964,"byte_end":18991,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":18996,"byte_end":18999,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![1, 2, 3, 4, 5];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19004,"byte_end":19038,"line_start":598,"line_end":598,"column_start":5,"column_end":39}},{"value":"/ let small_vec: SmallVec<[_; 3]> = SmallVec::from_vec(vec);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19043,"byte_end":19105,"line_start":599,"line_end":599,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19110,"byte_end":19113,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19118,"byte_end":19164,"line_start":601,"line_end":601,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19169,"byte_end":19176,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19181,"byte_end":19190,"line_start":603,"line_end":603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20306,"byte_end":20314,"line_start":640,"line_end":640,"column_start":12,"column_end":20},"name":"from_buf","qualname":"<SmallVec<A>>::from_buf","value":"pub fn from_buf(A) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":19958,"byte_end":20022,"line_start":628,"line_end":628,"column_start":5,"column_end":69}},{"value":"/ copying elements.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20027,"byte_end":20048,"line_start":629,"line_end":629,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20053,"byte_end":20056,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20061,"byte_end":20072,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20077,"byte_end":20104,"line_start":632,"line_end":632,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20109,"byte_end":20112,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20117,"byte_end":20147,"line_start":634,"line_end":634,"column_start":5,"column_end":35}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf(buf);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20152,"byte_end":20209,"line_start":635,"line_end":635,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20214,"byte_end":20217,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20222,"byte_end":20268,"line_start":637,"line_end":637,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20273,"byte_end":20280,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20285,"byte_end":20294,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20929,"byte_end":20945,"line_start":660,"line_end":660,"column_start":12,"column_end":28},"name":"from_buf_and_len","qualname":"<SmallVec<A>>::from_buf_and_len","value":"pub fn from_buf_and_len(A, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length, which must be less or\n equal to the size of `buf`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20481,"byte_end":20545,"line_start":647,"line_end":647,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length, which must be less or","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20550,"byte_end":20615,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/ equal to the size of `buf`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20620,"byte_end":20651,"line_start":649,"line_end":649,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20656,"byte_end":20659,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20664,"byte_end":20675,"line_start":651,"line_end":651,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20680,"byte_end":20707,"line_start":652,"line_end":652,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20712,"byte_end":20715,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20720,"byte_end":20759,"line_start":654,"line_end":654,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf_and_len(buf, 5);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20764,"byte_end":20832,"line_start":655,"line_end":655,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20837,"byte_end":20840,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20845,"byte_end":20891,"line_start":657,"line_end":657,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20896,"byte_end":20903,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":20908,"byte_end":20917,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21674,"byte_end":21700,"line_start":681,"line_end":681,"column_start":19,"column_end":45},"name":"from_buf_and_len_unchecked","qualname":"<SmallVec<A>>::from_buf_and_len_unchecked","value":"pub unsafe fn from_buf_and_len_unchecked(MaybeUninit<A>, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length. The user is responsible\n for ensuring that `len <= A::size()`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21113,"byte_end":21177,"line_start":665,"line_end":665,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length. The user is responsible","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21182,"byte_end":21249,"line_start":666,"line_end":666,"column_start":5,"column_end":72}},{"value":"/ for ensuring that `len <= A::size()`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21254,"byte_end":21295,"line_start":667,"line_end":667,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21300,"byte_end":21303,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21308,"byte_end":21319,"line_start":669,"line_end":669,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21324,"byte_end":21351,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21356,"byte_end":21386,"line_start":671,"line_end":671,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21391,"byte_end":21394,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21399,"byte_end":21438,"line_start":673,"line_end":673,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = unsafe {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21443,"byte_end":21484,"line_start":674,"line_end":674,"column_start":5,"column_end":46}},{"value":"/     SmallVec::from_buf_and_len_unchecked(MaybeUninit::new(buf), 5)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21489,"byte_end":21559,"line_start":675,"line_end":675,"column_start":5,"column_end":75}},{"value":"/ };","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21564,"byte_end":21570,"line_start":676,"line_end":676,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21575,"byte_end":21578,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21583,"byte_end":21629,"line_start":678,"line_end":678,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21634,"byte_end":21641,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21646,"byte_end":21655,"line_start":680,"line_end":680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":22124,"byte_end":22131,"line_start":693,"line_end":693,"column_start":19,"column_end":26},"name":"set_len","qualname":"<SmallVec<A>>::set_len","value":"pub unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of a vector.","sig":null,"attributes":[{"value":"/ Sets the length of a vector.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21868,"byte_end":21900,"line_start":688,"line_end":688,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21905,"byte_end":21908,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the vector, without actually","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21913,"byte_end":21982,"line_start":690,"line_end":690,"column_start":5,"column_end":74}},{"value":"/ modifying its buffers, so it is up to the caller to ensure that the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":21987,"byte_end":22058,"line_start":691,"line_end":691,"column_start":5,"column_end":76}},{"value":"/ vector is actually the specified size.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":22063,"byte_end":22105,"line_start":692,"line_end":692,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23233,"byte_end":23244,"line_start":720,"line_end":720,"column_start":12,"column_end":23},"name":"inline_size","qualname":"<SmallVec<A>>::inline_size","value":"pub fn inline_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of elements this vector can hold inline\n","sig":null,"attributes":[{"value":"/ The maximum number of elements this vector can hold inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23145,"byte_end":23207,"line_start":718,"line_end":718,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23212,"byte_end":23221,"line_start":719,"line_end":719,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23379,"byte_end":23382,"line_start":726,"line_end":726,"column_start":12,"column_end":15},"name":"len","qualname":"<SmallVec<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements stored in the vector\n","sig":null,"attributes":[{"value":"/ The number of elements stored in the vector","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23306,"byte_end":23353,"line_start":724,"line_end":724,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23358,"byte_end":23367,"line_start":725,"line_end":725,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23503,"byte_end":23511,"line_start":732,"line_end":732,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SmallVec<A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector is empty\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector is empty","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23436,"byte_end":23477,"line_start":730,"line_end":730,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23482,"byte_end":23491,"line_start":731,"line_end":731,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23654,"byte_end":23662,"line_start":738,"line_end":738,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SmallVec<A>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of items the vector can hold without reallocating\n","sig":null,"attributes":[{"value":"/ The number of items the vector can hold without reallocating","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23564,"byte_end":23628,"line_start":736,"line_end":736,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":23633,"byte_end":23642,"line_start":737,"line_end":737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":24843,"byte_end":24850,"line_start":775,"line_end":775,"column_start":12,"column_end":19},"name":"spilled","qualname":"<SmallVec<A>>::spilled","value":"pub fn spilled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the data has spilled into a separate heap-allocated buffer.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the data has spilled into a separate heap-allocated buffer.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":24736,"byte_end":24817,"line_start":773,"line_end":773,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":24822,"byte_end":24831,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25486,"byte_end":25491,"line_start":792,"line_end":792,"column_start":12,"column_end":17},"name":"drain","qualname":"<SmallVec<A>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, A> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector\n and yields the removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":24927,"byte_end":25005,"line_start":779,"line_end":779,"column_start":5,"column_end":83}},{"value":"/ and yields the removed items.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25010,"byte_end":25043,"line_start":780,"line_end":780,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25048,"byte_end":25051,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Note 1: The element range is removed even if the iterator is only","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25056,"byte_end":25125,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ partially consumed or not consumed at all.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25130,"byte_end":25176,"line_start":783,"line_end":783,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25181,"byte_end":25184,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Note 2: It is unspecified how many elements are removed from the vector","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25189,"byte_end":25264,"line_start":785,"line_end":785,"column_start":5,"column_end":80}},{"value":"/ if the `Drain` value is leaked.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25269,"byte_end":25304,"line_start":786,"line_end":786,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25309,"byte_end":25312,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25317,"byte_end":25329,"line_start":788,"line_end":788,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25334,"byte_end":25337,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ Panics if the starting point is greater than the end point or if","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25342,"byte_end":25410,"line_start":790,"line_end":790,"column_start":5,"column_end":73}},{"value":"/ the end point is greater than the length of the vector.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":25415,"byte_end":25474,"line_start":791,"line_end":791,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":26521,"byte_end":26525,"line_start":829,"line_end":829,"column_start":12,"column_end":16},"name":"push","qualname":"<SmallVec<A>>::push","value":"pub fn push(&mut Self, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Append an item to the vector.\n","sig":null,"attributes":[{"value":"/ Append an item to the vector.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":26462,"byte_end":26495,"line_start":827,"line_end":827,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":26500,"byte_end":26509,"line_start":828,"line_end":828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27045,"byte_end":27048,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"pop","qualname":"<SmallVec<A>>::pop","value":"pub fn pop(&mut Self) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Remove an item from the end of the vector and return it, or None if empty.\n","sig":null,"attributes":[{"value":"/ Remove an item from the end of the vector and return it, or None if empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":26941,"byte_end":27019,"line_start":843,"line_end":843,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27024,"byte_end":27033,"line_start":844,"line_end":844,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27788,"byte_end":27794,"line_start":869,"line_end":869,"column_start":12,"column_end":18},"name":"append","qualname":"<SmallVec<A>>::append","value":"pub fn append<B>(&mut Self, &mut SmallVec<B>) where B: Array<Item = A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Moves all the elements of `other` into `self`, leaving `other` empty.","sig":null,"attributes":[{"value":"/ Moves all the elements of `other` into `self`, leaving `other` empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27375,"byte_end":27448,"line_start":857,"line_end":857,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27453,"byte_end":27456,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27461,"byte_end":27474,"line_start":859,"line_end":859,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27479,"byte_end":27482,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27487,"byte_end":27494,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::{SmallVec, smallvec};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27499,"byte_end":27540,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ let mut v0: SmallVec<[u8; 16]> = smallvec![1, 2, 3];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27545,"byte_end":27601,"line_start":863,"line_end":863,"column_start":5,"column_end":61}},{"value":"/ let mut v1: SmallVec<[u8; 32]> = smallvec![4, 5, 6];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27606,"byte_end":27662,"line_start":864,"line_end":864,"column_start":5,"column_end":61}},{"value":"/ v0.append(&mut v1);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27667,"byte_end":27690,"line_start":865,"line_end":865,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(*v0, [1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27695,"byte_end":27735,"line_start":866,"line_end":866,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*v1, []);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27740,"byte_end":27764,"line_start":867,"line_end":867,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27769,"byte_end":27776,"line_start":868,"line_end":868,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28140,"byte_end":28144,"line_start":880,"line_end":880,"column_start":12,"column_end":16},"name":"grow","qualname":"<SmallVec<A>>::grow","value":"pub fn grow(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate to set the capacity to `max(new_cap, inline_size())`.","sig":null,"attributes":[{"value":"/ Re-allocate to set the capacity to `max(new_cap, inline_size())`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":27932,"byte_end":28001,"line_start":876,"line_end":876,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28006,"byte_end":28009,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_cap` is less than the vector's length","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28014,"byte_end":28070,"line_start":878,"line_end":878,"column_start":5,"column_end":61}},{"value":"/ or if the capacity computation overflows `usize`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28075,"byte_end":28128,"line_start":879,"line_end":879,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28378,"byte_end":28386,"line_start":887,"line_end":887,"column_start":12,"column_end":20},"name":"try_grow","qualname":"<SmallVec<A>>::try_grow","value":"pub fn try_grow(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate to set the capacity to `max(new_cap, inline_size())`.","sig":null,"attributes":[{"value":"/ Re-allocate to set the capacity to `max(new_cap, inline_size())`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28228,"byte_end":28297,"line_start":884,"line_end":884,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28302,"byte_end":28305,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_cap` is less than the vector's length","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":28310,"byte_end":28366,"line_start":886,"line_end":886,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30396,"byte_end":30403,"line_start":934,"line_end":934,"column_start":12,"column_end":19},"name":"reserve","qualname":"<SmallVec<A>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30161,"byte_end":30228,"line_start":928,"line_end":928,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30233,"byte_end":30236,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ May reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30241,"byte_end":30300,"line_start":930,"line_end":930,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30305,"byte_end":30308,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ Panics if the capacity computation overflows `usize`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30313,"byte_end":30370,"line_start":932,"line_end":932,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30375,"byte_end":30384,"line_start":933,"line_end":933,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30647,"byte_end":30658,"line_start":941,"line_end":941,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<SmallVec<A>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30496,"byte_end":30563,"line_start":938,"line_end":938,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30568,"byte_end":30571,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ May reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":30576,"byte_end":30635,"line_start":940,"line_end":940,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":31385,"byte_end":31398,"line_start":959,"line_end":959,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<SmallVec<A>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve the minimum capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":31232,"byte_end":31311,"line_start":956,"line_end":956,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":31316,"byte_end":31319,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":31324,"byte_end":31373,"line_start":958,"line_end":958,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":31588,"byte_end":31605,"line_start":964,"line_end":964,"column_start":12,"column_end":29},"name":"try_reserve_exact","qualname":"<SmallVec<A>>::try_reserve_exact","value":"pub fn try_reserve_exact(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity for `additional` more elements to be inserted.\n","sig":null,"attributes":[{"value":"/ Reserve the minimum capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":31497,"byte_end":31576,"line_start":963,"line_end":963,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32152,"byte_end":32165,"line_start":979,"line_end":979,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<SmallVec<A>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the vector as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the vector as much as possible.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":31962,"byte_end":32020,"line_start":975,"line_end":975,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32025,"byte_end":32028,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ When possible, this will move data from an external heap buffer to the vector's inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32033,"byte_end":32123,"line_start":977,"line_end":977,"column_start":5,"column_end":95}},{"value":"/ storage.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32128,"byte_end":32140,"line_start":978,"line_end":978,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33060,"byte_end":33068,"line_start":1004,"line_end":1004,"column_start":12,"column_end":20},"name":"truncate","qualname":"<SmallVec<A>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shorten the vector, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shorten the vector, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32723,"byte_end":32802,"line_start":997,"line_end":997,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32807,"byte_end":32810,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than or equal to the vector's current length, this has no","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32815,"byte_end":32896,"line_start":999,"line_end":999,"column_start":5,"column_end":86}},{"value":"/ effect.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32901,"byte_end":32912,"line_start":1000,"line_end":1000,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32917,"byte_end":32920,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ This does not re-allocate.  If you want the vector's capacity to shrink, call","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":32925,"byte_end":33006,"line_start":1002,"line_end":1002,"column_start":5,"column_end":86}},{"value":"/ `shrink_to_fit` after truncating.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33011,"byte_end":33048,"line_start":1003,"line_end":1003,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33481,"byte_end":33489,"line_start":1018,"line_end":1018,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<SmallVec<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33379,"byte_end":33429,"line_start":1015,"line_end":1015,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33434,"byte_end":33437,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33442,"byte_end":33469,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33643,"byte_end":33655,"line_start":1025,"line_end":1025,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<SmallVec<A>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33537,"byte_end":33587,"line_start":1022,"line_end":1022,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33592,"byte_end":33595,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33600,"byte_end":33631,"line_start":1024,"line_end":1024,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33930,"byte_end":33941,"line_start":1035,"line_end":1035,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<SmallVec<A>>::swap_remove","value":"pub fn swap_remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove the element at position `index`, replacing it with the last element.","sig":null,"attributes":[{"value":"/ Remove the element at position `index`, replacing it with the last element.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33711,"byte_end":33790,"line_start":1029,"line_end":1029,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33795,"byte_end":33798,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33803,"byte_end":33852,"line_start":1031,"line_end":1031,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33857,"byte_end":33860,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33865,"byte_end":33904,"line_start":1033,"line_end":1033,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":33909,"byte_end":33918,"line_start":1034,"line_end":1034,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34208,"byte_end":34213,"line_start":1044,"line_end":1044,"column_start":12,"column_end":17},"name":"clear","qualname":"<SmallVec<A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements from the vector.\n","sig":null,"attributes":[{"value":"/ Remove all elements from the vector.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34142,"byte_end":34182,"line_start":1042,"line_end":1042,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34187,"byte_end":34196,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34434,"byte_end":34440,"line_start":1052,"line_end":1052,"column_start":12,"column_end":18},"name":"remove","qualname":"<SmallVec<A>>::remove","value":"pub fn remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the element at position `index`, shifting all elements after it to the\n left.","sig":null,"attributes":[{"value":"/ Remove and return the element at position `index`, shifting all elements after it to the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34264,"byte_end":34356,"line_start":1048,"line_end":1048,"column_start":5,"column_end":97}},{"value":"/ left.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34361,"byte_end":34370,"line_start":1049,"line_end":1049,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34375,"byte_end":34378,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34383,"byte_end":34422,"line_start":1051,"line_end":1051,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34972,"byte_end":34978,"line_start":1068,"line_end":1068,"column_start":12,"column_end":18},"name":"insert","qualname":"<SmallVec<A>>::insert","value":"pub fn insert(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Insert an element at position `index`, shifting all elements after it to the right.","sig":null,"attributes":[{"value":"/ Insert an element at position `index`, shifting all elements after it to the right.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34821,"byte_end":34908,"line_start":1065,"line_end":1065,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34913,"byte_end":34916,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":34921,"byte_end":34960,"line_start":1067,"line_end":1067,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":35489,"byte_end":35500,"line_start":1084,"line_end":1084,"column_start":12,"column_end":23},"name":"insert_many","qualname":"<SmallVec<A>>::insert_many","value":"pub fn insert_many<I: IntoIterator<Item = A::Item>>(&mut Self, usize, I)","parent":null,"children":[],"decl_id":null,"docs":" Insert multiple elements at position `index`, shifting all following elements toward the\n back.\n","sig":null,"attributes":[{"value":"/ Insert multiple elements at position `index`, shifting all following elements toward the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":35371,"byte_end":35463,"line_start":1082,"line_end":1082,"column_start":5,"column_end":97}},{"value":"/ back.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":35468,"byte_end":35477,"line_start":1083,"line_end":1083,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38375,"byte_end":38383,"line_start":1166,"line_end":1166,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<SmallVec<A>>::into_vec","value":"pub fn into_vec(Self) -> Vec<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto\n the heap.\n","sig":null,"attributes":[{"value":"/ Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38251,"byte_end":38345,"line_start":1164,"line_end":1164,"column_start":5,"column_end":99}},{"value":"/ the heap.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38350,"byte_end":38363,"line_start":1165,"line_end":1165,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38921,"byte_end":38937,"line_start":1183,"line_end":1183,"column_start":12,"column_end":28},"name":"into_boxed_slice","qualname":"<SmallVec<A>>::into_boxed_slice","value":"pub fn into_boxed_slice(Self) -> Box<[A::Item]>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SmallVec` into a `Box<[T]>` without reallocating if the `SmallVec` has already spilled\n onto the heap.","sig":null,"attributes":[{"value":"/ Converts a `SmallVec` into a `Box<[T]>` without reallocating if the `SmallVec` has already spilled","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38722,"byte_end":38824,"line_start":1179,"line_end":1179,"column_start":5,"column_end":107}},{"value":"/ onto the heap.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38829,"byte_end":38847,"line_start":1180,"line_end":1180,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38852,"byte_end":38855,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ Note that this will drop any excess capacity.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":38860,"byte_end":38909,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39321,"byte_end":39331,"line_start":1191,"line_end":1191,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SmallVec<A>>::into_inner","value":"pub fn into_inner(Self) -> Result<A, Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","sig":null,"attributes":[{"value":"/ Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39018,"byte_end":39097,"line_start":1187,"line_end":1187,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39102,"byte_end":39105,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ This method returns `Err(Self)` if the SmallVec is too short (and the `A` contains uninitialized elements),","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39110,"byte_end":39221,"line_start":1189,"line_end":1189,"column_start":5,"column_end":116}},{"value":"/ or if the SmallVec is too long (and all the elements were spilled to the heap).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39226,"byte_end":39309,"line_start":1190,"line_end":1190,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39959,"byte_end":39965,"line_start":1209,"line_end":1209,"column_start":12,"column_end":18},"name":"retain","qualname":"<SmallVec<A>>::retain","value":"pub fn retain<F: FnMut(&mut A::Item) -> bool>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39703,"byte_end":39760,"line_start":1204,"line_end":1204,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39765,"byte_end":39768,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39773,"byte_end":39851,"line_start":1206,"line_end":1206,"column_start":5,"column_end":83}},{"value":"/ This method operates in place and preserves the order of the retained","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39856,"byte_end":39929,"line_start":1207,"line_end":1207,"column_start":5,"column_end":78}},{"value":"/ elements.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":39934,"byte_end":39947,"line_start":1208,"line_end":1208,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":40357,"byte_end":40362,"line_start":1223,"line_end":1223,"column_start":12,"column_end":17},"name":"dedup","qualname":"<SmallVec<A>>::dedup","value":"pub fn dedup(&mut Self) where A::Item: PartialEq<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":40302,"byte_end":40345,"line_start":1222,"line_end":1222,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":40565,"byte_end":40573,"line_start":1231,"line_end":1231,"column_start":12,"column_end":20},"name":"dedup_by","qualname":"<SmallVec<A>>::dedup_by","value":"pub fn dedup_by<F>(&mut Self, F) where F: FnMut(&mut A::Item, &mut A::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements using the given equality relation.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements using the given equality relation.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":40476,"byte_end":40553,"line_start":1230,"line_end":1230,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":41477,"byte_end":41489,"line_start":1263,"line_end":1263,"column_start":12,"column_end":24},"name":"dedup_by_key","qualname":"<SmallVec<A>>::dedup_by_key","value":"pub fn dedup_by_key<F, K>(&mut Self, F) where F: FnMut(&mut A::Item) -> K,\nK: PartialEq<K>","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive elements that map to the same key.\n","sig":null,"attributes":[{"value":"/ Removes consecutive elements that map to the same key.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":41407,"byte_end":41465,"line_start":1262,"line_end":1262,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42859,"byte_end":42870,"line_start":1296,"line_end":1296,"column_start":12,"column_end":23},"name":"resize_with","qualname":"<SmallVec<A>>::resize_with","value":"pub fn resize_with<F>(&mut Self, usize, F) where F: FnMut() -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `SmallVec` in-place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `SmallVec` in-place so that `len` is equal to `new_len`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":41656,"byte_end":41728,"line_start":1271,"line_end":1271,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":41733,"byte_end":41736,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the `SmallVec` is extended by the difference, with each","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":41741,"byte_end":41836,"line_start":1273,"line_end":1273,"column_start":5,"column_end":100}},{"value":"/ additional slot filled with the result of calling the closure `f`. The return values from `f`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":41841,"byte_end":41938,"line_start":1274,"line_end":1274,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42021,"byte_end":42024,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is less than `len`, the `SmallVec` is simply truncated.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42029,"byte_end":42101,"line_start":1277,"line_end":1277,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42106,"byte_end":42109,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ This method uses a closure to create new values on every push. If you'd rather `Clone` a given","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42114,"byte_end":42212,"line_start":1279,"line_end":1279,"column_start":5,"column_end":103}},{"value":"/ value, use `resize`. If you want to use the `Default` trait to generate values, you can pass","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42217,"byte_end":42313,"line_start":1280,"line_end":1280,"column_start":5,"column_end":101}},{"value":"/ `Default::default()` as the second argument.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42318,"byte_end":42366,"line_start":1281,"line_end":1281,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42371,"byte_end":42374,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ Added for std::vec::Vec compatibility (added in Rust 1.33.0)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42379,"byte_end":42443,"line_start":1283,"line_end":1283,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42448,"byte_end":42451,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42456,"byte_end":42463,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::{smallvec, SmallVec};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42468,"byte_end":42509,"line_start":1286,"line_end":1286,"column_start":5,"column_end":46}},{"value":"/ let mut vec : SmallVec<[_; 4]> = smallvec![1, 2, 3];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42514,"byte_end":42570,"line_start":1287,"line_end":1287,"column_start":5,"column_end":61}},{"value":"/ vec.resize_with(5, Default::default);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42575,"byte_end":42616,"line_start":1288,"line_end":1288,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&*vec, &[1, 2, 3, 0, 0]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42621,"byte_end":42661,"line_start":1289,"line_end":1289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42666,"byte_end":42669,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ let mut vec : SmallVec<[_; 4]> = smallvec![];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42674,"byte_end":42723,"line_start":1291,"line_end":1291,"column_start":5,"column_end":54}},{"value":"/ let mut p = 1;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42728,"byte_end":42746,"line_start":1292,"line_end":1292,"column_start":5,"column_end":23}},{"value":"/ vec.resize_with(4, || { p *= 2; p });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42751,"byte_end":42792,"line_start":1293,"line_end":1293,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&*vec, &[2, 4, 8, 16]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42797,"byte_end":42835,"line_start":1294,"line_end":1294,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":42840,"byte_end":42847,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":46022,"byte_end":46036,"line_start":1382,"line_end":1382,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<SmallVec<A>>::from_raw_parts","value":"pub unsafe fn from_raw_parts(*mut A::Item, usize, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SmallVec` directly from the raw components of another\n `SmallVec`.","sig":null,"attributes":[{"value":"/ Creates a `SmallVec` directly from the raw components of another","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43310,"byte_end":43378,"line_start":1313,"line_end":1313,"column_start":5,"column_end":73}},{"value":"/ `SmallVec`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43383,"byte_end":43398,"line_start":1314,"line_end":1314,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43403,"byte_end":43406,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43411,"byte_end":43423,"line_start":1316,"line_end":1316,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43428,"byte_end":43431,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ This is highly unsafe, due to the number of invariants that aren't","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43436,"byte_end":43506,"line_start":1318,"line_end":1318,"column_start":5,"column_end":75}},{"value":"/ checked:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43511,"byte_end":43523,"line_start":1319,"line_end":1319,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43528,"byte_end":43531,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ * `ptr` needs to have been previously allocated via `SmallVec` for its","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43536,"byte_end":43610,"line_start":1321,"line_end":1321,"column_start":5,"column_end":79}},{"value":"/   spilled storage (at least, it's highly likely to be incorrect if it","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43615,"byte_end":43688,"line_start":1322,"line_end":1322,"column_start":5,"column_end":78}},{"value":"/   wasn't).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43693,"byte_end":43707,"line_start":1323,"line_end":1323,"column_start":5,"column_end":19}},{"value":"/ * `ptr`'s `A::Item` type needs to be the same size and alignment that","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43712,"byte_end":43785,"line_start":1324,"line_end":1324,"column_start":5,"column_end":78}},{"value":"/   it was allocated with","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43790,"byte_end":43817,"line_start":1325,"line_end":1325,"column_start":5,"column_end":32}},{"value":"/ * `length` needs to be less than or equal to `capacity`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43822,"byte_end":43882,"line_start":1326,"line_end":1326,"column_start":5,"column_end":65}},{"value":"/ * `capacity` needs to be the capacity that the pointer was allocated","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43887,"byte_end":43959,"line_start":1327,"line_end":1327,"column_start":5,"column_end":77}},{"value":"/   with.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43964,"byte_end":43975,"line_start":1328,"line_end":1328,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43980,"byte_end":43983,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ Violating these may cause problems like corrupting the allocator's","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":43988,"byte_end":44058,"line_start":1330,"line_end":1330,"column_start":5,"column_end":75}},{"value":"/ internal data structures.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44063,"byte_end":44092,"line_start":1331,"line_end":1331,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44097,"byte_end":44100,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ Additionally, `capacity` must be greater than the amount of inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44105,"byte_end":44175,"line_start":1333,"line_end":1333,"column_start":5,"column_end":75}},{"value":"/ storage `A` has; that is, the new `SmallVec` must need to spill over","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44180,"byte_end":44252,"line_start":1334,"line_end":1334,"column_start":5,"column_end":77}},{"value":"/ into heap allocated storage. This condition is asserted against.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44257,"byte_end":44325,"line_start":1335,"line_end":1335,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44330,"byte_end":44333,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ The ownership of `ptr` is effectively transferred to the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44338,"byte_end":44398,"line_start":1337,"line_end":1337,"column_start":5,"column_end":65}},{"value":"/ `SmallVec` which may then deallocate, reallocate or change the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44403,"byte_end":44469,"line_start":1338,"line_end":1338,"column_start":5,"column_end":71}},{"value":"/ contents of memory pointed to by the pointer at will. Ensure","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44474,"byte_end":44538,"line_start":1339,"line_end":1339,"column_start":5,"column_end":69}},{"value":"/ that nothing else uses the pointer after calling this","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44543,"byte_end":44600,"line_start":1340,"line_end":1340,"column_start":5,"column_end":62}},{"value":"/ function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44605,"byte_end":44618,"line_start":1341,"line_end":1341,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44623,"byte_end":44626,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44631,"byte_end":44645,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44650,"byte_end":44653,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44658,"byte_end":44665,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate smallvec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44670,"byte_end":44711,"line_start":1346,"line_end":1346,"column_start":5,"column_end":46}},{"value":"/ # use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44716,"byte_end":44745,"line_start":1347,"line_end":1347,"column_start":5,"column_end":34}},{"value":"/ use std::mem;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44750,"byte_end":44767,"line_start":1348,"line_end":1348,"column_start":5,"column_end":22}},{"value":"/ use std::ptr;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44772,"byte_end":44789,"line_start":1349,"line_end":1349,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44794,"byte_end":44797,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44802,"byte_end":44817,"line_start":1351,"line_end":1351,"column_start":5,"column_end":20}},{"value":"/     let mut v: SmallVec<[_; 1]> = smallvec![1, 2, 3];","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44822,"byte_end":44879,"line_start":1352,"line_end":1352,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44884,"byte_end":44887,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/     // Pull out the important parts of `v`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44892,"byte_end":44939,"line_start":1354,"line_end":1354,"column_start":5,"column_end":52}},{"value":"/     let p = v.as_mut_ptr();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44944,"byte_end":44975,"line_start":1355,"line_end":1355,"column_start":5,"column_end":36}},{"value":"/     let len = v.len();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":44980,"byte_end":45006,"line_start":1356,"line_end":1356,"column_start":5,"column_end":31}},{"value":"/     let cap = v.capacity();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45011,"byte_end":45042,"line_start":1357,"line_end":1357,"column_start":5,"column_end":36}},{"value":"/     let spilled = v.spilled();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45047,"byte_end":45081,"line_start":1358,"line_end":1358,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45086,"byte_end":45089,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/     unsafe {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45094,"byte_end":45110,"line_start":1360,"line_end":1360,"column_start":5,"column_end":21}},{"value":"/         // Forget all about `v`. The heap allocation that stored the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45115,"byte_end":45187,"line_start":1361,"line_end":1361,"column_start":5,"column_end":77}},{"value":"/         // three values won't be deallocated.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45192,"byte_end":45241,"line_start":1362,"line_end":1362,"column_start":5,"column_end":54}},{"value":"/         mem::forget(v);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45246,"byte_end":45273,"line_start":1363,"line_end":1363,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45278,"byte_end":45281,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/         // Overwrite memory with [4, 5, 6].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45286,"byte_end":45333,"line_start":1365,"line_end":1365,"column_start":5,"column_end":52}},{"value":"/         //","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45338,"byte_end":45352,"line_start":1366,"line_end":1366,"column_start":5,"column_end":19}},{"value":"/         // This is only safe if `spilled` is true! Otherwise, we are","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45357,"byte_end":45429,"line_start":1367,"line_end":1367,"column_start":5,"column_end":77}},{"value":"/         // writing into the old `SmallVec`'s inline storage on the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45434,"byte_end":45504,"line_start":1368,"line_end":1368,"column_start":5,"column_end":75}},{"value":"/         // stack.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45509,"byte_end":45530,"line_start":1369,"line_end":1369,"column_start":5,"column_end":26}},{"value":"/         assert!(spilled);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45535,"byte_end":45564,"line_start":1370,"line_end":1370,"column_start":5,"column_end":34}},{"value":"/         for i in 0..len {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45569,"byte_end":45598,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/             ptr::write(p.add(i), 4 + i);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45603,"byte_end":45647,"line_start":1372,"line_end":1372,"column_start":5,"column_end":49}},{"value":"/         }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45652,"byte_end":45665,"line_start":1373,"line_end":1373,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45670,"byte_end":45673,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/         // Put everything back together into a SmallVec with a different","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45678,"byte_end":45754,"line_start":1375,"line_end":1375,"column_start":5,"column_end":81}},{"value":"/         // amount of inline storage, but which is still less than `cap`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45759,"byte_end":45835,"line_start":1376,"line_end":1376,"column_start":5,"column_end":81}},{"value":"/         let rebuilt = SmallVec::<[_; 2]>::from_raw_parts(p, len, cap);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45840,"byte_end":45914,"line_start":1377,"line_end":1377,"column_start":5,"column_end":79}},{"value":"/         assert_eq!(&*rebuilt, &[4, 5, 6]);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45919,"byte_end":45965,"line_start":1378,"line_end":1378,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45970,"byte_end":45979,"line_start":1379,"line_end":1379,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45984,"byte_end":45989,"line_start":1380,"line_end":1380,"column_start":5,"column_end":10}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":45994,"byte_end":46003,"line_start":1381,"line_end":1381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":46337,"byte_end":46343,"line_start":1391,"line_end":1391,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<SmallVec<A>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A::Item","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the vector's buffer.\n","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the vector's buffer.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":46276,"byte_end":46325,"line_start":1390,"line_end":1390,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":46699,"byte_end":46709,"line_start":1399,"line_end":1399,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<SmallVec<A>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A::Item","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw mutable pointer to the vector's buffer.\n","sig":null,"attributes":[{"value":"/ Returns a raw mutable pointer to the vector's buffer.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":46630,"byte_end":46687,"line_start":1398,"line_end":1398,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":47228,"byte_end":47238,"line_start":1414,"line_end":1414,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SmallVec<A>>::from_slice","value":"pub fn from_slice(&[A::Item]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the elements from a slice into a new `SmallVec`.","sig":null,"attributes":[{"value":"/ Copy the elements from a slice into a new `SmallVec`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":47062,"byte_end":47119,"line_start":1411,"line_end":1411,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":47124,"byte_end":47127,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `SmallVec::from(slice)`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":47132,"byte_end":47216,"line_start":1413,"line_end":1413,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48294,"byte_end":48311,"line_start":1444,"line_end":1444,"column_start":12,"column_end":29},"name":"insert_from_slice","qualname":"<SmallVec<A>>::insert_from_slice","value":"pub fn insert_from_slice(&mut Self, usize, &[A::Item])","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice into the vector at position `index`, shifting any following\n elements toward the back.","sig":null,"attributes":[{"value":"/ Copy elements from a slice into the vector at position `index`, shifting any following","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48076,"byte_end":48166,"line_start":1440,"line_end":1440,"column_start":5,"column_end":95}},{"value":"/ elements toward the back.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48171,"byte_end":48200,"line_start":1441,"line_end":1441,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48205,"byte_end":48208,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `insert`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48213,"byte_end":48282,"line_start":1443,"line_end":1443,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48934,"byte_end":48951,"line_start":1463,"line_end":1463,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<SmallVec<A>>::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[A::Item])","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice and append them to the vector.","sig":null,"attributes":[{"value":"/ Copy elements from a slice and append them to the vector.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48765,"byte_end":48826,"line_start":1459,"line_end":1459,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48831,"byte_end":48834,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `extend`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48839,"byte_end":48908,"line_start":1461,"line_end":1461,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":48913,"byte_end":48922,"line_start":1462,"line_end":1462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49419,"byte_end":49425,"line_start":1479,"line_end":1479,"column_start":12,"column_end":18},"name":"resize","qualname":"<SmallVec<A>>::resize","value":"pub fn resize(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the vector so that its length is equal to `len`.","sig":null,"attributes":[{"value":"/ Resizes the vector so that its length is equal to `len`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49126,"byte_end":49186,"line_start":1473,"line_end":1473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49191,"byte_end":49194,"line_start":1474,"line_end":1474,"column_start":5,"column_end":8}},{"value":"/ If `len` is less than the current length, the vector simply truncated.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49199,"byte_end":49273,"line_start":1475,"line_end":1475,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49278,"byte_end":49281,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the current length, `value` is appended to the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49286,"byte_end":49361,"line_start":1477,"line_end":1477,"column_start":5,"column_end":80}},{"value":"/ vector until its length equals `len`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49366,"byte_end":49407,"line_start":1478,"line_end":1478,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49901,"byte_end":49910,"line_start":1496,"line_end":1496,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<SmallVec<A>>::from_elem","value":"pub fn from_elem(A::Item, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SmallVec` with `n` copies of `elem`.\n ```\n use smallvec::SmallVec;","sig":null,"attributes":[{"value":"/ Creates a `SmallVec` with `n` copies of `elem`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49659,"byte_end":49710,"line_start":1489,"line_end":1489,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49715,"byte_end":49722,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49727,"byte_end":49754,"line_start":1491,"line_end":1491,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49759,"byte_end":49762,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ let v = SmallVec::<[char; 128]>::from_elem('d', 2);","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49767,"byte_end":49822,"line_start":1493,"line_end":1493,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v, SmallVec::from_buf(['d', 'd']));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49827,"byte_end":49877,"line_start":1494,"line_end":1494,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49882,"byte_end":49889,"line_start":1495,"line_end":1495,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":328},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58937,"byte_end":58945,"line_start":1871,"line_end":1871,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" An iterator that consumes a `SmallVec` and yields its items by value.","sig":null,"attributes":[{"value":"/ An iterator that consumes a `SmallVec` and yields its items by value.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58751,"byte_end":58824,"line_start":1866,"line_end":1866,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58825,"byte_end":58828,"line_start":1867,"line_end":1867,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::into_iter`][1].","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58829,"byte_end":58874,"line_start":1868,"line_end":1868,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58875,"byte_end":58878,"line_start":1869,"line_end":1869,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.into_iter","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58879,"byte_end":58925,"line_start":1870,"line_end":1870,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60587,"byte_end":60595,"line_start":1943,"line_end":1943,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<IntoIter<A>>::as_slice","value":"pub fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60515,"byte_end":60575,"line_start":1942,"line_end":1942,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60843,"byte_end":60855,"line_start":1949,"line_end":1949,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<IntoIter<A>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a mutable slice.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60763,"byte_end":60831,"line_start":1948,"line_end":1948,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":375},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":61995,"byte_end":62000,"line_start":1989,"line_end":1989,"column_start":18,"column_end":23},"name":"Array","qualname":"::Array","value":"Array","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" Types that can be used as the backing store for a SmallVec\n","sig":null,"attributes":[{"value":"/ Types that can be used as the backing store for a SmallVec","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":61915,"byte_end":61977,"line_start":1988,"line_end":1988,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":376},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62054,"byte_end":62058,"line_start":1991,"line_end":1991,"column_start":10,"column_end":14},"name":"Item","qualname":"::Array::Item","value":"type Item;","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" The type of the array's elements.\n","sig":null,"attributes":[{"value":"/ The type of the array's elements.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62007,"byte_end":62044,"line_start":1990,"line_end":1990,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62123,"byte_end":62127,"line_start":1993,"line_end":1993,"column_start":8,"column_end":12},"name":"size","qualname":"::Array::size","value":"pub fn size() -> usize","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Returns the number of items the array can hold.\n","sig":null,"attributes":[{"value":"/ Returns the number of items the array can hold.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62064,"byte_end":62115,"line_start":1992,"line_end":1992,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":391},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":64758,"byte_end":64768,"line_start":2087,"line_end":2087,"column_start":11,"column_end":21},"name":"ToSmallVec","qualname":"::ToSmallVec","value":"ToSmallVec<A: Array>","parent":null,"children":[{"krate":0,"index":393}],"decl_id":null,"docs":" Convenience trait for constructing a `SmallVec`\n","sig":null,"attributes":[{"value":"/ Convenience trait for constructing a `SmallVec`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":64696,"byte_end":64747,"line_start":2086,"line_end":2086,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":64837,"byte_end":64848,"line_start":2089,"line_end":2089,"column_start":8,"column_end":19},"name":"to_smallvec","qualname":"::ToSmallVec::to_smallvec","value":"pub fn to_smallvec(&Self) -> SmallVec<A>","parent":{"krate":0,"index":391},"children":[],"decl_id":null,"docs":" Construct a new `SmallVec` from a slice.\n","sig":null,"attributes":[{"value":"/ Construct a new `SmallVec` from a slice.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":64785,"byte_end":64829,"line_start":2088,"line_end":2088,"column_start":5,"column_end":49}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8960,"byte_end":8963,"line_start":270,"line_end":270,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9430,"byte_end":9448,"line_start":288,"line_end":288,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9619,"byte_end":9637,"line_start":295,"line_end":295,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11070,"byte_end":11075,"line_start":337,"line_end":337,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11299,"byte_end":11304,"line_start":346,"line_end":346,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11357,"byte_end":11362,"line_start":347,"line_end":347,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11411,"byte_end":11416,"line_start":349,"line_end":349,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11770,"byte_end":11775,"line_start":365,"line_end":365,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":12003,"byte_end":12008,"line_start":374,"line_end":374,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":12131,"byte_end":12136,"line_start":381,"line_end":381,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":12181,"byte_end":12186,"line_start":383,"line_end":383,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":14716,"byte_end":14728,"line_start":472,"line_end":472,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16022,"byte_end":16034,"line_start":518,"line_end":518,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16079,"byte_end":16091,"line_start":519,"line_end":519,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17664,"byte_end":17672,"line_start":555,"line_end":555,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":37912,"byte_end":37923,"line_start":1151,"line_end":1151,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":47019,"byte_end":47027,"line_start":1407,"line_end":1407,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49082,"byte_end":49090,"line_start":1469,"line_end":1469,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":50466,"byte_end":50474,"line_start":1515,"line_end":1515,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":50719,"byte_end":50727,"line_start":1526,"line_end":1526,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":50971,"byte_end":50979,"line_start":1536,"line_end":1536,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":51094,"byte_end":51102,"line_start":1543,"line_end":1543,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":51226,"byte_end":51234,"line_start":1550,"line_end":1550,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":51353,"byte_end":51361,"line_start":1557,"line_end":1557,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":53941,"byte_end":53949,"line_start":1665,"line_end":1665,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54323,"byte_end":54331,"line_start":1682,"line_end":1682,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54467,"byte_end":54475,"line_start":1689,"line_end":1689,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54636,"byte_end":54644,"line_start":1696,"line_end":1696,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54822,"byte_end":54830,"line_start":1704,"line_end":1704,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":55002,"byte_end":55010,"line_start":1711,"line_end":1711,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":55197,"byte_end":55205,"line_start":1720,"line_end":1720,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":55424,"byte_end":55432,"line_start":1729,"line_end":1729,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":56164,"byte_end":56172,"line_start":1754,"line_end":1754,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":56361,"byte_end":56369,"line_start":1763,"line_end":1763,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":56898,"byte_end":56906,"line_start":1785,"line_end":1785,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":57229,"byte_end":57237,"line_start":1798,"line_end":1798,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":57925,"byte_end":57933,"line_start":1823,"line_end":1823,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58101,"byte_end":58109,"line_start":1833,"line_end":1833,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58165,"byte_end":58173,"line_start":1835,"line_end":1835,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58381,"byte_end":58389,"line_start":1845,"line_end":1845,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58560,"byte_end":58568,"line_start":1855,"line_end":1855,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58715,"byte_end":58723,"line_start":1864,"line_end":1864,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59050,"byte_end":59058,"line_start":1877,"line_end":1877,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59267,"byte_end":59275,"line_start":1886,"line_end":1886,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59429,"byte_end":59437,"line_start":1895,"line_end":1895,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59530,"byte_end":59538,"line_start":1901,"line_end":1901,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60081,"byte_end":60089,"line_start":1924,"line_end":1924,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60418,"byte_end":60426,"line_start":1938,"line_end":1938,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60466,"byte_end":60474,"line_start":1939,"line_end":1939,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60497,"byte_end":60505,"line_start":1941,"line_end":1941,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":61069,"byte_end":61077,"line_start":1955,"line_end":1955,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62371,"byte_end":62383,"line_start":2004,"line_end":2004,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62734,"byte_end":62746,"line_start":2024,"line_end":2024,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":8960,"byte_end":8963,"line_start":270,"line_end":270,"column_start":39,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":7014},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9430,"byte_end":9448,"line_start":288,"line_end":288,"column_start":23,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":9619,"byte_end":9637,"line_start":295,"line_end":295,"column_start":26,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":397},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11070,"byte_end":11075,"line_start":337,"line_end":337,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11299,"byte_end":11304,"line_start":346,"line_end":346,"column_start":43,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11357,"byte_end":11362,"line_start":347,"line_end":347,"column_start":43,"column_end":48},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11411,"byte_end":11416,"line_start":349,"line_end":349,"column_start":38,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":11770,"byte_end":11775,"line_start":365,"line_end":365,"column_start":49,"column_end":54},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":12003,"byte_end":12008,"line_start":374,"line_end":374,"column_start":42,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":12131,"byte_end":12136,"line_start":381,"line_end":381,"column_start":38,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":7827}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":12181,"byte_end":12186,"line_start":383,"line_end":383,"column_start":34,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":14716,"byte_end":14728,"line_start":472,"line_end":472,"column_start":16,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16022,"byte_end":16034,"line_start":518,"line_end":518,"column_start":39,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":16079,"byte_end":16091,"line_start":519,"line_end":519,"column_start":39,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":17664,"byte_end":17672,"line_start":555,"line_end":555,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":37912,"byte_end":37923,"line_start":1151,"line_end":1151,"column_start":26,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":47019,"byte_end":47027,"line_start":1407,"line_end":1407,"column_start":16,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":49082,"byte_end":49090,"line_start":1469,"line_end":1469,"column_start":16,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":50466,"byte_end":50474,"line_start":1515,"line_end":1515,"column_start":31,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3200}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":50719,"byte_end":50727,"line_start":1526,"line_end":1526,"column_start":34,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3213}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":50971,"byte_end":50979,"line_start":1536,"line_end":1536,"column_start":37,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2886}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":51094,"byte_end":51102,"line_start":1543,"line_end":1543,"column_start":37,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2889}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":51226,"byte_end":51234,"line_start":1550,"line_end":1550,"column_start":38,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2588}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":51353,"byte_end":51361,"line_start":1557,"line_end":1557,"column_start":41,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2591}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":53941,"byte_end":53949,"line_start":1665,"line_end":1665,"column_start":44,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54323,"byte_end":54331,"line_start":1682,"line_end":1682,"column_start":39,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54467,"byte_end":54475,"line_start":1689,"line_end":1689,"column_start":28,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2895}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54636,"byte_end":54644,"line_start":1696,"line_end":1696,"column_start":60,"column_end":68},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3285}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":54822,"byte_end":54830,"line_start":1704,"line_end":1704,"column_start":63,"column_end":71},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3289}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":55002,"byte_end":55010,"line_start":1711,"line_end":1711,"column_start":45,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":55197,"byte_end":55205,"line_start":1720,"line_end":1720,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":7375}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":55424,"byte_end":55432,"line_start":1729,"line_end":1729,"column_start":36,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":7388}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":56164,"byte_end":56172,"line_start":1754,"line_end":1754,"column_start":31,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":56361,"byte_end":56369,"line_start":1763,"line_end":1763,"column_start":28,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2967}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":56898,"byte_end":56906,"line_start":1785,"line_end":1785,"column_start":25,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":57229,"byte_end":57237,"line_start":1798,"line_end":1798,"column_start":26,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":57925,"byte_end":57933,"line_start":1823,"line_end":1823,"column_start":53,"column_end":61},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2640}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58101,"byte_end":58109,"line_start":1833,"line_end":1833,"column_start":23,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58165,"byte_end":58173,"line_start":1835,"line_end":1835,"column_start":31,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2687}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58381,"byte_end":58389,"line_start":1845,"line_end":1845,"column_start":24,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2676}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58560,"byte_end":58568,"line_start":1855,"line_end":1855,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":9499}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":58715,"byte_end":58723,"line_start":1864,"line_end":1864,"column_start":32,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59050,"byte_end":59058,"line_start":1877,"line_end":1877,"column_start":31,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59267,"byte_end":59275,"line_start":1886,"line_end":1886,"column_start":34,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59429,"byte_end":59437,"line_start":1895,"line_end":1895,"column_start":25,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":59530,"byte_end":59538,"line_start":1901,"line_end":1901,"column_start":29,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60081,"byte_end":60089,"line_start":1924,"line_end":1924,"column_start":40,"column_end":48},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":7423}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60418,"byte_end":60426,"line_start":1938,"line_end":1938,"column_start":38,"column_end":46},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":7448}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60466,"byte_end":60474,"line_start":1939,"line_end":1939,"column_start":34,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":328},"to":{"krate":1,"index":7827}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":60497,"byte_end":60505,"line_start":1941,"line_end":1941,"column_start":16,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":61069,"byte_end":61077,"line_start":1955,"line_end":1955,"column_start":33,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":7379}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62371,"byte_end":62383,"line_start":2004,"line_end":2004,"column_start":10,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.7.0/src/lib.rs","byte_start":62734,"byte_end":62746,"line_start":2024,"line_end":2024,"column_start":19,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":378},"to":{"krate":1,"index":3224}}]}