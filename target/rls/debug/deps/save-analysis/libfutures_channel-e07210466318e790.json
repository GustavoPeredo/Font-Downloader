{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18","program":"/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=e07210466318e790","-C","extra-filename=-e07210466318e790","--out-dir","/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","-L","dependency=/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps","--extern","futures_core=/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps/libfutures_core-52245434e6897eeb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gustavo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/gustavo/Projekte/Font-Downloader/target/rls/debug/deps/libfutures_channel-e07210466318e790.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[16273330187616175701,0]},"crate_root":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src","external_crates":[{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1482942822998146276,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[2034785968469428135,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12655493918929861395,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13424910470399079611,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8213023121058624814,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1453466684381863476,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6350140743624839590,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14051362197407762759,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9149086998956066884,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10052156975085119838,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8205769154475333920,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6301584694146806614,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15443445678815071393,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[11686829219546108309,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1288115582928114942,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3368074392128242346,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[7654683265571716261,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[14210105045647006011,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1449232587040508138,0]}},{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","num":20,"id":{"name":"futures_core","disambiguator":[2664049833775624091,0]}}],"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":0,"byte_end":1223,"line_start":1,"line_end":42,"column_start":1,"column_end":17}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":0,"byte_end":1223,"line_start":1,"line_end":42,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":43},{"krate":0,"index":310}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Like threads, concurrent tasks sometimes need to communicate with each","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":31,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ other. This module contains two basic abstractions for doing so:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":106,"byte_end":174,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":175,"byte_end":178,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [oneshot], a way of sending a single value from one task to another.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":179,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ - [mpsc], a multi-producer, single-consumer channel for sending values","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/   between tasks, analogous to the similarly-named structure in the standard","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":329,"byte_end":408,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   library.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":409,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":424,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All items are only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":428,"byte_end":502,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":503,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":605,"byte_end":737,"line_start":15,"line_end":21,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":138},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":519},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":188},{"krate":0,"index":203},{"krate":0,"index":220},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":309}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":1073,"byte_end":1107,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":1108,"byte_end":1131,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4374,"byte_end":4443,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4444,"byte_end":4467,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4468,"byte_end":4471,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4472,"byte_end":4542,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4543,"byte_end":4622,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4623,"byte_end":4698,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4699,"byte_end":4771,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4772,"byte_end":4854,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4855,"byte_end":4932,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":4933,"byte_end":5010,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5011,"byte_end":5056,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5057,"byte_end":5060,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5061,"byte_end":5137,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5138,"byte_end":5141,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5142,"byte_end":5161,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5162,"byte_end":5165,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5166,"byte_end":5232,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5233,"byte_end":5313,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5314,"byte_end":5371,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5372,"byte_end":5406,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5407,"byte_end":5410,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5411,"byte_end":5481,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5482,"byte_end":5561,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5562,"byte_end":5585,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5586,"byte_end":5589,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5590,"byte_end":5610,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5611,"byte_end":5614,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5615,"byte_end":5681,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5682,"byte_end":5758,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5759,"byte_end":5839,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5840,"byte_end":5920,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5921,"byte_end":5993,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":5994,"byte_end":6053,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":6054,"byte_end":6057,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":6058,"byte_end":6092,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":6093,"byte_end":6131,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":6132,"byte_end":6191,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":6192,"byte_end":6220,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":6221,"byte_end":6291,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9682,"byte_end":9688,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9534,"byte_end":9585,"line_start":122,"line_end":122,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9586,"byte_end":9589,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9590,"byte_end":9653,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9880,"byte_end":9895,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9725,"byte_end":9779,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9780,"byte_end":9783,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9784,"byte_end":9851,"line_start":130,"line_end":130,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10167,"byte_end":10175,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":463}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10022,"byte_end":10070,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10071,"byte_end":10074,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10075,"byte_end":10138,"line_start":139,"line_end":139,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10377,"byte_end":10394,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":469}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10225,"byte_end":10276,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10277,"byte_end":10280,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10281,"byte_end":10348,"line_start":147,"line_end":147,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10671,"byte_end":10680,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":474}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10561,"byte_end":10620,"line_start":156,"line_end":156,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10819,"byte_end":10831,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10711,"byte_end":10775,"line_start":162,"line_end":162,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11041,"byte_end":11053,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":141}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10963,"byte_end":11029,"line_start":175,"line_end":175,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11503,"byte_end":11510,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11420,"byte_end":11491,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11727,"byte_end":11742,"line_start":202,"line_end":202,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11640,"byte_end":11715,"line_start":201,"line_end":201,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12541,"byte_end":12548,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12458,"byte_end":12529,"line_start":229,"line_end":229,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12691,"byte_end":12706,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12604,"byte_end":12679,"line_start":234,"line_end":234,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12847,"byte_end":12857,"line_start":240,"line_end":240,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12770,"byte_end":12835,"line_start":239,"line_end":239,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12965,"byte_end":12980,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12899,"byte_end":12953,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":16339,"byte_end":16346,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":15713,"byte_end":15793,"line_start":347,"line_end":347,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":15794,"byte_end":15797,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":15798,"byte_end":15877,"line_start":349,"line_end":349,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":15878,"byte_end":15955,"line_start":350,"line_end":350,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":15956,"byte_end":16027,"line_start":351,"line_end":351,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":16028,"byte_end":16101,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":16102,"byte_end":16172,"line_start":353,"line_end":353,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":16173,"byte_end":16176,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":16177,"byte_end":16231,"line_start":355,"line_end":355,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":16232,"byte_end":16319,"line_start":356,"line_end":356,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":16320,"byte_end":16331,"line_start":357,"line_end":357,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17597,"byte_end":17606,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17085,"byte_end":17161,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17162,"byte_end":17172,"line_start":384,"line_end":384,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17173,"byte_end":17176,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17177,"byte_end":17257,"line_start":386,"line_end":386,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17258,"byte_end":17337,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17338,"byte_end":17351,"line_start":388,"line_end":388,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17352,"byte_end":17355,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17356,"byte_end":17435,"line_start":390,"line_end":390,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17436,"byte_end":17512,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":17513,"byte_end":17589,"line_start":392,"line_end":392,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28146,"byte_end":28154,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28033,"byte_end":28103,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28108,"byte_end":28134,"line_start":695,"line_end":695,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28633,"byte_end":28643,"line_start":709,"line_end":709,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28417,"byte_end":28451,"line_start":704,"line_end":704,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28456,"byte_end":28459,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28464,"byte_end":28509,"line_start":706,"line_end":706,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28514,"byte_end":28585,"line_start":707,"line_end":707,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28590,"byte_end":28621,"line_start":708,"line_end":708,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29258,"byte_end":29268,"line_start":725,"line_end":725,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28747,"byte_end":28821,"line_start":713,"line_end":713,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28826,"byte_end":28864,"line_start":714,"line_end":714,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28869,"byte_end":28872,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28877,"byte_end":28895,"line_start":716,"line_end":716,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28900,"byte_end":28903,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28908,"byte_end":28932,"line_start":718,"line_end":718,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28937,"byte_end":28940,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28945,"byte_end":29004,"line_start":720,"line_end":720,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29009,"byte_end":29058,"line_start":721,"line_end":721,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29063,"byte_end":29139,"line_start":722,"line_end":722,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29144,"byte_end":29172,"line_start":723,"line_end":723,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29177,"byte_end":29246,"line_start":724,"line_end":724,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29549,"byte_end":29558,"line_start":731,"line_end":731,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29468,"byte_end":29537,"line_start":730,"line_end":730,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29748,"byte_end":29761,"line_start":736,"line_end":736,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29662,"byte_end":29736,"line_start":735,"line_end":735,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29977,"byte_end":29987,"line_start":743,"line_end":743,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":29874,"byte_end":29965,"line_start":742,"line_end":742,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30105,"byte_end":30118,"line_start":748,"line_end":748,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30035,"byte_end":30093,"line_start":747,"line_end":747,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30366,"byte_end":30381,"line_start":756,"line_end":756,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30301,"byte_end":30354,"line_start":755,"line_end":755,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30649,"byte_end":30662,"line_start":764,"line_end":764,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30589,"byte_end":30637,"line_start":763,"line_end":763,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30960,"byte_end":30970,"line_start":777,"line_end":777,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30893,"byte_end":30948,"line_start":776,"line_end":776,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":31247,"byte_end":31256,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":31166,"byte_end":31235,"line_start":782,"line_end":782,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":31448,"byte_end":31461,"line_start":788,"line_end":788,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":31362,"byte_end":31436,"line_start":787,"line_end":787,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":31669,"byte_end":31679,"line_start":795,"line_end":795,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":31566,"byte_end":31657,"line_start":794,"line_end":794,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32334,"byte_end":32344,"line_start":815,"line_end":815,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32139,"byte_end":32173,"line_start":811,"line_end":811,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32178,"byte_end":32181,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32186,"byte_end":32259,"line_start":813,"line_end":813,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32264,"byte_end":32322,"line_start":814,"line_end":814,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32696,"byte_end":32710,"line_start":824,"line_end":824,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32450,"byte_end":32489,"line_start":819,"line_end":819,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32494,"byte_end":32497,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32502,"byte_end":32577,"line_start":821,"line_end":821,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32582,"byte_end":32658,"line_start":822,"line_end":822,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32663,"byte_end":32684,"line_start":823,"line_end":823,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32869,"byte_end":32882,"line_start":829,"line_end":829,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":32799,"byte_end":32857,"line_start":828,"line_end":828,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33130,"byte_end":33145,"line_start":837,"line_end":837,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33065,"byte_end":33118,"line_start":836,"line_end":836,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33422,"byte_end":33435,"line_start":845,"line_end":845,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33362,"byte_end":33410,"line_start":844,"line_end":844,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37018,"byte_end":37023,"line_start":961,"line_end":961,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36781,"byte_end":36845,"line_start":957,"line_end":957,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36850,"byte_end":36853,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36858,"byte_end":36933,"line_start":959,"line_end":959,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36938,"byte_end":37006,"line_start":960,"line_end":960,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37946,"byte_end":37954,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37418,"byte_end":37493,"line_start":973,"line_end":973,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37498,"byte_end":37501,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37506,"byte_end":37578,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37583,"byte_end":37657,"line_start":976,"line_end":976,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37662,"byte_end":37682,"line_start":977,"line_end":977,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37687,"byte_end":37690,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37695,"byte_end":37721,"line_start":979,"line_end":979,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37726,"byte_end":37769,"line_start":980,"line_end":980,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37774,"byte_end":37847,"line_start":981,"line_end":981,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":37852,"byte_end":37934,"line_start":982,"line_end":982,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42823,"byte_end":42828,"line_start":1115,"line_end":1115,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42586,"byte_end":42650,"line_start":1111,"line_end":1111,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42655,"byte_end":42658,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42663,"byte_end":42738,"line_start":1113,"line_end":1113,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42743,"byte_end":42811,"line_start":1114,"line_end":1114,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43470,"byte_end":43478,"line_start":1131,"line_end":1131,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42942,"byte_end":43017,"line_start":1121,"line_end":1121,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43022,"byte_end":43025,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43030,"byte_end":43102,"line_start":1123,"line_end":1123,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43107,"byte_end":43181,"line_start":1124,"line_end":1124,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43186,"byte_end":43206,"line_start":1125,"line_end":1125,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43211,"byte_end":43214,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43219,"byte_end":43245,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ * `Ok(Some(t))` when message is fetched","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43250,"byte_end":43293,"line_start":1128,"line_end":1128,"column_start":5,"column_end":48}},{"value":"/ * `Ok(None)` when channel is closed and no messages left in the queue","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43298,"byte_end":43371,"line_start":1129,"line_end":1129,"column_start":5,"column_end":78}},{"value":"/ * `Err(e)` when there are no messages available, but channel is not yet closed","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":43376,"byte_end":43458,"line_start":1130,"line_end":1130,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":310},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":375},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":388},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":1146,"byte_end":1180,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":1181,"byte_end":1206,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":55756,"byte_end":55826,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":55827,"byte_end":55830,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":55831,"byte_end":55886,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56363,"byte_end":56371,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":348}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56145,"byte_end":56221,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56222,"byte_end":56225,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56226,"byte_end":56283,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56284,"byte_end":56351,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56539,"byte_end":56545,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":351}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56406,"byte_end":56465,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56466,"byte_end":56469,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56470,"byte_end":56527,"line_start":25,"line_end":25,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":362},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59632,"byte_end":59639,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58433,"byte_end":58521,"line_start":70,"line_end":70,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58522,"byte_end":58525,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58526,"byte_end":58601,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58602,"byte_end":58605,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58606,"byte_end":58686,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58687,"byte_end":58765,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58766,"byte_end":58843,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58844,"byte_end":58922,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58923,"byte_end":58971,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58972,"byte_end":58975,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":58976,"byte_end":59036,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59037,"byte_end":59040,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59041,"byte_end":59055,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59056,"byte_end":59059,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59060,"byte_end":59067,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59068,"byte_end":59102,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59103,"byte_end":59141,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59142,"byte_end":59145,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59146,"byte_end":59201,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59202,"byte_end":59205,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59206,"byte_end":59228,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59229,"byte_end":59273,"line_start":91,"line_end":91,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59274,"byte_end":59325,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59326,"byte_end":59374,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59375,"byte_end":59407,"line_start":94,"line_end":94,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59408,"byte_end":59415,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59416,"byte_end":59419,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59420,"byte_end":59466,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59467,"byte_end":59470,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59471,"byte_end":59510,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59511,"byte_end":59556,"line_start":100,"line_end":100,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59557,"byte_end":59608,"line_start":101,"line_end":101,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59609,"byte_end":59616,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59617,"byte_end":59624,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68933,"byte_end":68937,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68440,"byte_end":68492,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68497,"byte_end":68500,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68505,"byte_end":68577,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68582,"byte_end":68654,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68659,"byte_end":68691,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68696,"byte_end":68699,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68704,"byte_end":68776,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68781,"byte_end":68851,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68856,"byte_end":68921,"line_start":340,"line_end":340,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69589,"byte_end":69602,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69007,"byte_end":69068,"line_start":345,"line_end":345,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69073,"byte_end":69117,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69122,"byte_end":69125,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69130,"byte_end":69149,"line_start":348,"line_end":348,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69154,"byte_end":69157,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69162,"byte_end":69232,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69237,"byte_end":69311,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69316,"byte_end":69319,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69324,"byte_end":69392,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69397,"byte_end":69470,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69475,"byte_end":69547,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69552,"byte_end":69577,"line_start":356,"line_end":356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69966,"byte_end":69978,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69698,"byte_end":69767,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69772,"byte_end":69816,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69821,"byte_end":69824,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69829,"byte_end":69900,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":69905,"byte_end":69954,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70402,"byte_end":70413,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70063,"byte_end":70128,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70133,"byte_end":70154,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70159,"byte_end":70162,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70167,"byte_end":70242,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70247,"byte_end":70318,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70323,"byte_end":70390,"line_start":375,"line_end":375,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70637,"byte_end":70652,"line_start":382,"line_end":382,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70475,"byte_end":70568,"line_start":380,"line_end":380,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70573,"byte_end":70625,"line_start":381,"line_end":381,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71314,"byte_end":71326,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":555}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71046,"byte_end":71121,"line_start":399,"line_end":399,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71122,"byte_end":71125,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71126,"byte_end":71217,"line_start":401,"line_end":401,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71218,"byte_end":71285,"line_start":402,"line_end":402,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71716,"byte_end":71724,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71553,"byte_end":71624,"line_start":416,"line_end":416,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71625,"byte_end":71659,"line_start":417,"line_end":417,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72332,"byte_end":72337,"line_start":438,"line_end":438,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71960,"byte_end":72033,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72038,"byte_end":72053,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72058,"byte_end":72061,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72066,"byte_end":72133,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72138,"byte_end":72200,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72205,"byte_end":72278,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72283,"byte_end":72320,"line_start":437,"line_end":437,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72768,"byte_end":72776,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72392,"byte_end":72459,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72464,"byte_end":72467,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72472,"byte_end":72539,"line_start":444,"line_end":444,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72544,"byte_end":72547,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72552,"byte_end":72625,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72630,"byte_end":72696,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72701,"byte_end":72704,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72709,"byte_end":72756,"line_start":449,"line_end":449,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":2418,"byte_end":2422,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":2459,"byte_end":2463,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":2479,"byte_end":2483,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":3288,"byte_end":3295,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":3548,"byte_end":3555,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":3918,"byte_end":3925,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52317,"byte_end":52322,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52359,"byte_end":52364,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52380,"byte_end":52384,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52544,"byte_end":52549,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":55457,"byte_end":55462,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9463,"byte_end":9483,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9508,"byte_end":9526,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9997,"byte_end":10012,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10536,"byte_end":10553,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11096,"byte_end":11105,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11385,"byte_end":11394,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11404,"byte_end":11413,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11901,"byte_end":11913,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12094,"byte_end":12106,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12408,"byte_end":12420,"line_start":226,"line_end":226,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12436,"byte_end":12448,"line_start":228,"line_end":228,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":13048,"byte_end":13060,"line_start":250,"line_end":250,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":13204,"byte_end":13216,"line_start":256,"line_end":256,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":13365,"byte_end":13377,"line_start":262,"line_end":262,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":15473,"byte_end":15483,"line_start":333,"line_end":333,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":18079,"byte_end":18099,"line_start":414,"line_end":414,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":20934,"byte_end":20952,"line_start":498,"line_end":498,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28017,"byte_end":28023,"line_start":693,"line_end":693,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30868,"byte_end":30883,"line_start":775,"line_end":775,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33651,"byte_end":33657,"line_start":856,"line_end":856,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33749,"byte_end":33764,"line_start":862,"line_end":862,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33856,"byte_end":33876,"line_start":868,"line_end":868,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":34932,"byte_end":34950,"line_start":896,"line_end":896,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36201,"byte_end":36221,"line_start":928,"line_end":928,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36466,"byte_end":36484,"line_start":939,"line_end":939,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36763,"byte_end":36771,"line_start":956,"line_end":956,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":40396,"byte_end":40404,"line_start":1048,"line_end":1048,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":40436,"byte_end":40444,"line_start":1050,"line_end":1050,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":40545,"byte_end":40553,"line_start":1056,"line_end":1056,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":41405,"byte_end":41413,"line_start":1080,"line_end":1080,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42559,"byte_end":42576,"line_start":1110,"line_end":1110,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":45405,"byte_end":45422,"line_start":1182,"line_end":1182,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":45523,"byte_end":45540,"line_start":1188,"line_end":1188,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":46392,"byte_end":46409,"line_start":1212,"line_end":1212,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":47595,"byte_end":47609,"line_start":1248,"line_end":1248,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":47892,"byte_end":47904,"line_start":1260,"line_end":1260,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48430,"byte_end":48444,"line_start":1278,"line_end":1278,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48481,"byte_end":48495,"line_start":1279,"line_end":1279,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48533,"byte_end":48545,"line_start":1281,"line_end":1281,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48582,"byte_end":48594,"line_start":1282,"line_end":1282,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48607,"byte_end":48612,"line_start":1284,"line_end":1284,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56653,"byte_end":56661,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56686,"byte_end":56692,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59838,"byte_end":59843,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68424,"byte_end":68430,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70770,"byte_end":70776,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70880,"byte_end":70886,"line_start":393,"line_end":393,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71388,"byte_end":71400,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71749,"byte_end":71757,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71921,"byte_end":71929,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71942,"byte_end":71950,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72879,"byte_end":72887,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":73081,"byte_end":73089,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":73430,"byte_end":73438,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":73542,"byte_end":73550,"line_start":484,"line_end":484,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":1140,"byte_end":1144,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lib.rs","byte_start":1215,"byte_end":1222,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":310}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":2418,"byte_end":2422,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":2459,"byte_end":2463,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":2479,"byte_end":2483,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":3288,"byte_end":3295,"line_start":61,"line_end":61,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":3200}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":3548,"byte_end":3555,"line_start":70,"line_end":70,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":3213}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/lock.rs","byte_start":3918,"byte_end":3925,"line_start":81,"line_end":81,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52317,"byte_end":52322,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52359,"byte_end":52364,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52380,"byte_end":52384,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":52544,"byte_end":52549,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/queue.rs","byte_start":55457,"byte_end":55462,"line_start":165,"line_end":165,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9463,"byte_end":9483,"line_start":119,"line_end":119,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9508,"byte_end":9526,"line_start":120,"line_end":120,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":439},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9953,"byte_end":9957,"line_start":134,"line_end":134,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2989},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9960,"byte_end":9964,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3001},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9967,"byte_end":9972,"line_start":134,"line_end":134,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2610},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":9997,"byte_end":10012,"line_start":135,"line_end":135,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":136}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":10536,"byte_end":10553,"line_start":154,"line_end":154,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11096,"byte_end":11105,"line_start":180,"line_end":180,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":473},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11385,"byte_end":11394,"line_start":190,"line_end":190,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":473},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11404,"byte_end":11413,"line_start":192,"line_end":192,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":11901,"byte_end":11913,"line_start":210,"line_end":210,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12094,"byte_end":12106,"line_start":216,"line_end":216,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":486},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12408,"byte_end":12420,"line_start":226,"line_end":226,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":486},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":12436,"byte_end":12448,"line_start":228,"line_end":228,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":13048,"byte_end":13060,"line_start":250,"line_end":250,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":13204,"byte_end":13216,"line_start":256,"line_end":256,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":140},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":13365,"byte_end":13377,"line_start":262,"line_end":262,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":15473,"byte_end":15483,"line_start":333,"line_end":333,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":18079,"byte_end":18099,"line_start":414,"line_end":414,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":20934,"byte_end":20952,"line_start":498,"line_end":498,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":28017,"byte_end":28023,"line_start":693,"line_end":693,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":30868,"byte_end":30883,"line_start":775,"line_end":775,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33651,"byte_end":33657,"line_start":856,"line_end":856,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":447},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33749,"byte_end":33764,"line_start":862,"line_end":862,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":33856,"byte_end":33876,"line_start":868,"line_end":868,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":34932,"byte_end":34950,"line_start":896,"line_end":896,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":439},"to":{"krate":2,"index":2610}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36201,"byte_end":36221,"line_start":928,"line_end":928,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36466,"byte_end":36484,"line_start":939,"line_end":939,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":439},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":36763,"byte_end":36771,"line_start":956,"line_end":956,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":40396,"byte_end":40404,"line_start":1048,"line_end":1048,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":40436,"byte_end":40444,"line_start":1050,"line_end":1050,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":461},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":40545,"byte_end":40553,"line_start":1056,"line_end":1056,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":461},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":41405,"byte_end":41413,"line_start":1080,"line_end":1080,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":42559,"byte_end":42576,"line_start":1110,"line_end":1110,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":45405,"byte_end":45422,"line_start":1182,"line_end":1182,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":467},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":45523,"byte_end":45540,"line_start":1188,"line_end":1188,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":467},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":46392,"byte_end":46409,"line_start":1212,"line_end":1212,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":467},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":47595,"byte_end":47609,"line_start":1248,"line_end":1248,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":47892,"byte_end":47904,"line_start":1260,"line_end":1260,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48430,"byte_end":48444,"line_start":1278,"line_end":1278,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":519},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48481,"byte_end":48495,"line_start":1279,"line_end":1279,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":519},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48533,"byte_end":48545,"line_start":1281,"line_end":1281,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":528},"to":{"krate":2,"index":2989}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48582,"byte_end":48594,"line_start":1282,"line_end":1282,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":528},"to":{"krate":2,"index":3001}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/mpsc/mod.rs","byte_start":48607,"byte_end":48612,"line_start":1284,"line_end":1284,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56653,"byte_end":56661,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":56686,"byte_end":56692,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":3030}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":59838,"byte_end":59843,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":68424,"byte_end":68430,"line_start":331,"line_end":331,"column_start":9,"column_end":15},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70770,"byte_end":70776,"line_start":387,"line_end":387,"column_start":18,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":70880,"byte_end":70886,"line_start":393,"line_end":393,"column_start":36,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":9293}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71388,"byte_end":71400,"line_start":408,"line_end":408,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71749,"byte_end":71757,"line_start":421,"line_end":421,"column_start":23,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":9300}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71921,"byte_end":71929,"line_start":428,"line_end":428,"column_start":28,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2336}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":71942,"byte_end":71950,"line_start":430,"line_end":430,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":72879,"byte_end":72887,"line_start":455,"line_end":455,"column_start":20,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":12560}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":73081,"byte_end":73089,"line_start":463,"line_end":463,"column_start":25,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":346},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":73430,"byte_end":73438,"line_start":478,"line_end":478,"column_start":18,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":3224}},{"span":{"file_name":"/home/gustavo/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.18/src/oneshot.rs","byte_start":73542,"byte_end":73550,"line_start":484,"line_end":484,"column_start":36,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":9293}}]}